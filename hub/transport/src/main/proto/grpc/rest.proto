syntax = "proto2";

option java_multiple_files = true;
option java_package = "alluxio.hub.proto";
option java_outer_classname = "RestProto";

package alluxio.hub.proto;

// Messages used in request/responses to the Hub Manager API
message HubAuthentication {
  optional string api_key = 1;
  optional string secret_key = 2;
}

message Status {
  optional string uptime = 1;
  optional string java_version = 2;
  repeated HubCluster hub_cluster = 3;
  repeated AlluxioCluster alluxio_cluster = 4;
}

enum ExecutionType {
  PARALLEL = 0;
  SEQUENTIAL = 1;
}

enum AlluxioNodeType {
  MASTER = 0;
  SECONDARY_MASTER = 1;
  WORKER = 2;
  JOB_MASTER = 3;
  JOB_WORKER = 4;
  PROXY = 5;
  ALL = 1000;
}

enum UploadProcessType {
  ALLUXIO = 0;
  PRESTO = 1;
}

enum ProcessState {
  STOPPED = 0;
  STARTING = 1;
  RUNNING = 2;
  STOPPING = 3;
  UNKNOWN = 4;
}

enum HubNodeState {
  ALIVE = 0;
  LOST = 1;
}

enum ValidationStatus {
  OK = 0;
  WARNING = 1;
  FAILED = 2;
  SKIPPED = 3;
}

enum HubStatus {
  MANAGER_START_CONNECTION = 0;
  MANAGER_STOP_CONNECTION = 1;
  MANAGER_NOT_CONNECTED = 2;
  MANAGER_CONNECTION_OK = 3;
}

enum AlluxioEdition {
  ALLUXIO_COMMUNITY_EDITION = 0;
}

message AlluxioProcessStatus {
  optional AlluxioNodeType node_type = 1;
  optional ProcessState state = 2;
  optional uint32 pid = 3;
}

/**
 * A status object describing the host and status of the Alluxio processes that are supposed to run
 * on it.
 *
 * It is assumed that only the processes included with this message are supposed to run on
 * the given agent.
 */
message AlluxioNodeStatus {
  repeated AlluxioProcessStatus process = 1;
  optional string hostname = 2;
}

message HubNodeAddress {
  optional string hostname = 1;
  optional uint32 rpc_port = 2;
}

message HubNodeStatus {
  optional HubNodeAddress node = 1;
  optional HubNodeState state = 2;
}

message AlluxioCluster {
  repeated AlluxioNodeStatus node = 1;
}

message HubCluster {
  repeated HubNodeStatus node = 1;
}

enum ProcessStateChange {
  STOP = 1;
  START = 2;
  RESTART = 3;
}

message AlluxioConfigurationSet {
  optional string site_properties = 1;
  optional string alluxio_env = 2;
  optional string log4j_properties = 3;
}

message MountPointInfo {
  optional string ufsType = 1;
  optional string ufsUri = 2;
  optional string alluxioPath = 3;
  optional bool readOnly = 4;
  optional bool shared = 5;
  map<string, string> properties = 6;
  optional HDFSMountPointInfo hdfsInfo = 7;
}

message HDFSMountPointInfo {
  optional bool enableSync = 1;
  optional string coreSiteFile = 2;
  optional string hdfsSiteFile = 3;
  optional string hdfsVersion = 4;
  optional string coreSiteFilePath = 5;
  optional string hdfsSiteFilePath = 6;
}

message ValidationResult {
  optional string name = 1;
  optional ValidationStatus testResult = 2;
  optional string output = 3;
  optional string advice = 4;
  optional string description = 5;
}

message HmsValidationInfo {
  optional string catalog_name = 1;
  optional string metastore_uri = 2;
  repeated string table_location_scheme = 3;
  optional string hive_client_principal = 4;
  optional string hive_client_keytab = 5;
  optional string hms_service_pricipal = 6;
  optional string alluxio_client_principal = 7;
  optional string alluxio_client_keytab = 8;
  optional string advanced_hive_config = 9;
  optional string advanced_alluxio_config = 10;
  optional string database_name = 11;
  optional string table_name = 12;
  optional string socket_timeout = 13;
}

message HmsValidation {
  optional HmsValidationInfo before = 1;
  optional HmsValidationInfo new = 2;
}

message PrestoCatalogListing {
  optional string catalog_name = 1;
  optional string hive_metastore_uri = 2;
}

message PrestoCatalogListingResult {
  repeated PrestoCatalogListing catalog = 1;
}

message UploadFile {
  optional string name = 1;
  optional string permission = 2;
  optional string content = 3;  // Base64 encoded string
  optional AlluxioNodeType destination = 4;
  optional UploadProcessType process_type = 5;
}

message RemoveFile {
  optional string name = 1;
  optional AlluxioNodeType location = 2;
  optional UploadProcessType process_type = 3;
}

message ListFile {
  optional string name = 1;
  optional AlluxioNodeType location = 2;
  optional UploadProcessType process_type = 3;
}

message SpeedStat {
  optional double totalDurationSeconds = 1;
  optional uint64 totalSizeBytes = 2;
  optional double maxSpeedMbps = 3 ;
  optional double minSpeedMbps = 4;
  optional double avgSpeedMbps = 5;
  optional double stdDev = 6;
}

message SpeedTestParameter {
  optional string dataSize = 1;
  optional int32 threads = 2;
  optional string path = 3;
  map<string, string> properties = 4;
}

// Elasticsearch specific messages
message ElasticsearchInfo {
  optional ElasticsearchEnvironmentVariables env_variables = 1;
  optional ElasticsearchDashboards dashboards = 2;
  map<string, string> errors = 3;
}

message ElasticsearchEnvironmentVariables {
  optional string hub_es_cluster_endpoint = 1;
  optional string hub_es_cluster_port = 2;
  optional string hub_es_username = 3;
  optional string hub_es_password = 4;
  optional string hub_cluster_id = 5;
}

message ElasticsearchDashboards {
  map<string, string> dashboard_ids = 1;
}

