alluxio.worker.allocator.class:
  "The strategy that a worker uses to allocate space among storage directories in certain storage
  layer. Valid options include: `alluxio.worker.block.allocator.MaxFreeAllocator`,
  `alluxio.worker.block.allocator.GreedyAllocator`,
  `alluxio.worker.block.allocator.RoundRobinAllocator`."
alluxio.worker.bind.host:
  The hostname Alluxio's worker node binds to. See <a href="#configure-multihomed-networks">multi-homed networks</a>
alluxio.worker.block.heartbeat.interval.ms:
  The interval (in milliseconds) between block worker's heartbeats
alluxio.worker.block.heartbeat.timeout.ms:
  The timeout value (in milliseconds) of block worker's heartbeat
alluxio.worker.block.threads.max:
  The maximum number of incoming RPC requests to block worker that can be handled.
  This value is used to configure maximum number of threads in Thrift thread pool with block worker.
  This value should be greater than the sum of `alluxio.user.block.worker.client.threads` across
  concurrent Alluxio clients. Otherwise, the worker connection pool can be drained, preventing new
  connections from being established.
alluxio.worker.block.threads.min:
  The minimum number of threads used to handle incoming RPC requests to block worker.
  This value is used to configure minimum number of threads in Thrift thread pool with block worker.
alluxio.worker.data.bind.host:
  The hostname that the Alluxio worker's data server runs on. See
  <a href="#configure-multihomed-networks">multi-homed networks</a>
alluxio.worker.data.folder:
  A relative path within each storage directory used as the data folder for Alluxio worker to put data for tiered store.
alluxio.worker.data.folder.tmp:
  A relative path in alluxio.worker.data.folder used to store the temporary data for uncommitted files.
alluxio.worker.data.tmp.subdir.max:
  The maximum number of sub-directories allowed to be created in alluxio.worker.data.tmp.folder.
alluxio.worker.data.port:
  The port Alluxio's worker's data server runs on.
alluxio.worker.data.server.class:
  "Selects the networking stack to run the worker with. Valid options are:
  `alluxio.worker.netty.NettyDataServer`."
alluxio.worker.evictor.class:
  The strategy that a worker uses to evict block files when a storage layer runs out of space. Valid
  options include `alluxio.worker.block.evictor.LRFUEvictor`,
  `alluxio.worker.block.evictor.GreedyEvictor`, `alluxio.worker.block.evictor.LRUEvictor`.
alluxio.worker.evictor.lrfu.attenuation.factor:
  A attenuation factor in [2, INF) to control the behavior of LRFU.
alluxio.worker.evictor.lrfu.step.factor:
  "A factor in [0, 1] to control the behavior of LRFU: smaller value makes LRFU more similar to
  LFU; and larger value makes LRFU closer to LRU."
alluxio.worker.file.persist.pool.size:
  The size of the thread pool per worker, in which the thread persists an ASYNC_THROUGH file to under storage.
alluxio.worker.file.persist.rate.limit.enabled:
  Whether to enable rate limiting when performing asynchronous persistence.
alluxio.worker.file.persist.rate.limit:
  The rate limit of asynchronous persistence per second.
alluxio.worker.filesystem.heartbeat.interval.ms:
  The heartbeat interval (in milliseconds) between the worker and file system master.
alluxio.worker.hostname:
  The hostname of Alluxio worker.
alluxio.worker.memory.size:
  Memory capacity of each worker node.
alluxio.worker.network.netty.boss.threads:
  How many threads to use for accepting new requests.
alluxio.worker.network.netty.file.transfer:
  When returning files to the user, select how the data is transferred; valid options are
  `MAPPED` (uses java MappedByteBuffer) and `TRANSFER` (uses Java FileChannel.transferTo).
alluxio.worker.network.netty.shutdown.quiet.period:
  The quiet period (in seconds). When the netty server is shutting down, it will ensure that no
  RPCs occur during the quiet period. If an RPC occurs, then the quiet period will restart before
  shutting down the netty server.
alluxio.worker.network.netty.shutdown.timeout:
  Maximum amount of time to wait (in seconds) until the netty server is shutdown (regardless of
  the quiet period).
alluxio.worker.network.netty.watermark.high:
  Determines how many bytes can be in the write queue before switching to non-writable.
alluxio.worker.network.netty.watermark.low:
  Once the high watermark limit is reached, the queue must be flushed down to the low watermark
  before switching back to writable.
alluxio.worker.network.netty.worker.threads:
  "How many threads to use for processing requests. Zero defaults to #cpuCores * 2."
alluxio.worker.port:
  The port Alluxio's worker node runs on.
alluxio.worker.session.timeout.ms:
  Timeout (in milliseconds) between worker and client connection indicating a lost session
  connection.
alluxio.worker.tieredstore.block.locks:
  Total number of block locks for an Alluxio block worker. Larger value leads to finer locking
  granularity, but uses more space.
alluxio.worker.tieredstore.levels:
  The number of storage tiers on the worker
alluxio.worker.tieredstore.level0.alias:
  The alias of the highest storage tier on this worker. It must match one of
  the global storage tiers from the master configuration. We disable placing an
  alias lower in the global hierarchy before an alias with a higher postion on
  the worker hierarchy. So by default, SSD cannot come before MEM on any worker.
alluxio.worker.tieredstore.level0.dirs.path:
  The path of storage directory path for the top storage layer. Note for MacOS the value
  should be `/Volumes/`
alluxio.worker.tieredstore.level0.dirs.quota:
  The capacity of the top storage layer.
alluxio.worker.tieredstore.level0.reserved.ratio:
  The portion of space reserved in the top storage layer (a value between 0 and 1).
alluxio.worker.tieredstore.reserver.enabled:
  Whether to enable tiered store reserver service or not.
alluxio.worker.tieredstore.reserver.interval.ms:
  The time period (in milliseconds) of space reserver service, which keeps certain portion of
  available space on each layer.
alluxio.worker.web.bind.host:
  The hostname Alluxio worker's web server binds to. See <a href="#configure-multihomed-networks">multi-homed networks</a>
alluxio.worker.web.hostname:
  The hostname Alluxio worker's web UI binds to.
alluxio.worker.web.port:
  The port Alluxio worker's web UI runs on.
alluxio.worker.keytab.file:
  Kerberos keytab file for Alluxio worker.
alluxio.worker.principal:
  Kerberos principal for Alluxio worker.
