Worker.ActiveClients:
  'The number of clients actively reading from or writing to this worker'
Worker.ActiveOperations:
  'The number of active RPCs in the worker, including control RPCs and data I/O. Used to tell if the worker is idle or busy.'
Worker.ActiveRpcReadCount:
  'The number of active read-RPCs managed by this worker'
Worker.ActiveRpcWriteCount:
  'The number of active write-RPCs managed by this worker'
Worker.BlockReaderCompleteTaskCount:
  'The approximate total number of block read tasks that have completed execution'
Worker.BlockReaderThreadActiveCount:
  'The approximate number of block read threads that are actively executing tasks in reader thread pool'
Worker.BlockReaderThreadCurrentCount:
  'The current number of read threads in the reader thread pool'
Worker.BlockReaderThreadMaxCount:
  'The maximum allowed number of block read thread in the reader thread pool'
Worker.BlockRemoverBlocksRemovedCount:
  'The total number of blocks successfully removed from this worker by asynchronous block remover.'
Worker.BlockRemoverRemovingBlocksSize:
  'The size of blocks is being removed from this worker at a moment by asynchronous block remover.'
Worker.BlockRemoverTryRemoveBlocksSize:
  'The number of blocks to be removed from this worker at a moment by asynchronous block remover.'
Worker.BlockRemoverTryRemoveCount:
  'The total number of blocks this worker attempted to remove with asynchronous block remover.'
Worker.BlockSerializedCompleteTaskCount:
  'The approximate total number of block serialized tasks that have completed execution'
Worker.BlockSerializedThreadActiveCount:
  'The approximate number of block serialized threads that are actively executing tasks in serialized thread pool'
Worker.BlockSerializedThreadCurrentCount:
  'The current number of serialized threads in the serialized thread pool'
Worker.BlockSerializedThreadMaxCount:
  'The maximum allowed number of block serialized thread in the serialized thread pool'
Worker.BlockWriterCompleteTaskCount:
  'The approximate total number of block write tasks that have completed execution'
Worker.BlockWriterThreadActiveCount:
  'The approximate number of block write threads that are actively executing tasks in writer thread pool'
Worker.BlockWriterThreadCurrentCount:
  'The current number of write threads in the writer thread pool'
Worker.BlockWriterThreadMaxCount:
  'The maximum allowed number of block write thread in the writer thread pool'
Worker.BlocksAccessed:
  'Total number of times any one of the blocks in this worker is accessed.'
Worker.BlocksCached:
  'Total number of blocks used for caching data in an Alluxio worker'
Worker.BlocksCancelled:
  'Total number of aborted temporary blocks in this worker.'
Worker.BlocksDeleted:
  'Total number of deleted blocks in this worker by external requests.'
Worker.BlocksEvicted:
  'Total number of evicted blocks in this worker.'
Worker.BlocksEvictionRate:
  'Block eviction rate in this worker.'
Worker.BlocksLost:
  'Total number of lost blocks in this worker.'
Worker.BlocksPromoted:
  'Total number of times any one of the blocks in this worker moved to a new tier.'
Worker.BlocksReadLocal:
  'Total number of local blocks read by this worker.'
Worker.BlocksReadRemote:
  'Total number of a remote blocks read by this worker.'
Worker.BlocksReadUfs:
  'Total number of a UFS blocks read by this worker.'
Worker.BytesReadDirect:
  'Total number of bytes read from the this worker without external RPC involved. Data exists in worker storage or is fetched by this worker from underlying UFSes. This records data read by worker internal calls (e.g. a client embedded in this worker).'
Worker.BytesReadDirectThroughput:
  'Throughput of bytes read from the this worker without external RPC involved. Data exists in worker storage or is fetched by this worker from underlying UFSes. This records data read by worker internal calls (e.g. a client embedded in this worker).'
Worker.BytesReadDomain:
  'Total number of bytes read from the this worker via domain socket'
Worker.BytesReadDomainThroughput:
  'Bytes read throughput from the this worker via domain socket'
Worker.BytesReadPerUfs:
  'Total number of bytes read from a specific Alluxio UFS by this worker'
Worker.BytesReadRemote:
  'Total number of bytes read from the this worker via network (RPC). Data exists in worker storage or is fetched by this worker from underlying UFSes. This does not include short-circuit local reads and domain socket reads.'
Worker.BytesReadRemoteThroughput:
  'Throughput of bytes read from the this worker via network (RPC). Data exists in worker storage or is fetched by this worker from underlying UFSes. This does not include short-circuit local reads and domain socket reads'
Worker.BytesReadUfsThroughput:
  'Bytes read throughput from all Alluxio UFSes by this worker'
Worker.BytesWrittenDirect:
  'Total number of bytes written to this worker without external RPC involved. Data is written to worker storage or is written by this worker to underlying UFSes. This records data written by worker internal calls (e.g. a client embedded in this worker).'
Worker.BytesWrittenDirectThroughput:
  'Total number of bytes written to this worker without external RPC involved. Data is written to worker storage or is written by this worker to underlying UFSes. This records data written by worker internal calls (e.g. a client embedded in this worker).'
Worker.BytesWrittenDomain:
  'Total number of bytes written to this worker via domain socket'
Worker.BytesWrittenDomainThroughput:
  'Throughput of bytes written to this worker via domain socket'
Worker.BytesWrittenPerUfs:
  'Total number of bytes written to a specific Alluxio UFS by this worker'
Worker.BytesWrittenRemote:
  'Total number of bytes written to this worker via network (RPC). Data is written to worker storage or is written by this worker to underlying UFSes. This does not include short-circuit local writes and domain socket writes.'
Worker.BytesWrittenRemoteThroughput:
  'Bytes write throughput to this worker via network (RPC). Data is written to worker storage or is written by this worker to underlying UFSes. This does not include short-circuit local writes and domain socket writes.'
Worker.BytesWrittenUfsThroughput:
  'Bytes write throughput to all Alluxio UFSes by this worker'
Worker.CacheBlocksSize:
  'Total number of bytes that being cached through cache requests'
Worker.CacheFailedBlocks:
  'Total number of failed cache blocks in this worker'
Worker.CacheManagerCompleteTaskCount:
  'The approximate total number of block cache tasks that have completed execution'
Worker.CacheManagerThreadActiveCount:
  'The approximate number of block cache threads that are actively executing tasks in the cache manager thread pool'
Worker.CacheManagerThreadCurrentCount:
  'The current number of cache threads in the cache manager thread pool'
Worker.CacheManagerThreadMaxCount:
  'The maximum allowed number of block cache thread in the cache manager thread pool'
Worker.CacheManagerThreadQueueWaitingTaskCount:
  'The current number of tasks waiting in the work queue in the cache manager thread pool, bounded by alluxio.worker.network.async.cache.manager.queue.max'
Worker.CacheRemoteBlocks:
  'Total number of blocks that need to be cached from remote source'
Worker.CacheRequests:
  'Total number of cache request received by this worker'
Worker.CacheRequestsAsync:
  'Total number of async cache request received by this worker'
Worker.CacheRequestsSync:
  'Total number of sync cache request received by this worker'
Worker.CacheSucceededBlocks:
  'Total number of cache succeeded blocks in this worker'
Worker.CacheUfsBlocks:
  'Total number of blocks that need to be cached from local source'
Worker.CapacityFree:
  'Total free bytes on all tiers of a specific Alluxio worker'
Worker.CapacityTotal:
  'Total capacity (in bytes) on all tiers of a specific Alluxio worker'
Worker.CapacityUsed:
  'Total used bytes on all tiers of a specific Alluxio worker'
Worker.MasterRegistrationSuccessCount:
  'Total number of the succeed master registration.'
Worker.RpcQueueLength:
  'Length of the worker rpc queue. Use this metric to monitor the RPC pressure on worker.'
Worker.RpcThreadActiveCount:
  'The number of threads that are actively executing tasks in the worker RPC executor thread pool. Use this metric to monitor the RPC pressure on worker.'
Worker.RpcThreadCurrentCount:
  'Current count of threads in the worker RPC executor thread pool. Use this metric to monitor the RPC pressure on worker.'
