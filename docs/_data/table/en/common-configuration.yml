alluxio.conf.dir:
  The directory containing files used to configure Alluxio.
alluxio.debug:
  Set to true to enable debug mode which has additional logging and info in the Web UI.
alluxio.extensions.dir:
  The directory containing Alluxio extensions.
alluxio.fuse.cached.paths.max:
  N/A
alluxio.fuse.debug.enabled:
  N/A
alluxio.fuse.fs.name:
  N/A
alluxio.fuse.fs.root:
  N/A
alluxio.fuse.maxwrite.bytes:
  N/A
alluxio.fuse.mount.default:
  N/A
alluxio.home:
  Alluxio installation directory.
alluxio.integration.master.resource.cpu:
  N/A
alluxio.integration.master.resource.mem:
  N/A
alluxio.integration.mesos.alluxio.jar.url:
  N/A
alluxio.integration.mesos.jdk.path:
  N/A
alluxio.integration.mesos.jdk.url:
  N/A
alluxio.integration.mesos.master.name:
  N/A
alluxio.integration.mesos.master.node.count:
  N/A
alluxio.integration.mesos.principal:
  N/A
alluxio.integration.mesos.role:
  N/A
alluxio.integration.mesos.secret:
  N/A
alluxio.integration.mesos.user:
  N/A
alluxio.integration.mesos.worker.name:
  N/A
alluxio.integration.worker.resource.cpu:
  N/A
alluxio.integration.worker.resource.mem:
  N/A
alluxio.integration.yarn.workers.per.host.max:
  N/A
alluxio.logger.type:
  N/A
alluxio.logs.dir:
  The path to store log files.
alluxio.metrics.conf.file:
  The file path of the metrics system configuration file. By default it is `metrics.properties` in the `conf` directory.
alluxio.network.host.resolution.timeout:
  During startup of the Master and Worker processes Alluxio needs to ensure that they are listening on externally resolvable and reachable host names. To do this, Alluxio will automatically attempt to select an appropriate host name if one was not explicitly specified. This represents the maximum amount of time spent waiting to determine if a candidate host name is resolvable over the network.
alluxio.network.netty.heartbeat.timeout:
  The amount of time the server will wait before closing a netty connection if there has not been any incoming traffic. The client will periodically heartbeat when there is no activity on a connection. This value should be the same on the clients and server.
alluxio.network.thrift.frame.size.bytes.max:
  (Experimental) The largest allowable frame size used for Thrift RPC communication.
alluxio.proxy.stream.cache.timeout:
  N/A
alluxio.proxy.web.bind.host:
  N/A
alluxio.proxy.web.hostname:
  N/A
alluxio.proxy.web.port:
  N/A
alluxio.site.conf.dir:
  Comma-separated search path for alluxio-site.properties
alluxio.test.mode:
  Flag used only during tests to allow special behavior.
alluxio.underfs.address:
  Alluxio directory in the under file system.
alluxio.underfs.allow.set.owner.failure:
  N/A
alluxio.underfs.gcs.owner.id.to.username.mapping:
  Optionally, specify a preset gcs owner id to Alluxio username static mapping in the format "id1=user1;id2=user2". The Google Cloud Storage IDs can be found at the console address https://console.cloud.google.com/storage/settings . Please use the "Owners" one.
alluxio.underfs.glusterfs.impl:
  Glusterfs hook with hadoop.
alluxio.underfs.glusterfs.mapred.system.dir:
  Optionally, specify subdirectory under GlusterFS for intermediary MapReduce data.
alluxio.underfs.glusterfs.mounts:
  N/A
alluxio.underfs.glusterfs.volumes:
  N/A
alluxio.underfs.hdfs.configuration:
  Location of the hdfs configuration file.
alluxio.underfs.hdfs.impl:
  The implementation class of the HDFS as the under storage system.
alluxio.underfs.hdfs.prefixes:
  Optionally, specify which prefixes should run through the Apache Hadoop implementation of UnderFileSystem. The delimiter is any whitespace and/or ','.
alluxio.underfs.hdfs.remote:
  Boolean indicating whether or not the under storage worker nodes are remote with respect to Alluxio worker nodes. If set to true, Alluxio will not attempt to discover locality information from the under storage because locality is impossible. This will improve performance. The default value is false.
alluxio.underfs.listing.length:
  The maximum number of directory entries to list in a single query to under file system. If the total number of entries is greater than the specified length, multiple queries will be issued.
alluxio.underfs.object.store.mount.shared.publicly:
  Whether or not to share object storage under storage system mounted point with all Alluxio users. Note that this configuration has no effect on HDFS nor local UFS.
alluxio.underfs.object.store.service.threads:
  The number of threads in executor pool for parallel object store UFS operations.
alluxio.underfs.oss.connection.max:
  N/A
alluxio.underfs.oss.connection.timeout:
  N/A
alluxio.underfs.oss.connection.ttl:
  N/A
alluxio.underfs.oss.socket.timeout:
  N/A
alluxio.underfs.s3.admin.threads.max:
  The maximum number of threads to use for metadata operations when communicating with S3. These operations may be fairly concurrent and frequent but should not take much time to process.
alluxio.underfs.s3.disable.dns.buckets:
  Optionally, specify to make all S3 requests path style.
alluxio.underfs.s3.endpoint:
  Optinally, to reduce data latency or visit resources which are sepreted in defferent AWS regions, specify a regional endpoint to make aws requests. An endpoint is a URL that is the entry point for a web service. For example, s3.cn-north-1.amazonaws.com.cn is an entry point for the Amazon S3 service in beijing region.
alluxio.underfs.s3.endpoint.http.port:
  N/A
alluxio.underfs.s3.endpoint.https.port:
  N/A
alluxio.underfs.s3.owner.id.to.username.mapping:
  Optionally, specify a preset s3 canonical id to Alluxio username static mapping, in the format "id1=user1;id2=user2". The AWS S3 canonical ID can be found at the console address https://console.aws.amazon.com/iam/home?#security_credential . Please expand the "Account Identifiers" tab and refer to "Canonical User ID".
alluxio.underfs.s3.proxy.host:
  Optionally, specify a proxy host for communicating with S3.
alluxio.underfs.s3.proxy.https.only:
  If using a proxy to communicate with S3, determine whether to talk to the proxy using https.
alluxio.underfs.s3.proxy.port:
  Optionally, specify a proxy port for communicating with S3.
alluxio.underfs.s3.threads.max:
  The maximum number of threads to use for communicating with S3 and the maximum number of concurrent connections to S3. Includes both threads for data upload and metadata operations. This number should be at least as large as the max admin threads plus max upload threads.
alluxio.underfs.s3.upload.threads.max:
  The maximum number of threads to use for uploading data to S3 for multipart uploads. These operations can be fairly expensive, so multiple threads are encouraged. However, this also splits the bandwidth between threads, meaning the overall latency for completing an upload will be higher for more threads.
alluxio.underfs.s3a.consistency.timeout:
  The duration to wait for metadata consistency from the under storage. This is only used by internal Alluxio operations which should be successful, but may appear unsuccessful due to eventual consistency.
alluxio.underfs.s3a.directory.suffix:
  Directories are represented in S3 as zero-byte objects named with the specified suffix.
alluxio.underfs.s3a.inherit_acl:
  Optionally disable this to disable inheriting bucket ACLs on objects.
alluxio.underfs.s3a.list.objects.v1:
  Whether to use version 1 of GET Bucket (List Objects) API.
alluxio.underfs.s3a.request.timeout:
  The timeout for a single request to S3. Infinity if set to 0. Setting this property to a non-zero value can improve performance by avoiding the long tail of requests to S3. For very slow connections to S3, consider increasing this value or setting it to 0.
alluxio.underfs.s3a.secure.http.enabled:
  Whether or not to use HTTPS protocol when communicating with s3.
alluxio.underfs.s3a.server.side.encryption.enabled:
  Whether or not to encrypt data stored in s3.
alluxio.underfs.s3a.signer.algorithm:
  The signature algorithm which should be used to sign requests to the s3 service. This is optional, and if not set, the client will automatically determine it. For interacting with an s3 endpoint which only supports v2 signatures, set this to "S3SignerType".
alluxio.underfs.s3a.socket.timeout:
  Length of the socket timeout when communicating with s3.
alluxio.version:
  N/A
alluxio.web.resources:
  Path to the web application resources.
alluxio.web.threads:
  How many threads to use for the web server.
alluxio.work.dir:
  The directory to use for Alluxio's working directory. By default, the journal, logs, and under file system data (if using local filesystem) are written here.
alluxio.zookeeper.address:
  Address of ZooKeeper
alluxio.zookeeper.election.path:
  Election directory in ZooKeeper.
alluxio.zookeeper.enabled:
  If true, setup master fault tolerant mode using ZooKeeper.
alluxio.zookeeper.leader.inquiry.retry:
  The number of retries to inquire leader from ZooKeeper.
alluxio.zookeeper.leader.path:
  Leader directory in ZooKeeper.
aws.accessKeyId:
  N/A
aws.secretKey:
  N/A
fs.gcs.accessKeyId:
  N/A
fs.gcs.secretAccessKey:
  N/A
fs.oss.accessKeyId:
  N/A
fs.oss.accessKeySecret:
  N/A
fs.oss.endpoint:
  N/A
fs.s3n.awsAccessKeyId:
  N/A
fs.s3n.awsSecretAccessKey:
  N/A
fs.swift.apikey:
  N/A
fs.swift.auth.method:
  N/A
fs.swift.auth.url:
  N/A
fs.swift.password:
  N/A
fs.swift.region:
  N/A
fs.swift.simulation:
  N/A
fs.swift.tenant:
  N/A
fs.swift.use.public.url:
  N/A
fs.swift.user:
  N/A
