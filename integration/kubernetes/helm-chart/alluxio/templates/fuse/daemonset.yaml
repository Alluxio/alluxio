#
# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0
# (the "License"). You may not use this work except in compliance with the License, which is
# available at www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied, as more fully set forth in the License.
#
# See the NOTICE file distributed with this work for information regarding copyright ownership.
#


apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "alluxio.fullname" . }}-fuse
  labels:
    app: {{ template "alluxio.name" . }}
    chart: {{ template "alluxio.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: alluxio-fuse
spec:
  selector:
    matchLabels:
      app: {{ template "alluxio.name" . }}
      chart: {{ template "alluxio.chart" . }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
      role: alluxio-fuse
  template:
    metadata:
      labels:
        app: {{ template "alluxio.name" . }}
        chart: {{ template "alluxio.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: alluxio-fuse
    spec:
      hostNetwork: {{ .Values.fuse.hostNetwork }}
      dnsPolicy: {{ .Values.fuse.dnsPolicy }}
      nodeSelector:
      {{- if .Values.fuse.nodeSelector }}
{{ toYaml .Values.fuse.nodeSelector | trim | indent 8  }}
      {{- else if .Values.nodeSelector }}
{{ toYaml .Values.nodeSelector | trim | indent 8  }}
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.fuse.user }}
        runAsGroup: {{ .Values.fuse.group }}
        fsGroup: {{ .Values.fuse.fsGroup }}
      affinity:
        podAffinity:
          RequiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "alluxio.name" . }}
              - key: role
                operator: In
                values:
                - alluxio-worker
      containers:
        - name: alluxio-fuse
          image: {{ .Values.fuse.image }}:{{ .Values.fuse.imageTag }}
          imagePullPolicy: {{ .Values.fuse.imagePullPolicy }}
          {{- if .Values.fuse.resources  }}
          resources:
            {{- if .Values.fuse.resources.limits }}
            limits:
              cpu: {{ .Values.fuse.resources.limits.cpu }}
              memory: {{ .Values.fuse.resources.limits.memory }}
            {{- end }}
            {{- if .Values.fuse.resources.requests }}
            requests:
              cpu: {{ .Values.fuse.resources.requests.cpu }}
              memory: {{ .Values.fuse.resources.requests.memory }}
            {{- end }}
          {{- end }}
          command: ["/entrypoint.sh"]
          {{- if .Values.fuse.args }}
          args:
{{ toYaml .Values.fuse.args | trim | indent 12 }}
          {{- end }}
          env:
          - name: ALLUXIO_CLIENT_HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: ALLUXIO_CLIENT_JAVA_OPTS
            value: " -Dalluxio.user.hostname=$(ALLUXIO_CLIENT_HOSTNAME) "
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_ADMIN
          lifecycle:
            preStop:
              exec:
                command: ["/opt/alluxio/integration/fuse/bin/alluxio-fuse", "unmount", "/alluxio-fuse"]
          envFrom:
          - configMapRef:
              name: {{ template "alluxio.fullname" . }}-config
          volumeMounts:
            - name: alluxio-fuse-device
              mountPath: /dev/fuse
            - name: alluxio-fuse-mount
              mountPath: /alluxio-fuse
              mountPropagation: Bidirectional
            {{- if eq .Values.worker.shortCircuitPolicy "uuid" }}
            - name: alluxio-domain
              mountPath: /opt/domain
            {{- end }}
            {{- if eq .Values.worker.shortCircuitPolicy "local" }}
              {{- if .Values.tieredstore }} 
                {{- if .Values.tieredstore.levels }} 
                  {{- range .Values.tieredstore.levels }}
                    {{- if .mediumtype }}
                      {{- if contains "," .mediumtype }}
            {{- $type := .type }}
            {{- $path := .path }}
            {{- $split := split "," .mediumtype }}
                        {{- range $key, $val := $split }} 
                          {{- if eq $type "hostPath"}}
            - mountPath:  {{ index ($path | split ",") $key }}
              name: {{ $val | lower }}-{{ $key | replace "_" "" }}
                          {{- end}}
                        {{- end}}
                      {{- end}}
                      {{- else}}
                      {{- if eq .type "hostPath"}}
            - name: {{ .alias | lower }}
              mountPath: {{ .path }}
                      {{- else }}
            # report error and exit
            {{ .name }} with {{ .type }} is not supported in shortCircuitPolicy local
                      {{- end }} 
                    {{- end }} 
                  {{- end }} 
                {{- end }} 
              {{- end }} 
            {{- end }}
      restartPolicy: Always
      volumes:
        - name: alluxio-fuse-device
          hostPath:
            path: /dev/fuse
            type: File
        - name: alluxio-fuse-mount
          hostPath:
            path: /alluxio-fuse
            type: DirectoryOrCreate
        {{- if eq .Values.worker.shortCircuitPolicy "uuid" }}
        - name: alluxio-domain
          hostPath:
            path: {{ .Values.domainHostPath }}
            type: "Directory"
        {{- end }}
        {{- if eq .Values.worker.shortCircuitPolicy "local" }}
          {{- if .Values.tieredstore }} 
            {{- if .Values.tieredstore.levels }} 
              {{- range .Values.tieredstore.levels }}
                {{- if .mediumtype }}
                  {{- if contains "," .mediumtype }}
           {{- $split := split "," .mediumtype }}
           {{- $type := .type }}
           {{- $path := .path }}
                    {{- range $key, $val := $split }} 
                      {{- if eq $type "hostPath"}}
        - hostPath:
            path: {{ index ($path | split ",") $key }}
            type: DirectoryOrCreate
          name: {{ $val | lower }}-{{ $key | replace "_" "" }}
                      {{- else }}
        - name: {{ $val | lower }}-{{ $key | replace "_" "" }}
          emptyDir:
            medium: "Memory"
                        {{- if .quota }} 
            sizeLimit: {{ .quota }}
                        {{- end}} 
                      {{- end}}
                    {{- end}}
                  {{- end}}
                  {{- else}}
                    {{- if eq .type "hostPath"}}
        - hostPath:
            path: {{ .path }}
            type: DirectoryOrCreate
          name: {{ .alias | lower }}
                    {{- end }}
                  {{- end }} 
                {{- end }} 
              {{- end }} 
            {{- end }} 
        {{- end }}
