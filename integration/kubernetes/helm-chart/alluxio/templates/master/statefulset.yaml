#
# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0
# (the "License"). You may not use this work except in compliance with the License, which is
# available at www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied, as more fully set forth in the License.
#
# See the NOTICE file distributed with this work for information regarding copyright ownership.
#

{{ $root := . -}}
{{- $isRoot := eq (int $root.Values.user) 0 }}
{{- $ugi := printf "%v:%v" $root.Values.user $root.Values.group }}
{{- $masterCount := int .Values.master.count }}
{{- $isSingleMaster := eq $masterCount 1 }}
{{- $isEmbedded := (eq .Values.journal.type "EMBEDDED") }}
{{- $isHaEmbedded := and $isEmbedded (gt $masterCount 1) }}
{{- $isUfsLocal := and (eq .Values.journal.type "UFS") (eq .Values.journal.ufsType "local") }}
{{- $isSingleUfsLocal := and $isUfsLocal $isSingleMaster }}
{{- $needJournalVolume := or $isEmbedded $isUfsLocal }}

{{- $release := .Release }}
{{- $name := include "alluxio.name" . }}
{{- $fullName := include "alluxio.fullname" . }}
{{- $chart := include "alluxio.chart" . }}
{{- range $i := until $masterCount }}
  {{- $masterName := printf "master-%v" $i }}
  {{- $masterJavaOpts := printf " -Dalluxio.master.hostname=%v-%v " $fullName $masterName }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}-{{ $masterName }}
  labels:
    name: {{ $fullName }}-{{ $masterName }}
    app: {{ $name }}
    chart: {{ $chart }}
    release: {{ $release.Name }}
    heritage: {{ $release.Service }}
    role: alluxio-master
spec:
  selector:
    matchLabels:
      app: {{ $name }}
      role: alluxio-master
      name: {{ $fullName }}-{{ $masterName }}
  serviceName: {{ $masterName | quote }}
  replicas: {{ $root.Values.master.replicas }}
  template:
    metadata:
      labels:
        name: {{ $fullName }}-{{ $masterName }}
        app: {{ $name }}
        chart: {{ $chart }}
        release: {{ $release.Name }}
        heritage: {{ $release.Service }}
        role: alluxio-master
    spec:
      hostNetwork: {{ $root.Values.master.hostNetwork }}
      dnsPolicy: {{ $root.Values.master.dnsPolicy }}
      nodeSelector:
      {{- if $root.Values.master.nodeSelector }}
{{ toYaml $root.Values.master.nodeSelector | trim | indent 8  }}
      {{- else if $root.Values.nodeSelector }}
{{ toYaml $root.Values.nodeSelector | trim | indent 8  }}
      {{- end }}
      securityContext:
        fsGroup: {{ $root.Values.fsGroup }}
      {{- if and $needJournalVolume (not $isRoot) }}
      initContainers:
      - name: journal-chown
        image: {{ $root.Values.image }}:{{ $root.Values.imageTag }}
        imagePullPolicy: {{ $root.Values.imagePullPolicy }}
        securityContext:
          runAsUser: 0
        command: ["/bin/chown","-R", {{ $ugi | quote }}, "/journal"]
        volumeMounts:
        - name: alluxio-journal
          mountPath: /journal
      {{- end}}
      containers:
        - name: alluxio-master
          image: {{ $root.Values.image }}:{{ $root.Values.imageTag }}
          imagePullPolicy: {{ $root.Values.imagePullPolicy }}
          securityContext:
            runAsUser: {{ $root.Values.user }}
            runAsGroup: {{ $root.Values.group }}
          {{- if $root.Values.master.resources  }}
          resources:
            {{- if $root.Values.master.resources.limits }}
            limits:
              cpu: {{ $root.Values.master.resources.limits.cpu }}
              memory: {{ $root.Values.master.resources.limits.memory }}
            {{- end }}
            {{- if $root.Values.master.resources.requests }}
            requests:
              cpu: {{ $root.Values.master.resources.requests.cpu }}
              memory: {{ $root.Values.master.resources.requests.memory }}
            {{- end }}
          {{- end }}
          command: ["/entrypoint.sh"]
          {{- if $root.Values.master.args }}
          args:
{{ toYaml $root.Values.master.args | trim | indent 12 }}
          {{- end }}
          {{- if $isHaEmbedded }}
          env:
          - name: ALLUXIO_MASTER_JAVA_OPTS
            value: {{ $masterJavaOpts | quote }}
          - name: ALLUXIO_USER_JAVA_OPTS
            value: {{ $masterJavaOpts | quote }}
          {{- end }}
          envFrom:
          - configMapRef:
              name: {{ $fullName }}-config
          ports:
          - containerPort: 19998
            name: rpc
          - containerPort: 19999
            name: web
          {{- if $isEmbedded }}
          - containerPort: 19200
            name: embedded
          {{- end}}
          volumeMounts:
            {{- if $needJournalVolume }}
            - name: alluxio-journal
              mountPath: /journal
            {{- end }}
            {{- if $root.Values.master.metastore }}
            - name: alluxio-metastore
              mountPath: {{ $root.Values.master.metastore.mountPath }}
            {{- end }}
            {{- if $root.Values.secrets }}
              {{- if $root.Values.secrets.master }}
                {{- range $key, $val := $root.Values.secrets.master }}
            - name: secret-{{ $key }}-volume
              mountPath: /secrets/{{ $val }}
              readOnly: true
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if $root.Values.mounts }}
              {{- range $root.Values.mounts }}
            - name: "{{ .name }}"
              mountPath: "{{ .path }}"
              {{- end }}
            {{- end }}
        - name: alluxio-job-master
          image: {{ $root.Values.image }}:{{ $root.Values.imageTag }}
          imagePullPolicy: {{ $root.Values.imagePullPolicy }}
          securityContext:
            runAsUser: {{ $root.Values.user }}
            runAsGroup: {{ $root.Values.group }}
          {{- if $root.Values.jobMaster.resources }}
          resources:
            {{- if $root.Values.jobMaster.resources.limits }}
            limits:
              cpu: {{ $root.Values.jobMaster.resources.limits.cpu }}
              memory: {{ $root.Values.jobMaster.resources.limits.memory }}
            {{- end }}
            {{- if $root.Values.jobMaster.resources.requests }}
            requests:
              cpu: {{ $root.Values.jobMaster.resources.requests.cpu }}
              memory: {{ $root.Values.jobMaster.resources.requests.memory }}
            {{- end }}
          {{- end }}
          command: ["/entrypoint.sh"]
          {{- if $root.Values.jobMaster.args }}
          args:
{{ toYaml $root.Values.jobMaster.args | trim | indent 12 }}
          {{- end }}
          {{- if $isHaEmbedded }}
          env:
          - name: ALLUXIO_JOB_MASTER_JAVA_OPTS
            value: {{ $masterJavaOpts | quote }}
          - name: ALLUXIO_USER_JAVA_OPTS
            value: {{ $masterJavaOpts | quote }}
          {{- end }}
          envFrom:
          - configMapRef:
              name: {{ $fullName }}-config
          ports:
          - containerPort: 20001
            name: job-rpc
          - containerPort: 20002
            name: job-web
          volumeMounts:
          {{- if $root.Values.secrets }}
            {{- if $root.Values.secrets.master }}
              {{- range $key, $val := $root.Values.secrets.master }}
            - name: secret-{{ $key }}-volume
              mountPath: /secrets/{{ $val }}
              readOnly: true
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if $root.Values.mounts }}
            {{- range $root.Values.mounts }}
            - name: "{{ .name }}"
              mountPath: "{{ .path }}"
            {{- end }}
          {{- end }}
      restartPolicy: Always
      volumes:
        {{- if $isSingleUfsLocal }}
        - name: alluxio-journal
          persistentVolumeClaim:
            claimName: {{ $root.Values.journal.pvcName }}
        {{- end }}
        {{- if $root.Values.master.metastore }}
        - name: alluxio-metastore
          emptyDir:
            medium: {{ $root.Values.master.metastore.medium }}
            sizeLimit: {{ $root.Values.master.metastore.size | quote }}
        {{- end }}
        {{- if $isHaEmbedded }}
        - name: alluxio-journal
          emptyDir: {}
        {{- end}}
        {{- if $root.Values.secrets }}
          {{- if $root.Values.secrets.master }}
            {{- range $key, $val := $root.Values.secrets.master }}
        - name: secret-{{ $key }}-volume
          secret:
            secretName: {{ $key }}
            defaultMode: 256
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if $root.Values.mounts }}
          {{- range $root.Values.mounts }}
        - name: "{{ .name }}"
          persistentVolumeClaim:
            claimName: "{{ .name }}"
          {{- end }}
        {{- end }}
---
{{- end }}
