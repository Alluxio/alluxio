#
# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0
# (the "License"). You may not use this work except in compliance with the License, which is
# available at www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied, as more fully set forth in the License.
#
# See the NOTICE file distributed with this work for information regarding copyright ownership.
#

{{ $isRoot := eq (int .Values.user) 0 }}
{{- $ugi := printf "%v:%v" .Values.user .Values.group -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "alluxio.fullname" . }}-worker
  labels:
    app: {{ template "alluxio.name" . }}
    chart: {{ template "alluxio.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: alluxio-worker
spec:
  selector:
    matchLabels:
      app: {{ template "alluxio.name" . }}
      release: {{ .Release.Name }}
      role: alluxio-worker
  template:
    metadata:
      labels:
        app: {{ template "alluxio.name" . }}
        chart: {{ template "alluxio.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: alluxio-worker
    spec:
      hostNetwork: {{ .Values.worker.hostNetwork }}
      dnsPolicy: {{ .Values.worker.dnsPolicy }}
      securityContext:
        fsGroup: {{ .Values.fsGroup }}
      nodeSelector:
      {{- if .Values.worker.nodeSelector }}
{{ toYaml .Values.worker.nodeSelector | trim | indent 8  }}
      {{- else if .Values.nodeSelector }}
{{ toYaml .Values.nodeSelector | trim | indent 8  }}
      {{- end }}
      {{- if not $isRoot }}
      initContainers:
      - name: socket-chown
        securityContext:
          runAsUser: 0
        image: {{ .Values.image }}:{{ .Values.imageTag }}
        command: ["/bin/chown","-R", {{ $ugi | quote }}, "/opt/domain"]
        volumeMounts:
        - name: alluxio-domain
          mountPath: /opt/domain
      {{- end }}
      containers:
        - name: alluxio-worker
          image: {{ .Values.image }}:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          securityContext:
            runAsUser: {{ .Values.user }}
            runAsGroup: {{ .Values.group }}
          {{- if .Values.worker.resources  }}
          resources:
            {{- if .Values.worker.resources.limits }}
            limits:
              cpu: {{ .Values.worker.resources.limits.cpu }}
              memory: {{ .Values.worker.resources.limits.memory }}
            {{- end }}
            {{- if .Values.worker.resources.requests }}
            requests:
              cpu: {{ .Values.worker.resources.requests.cpu }}
              memory: {{ .Values.worker.resources.requests.memory }}
            {{- end }}
          {{- end }}
          command: ["/entrypoint.sh"]
          {{- if .Values.worker.args }}
          args:
{{ toYaml .Values.worker.args | trim | indent 12 }}
          {{- end }}
          env:
          - name: ALLUXIO_WORKER_HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: ALLUXIO_WORKER_JAVA_OPTS
            value: {{ print " -Dalluxio.worker.hostname=$(ALLUXIO_WORKER_HOSTNAME) " | quote }}
          envFrom:
          - configMapRef:
              name: {{ template "alluxio.fullname" . }}-config
          ports:
          - containerPort: {{ .Values.worker.resources.ports.rpc }}
            name: rpc
          - containerPort: {{ .Values.worker.resources.ports.web }}
            name: web
          volumeMounts:
            - name: alluxio-domain
              mountPath: /opt/domain
            {{- if .Values.secrets }}
              {{- if .Values.secrets.worker }}
                {{- range $key, $val := .Values.secrets.worker }}
            - name: secret-{{ $key }}-volume
              mountPath: /secrets/{{ $val }}
              readOnly: true
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if .Values.tieredstore }} 
              {{- if .Values.tieredstore.levels }} 
                {{- range .Values.tieredstore.levels }}
                  {{- if .mediumtype }}
                    {{- if contains "," .mediumtype }}
            {{- $type := .type }}
            {{- $path := .path }}
            {{- $split := split "," .mediumtype }}
                      {{- range $key, $val := $split }} 
                        {{- if eq $type "hostPath"}}
            - mountPath:  {{ index ($path | split ",") $key }}
              name: {{ $val | lower }}-{{ $key | replace "_" "" }}
                        {{- end}}
                      {{- end}}
                    {{- end}}
                    {{- else}}
            - mountPath: {{ .path }}
              name: {{ .alias | lower }}
                    {{- end}}
                  {{- end}} 
                {{- end}} 
              {{- end}}
            {{- if .Values.mounts }}   
              {{- range .Values.mounts }}
            - name: "{{ .name }}"
              mountPath: "{{ .path }}"
              {{- end }}
            {{- end }}
        - name: alluxio-job-worker
          image: {{ .Values.image }}:{{ .Values.imageTag }}
          securityContext:
            runAsUser: {{ .Values.user }}
            runAsGroup: {{ .Values.group }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            limits:
              {{- if .Values.jobWorker.resources  }}
                {{- if .Values.jobWorker.resources.limits }}
                  {{- if .Values.jobWorker.resources.limits.cpu  }}
              cpu: {{ .Values.jobWorker.resources.limits.cpu }}
                  {{- end }}
                  {{- if .Values.jobWorker.resources.limits.memory  }}
              memory: {{ .Values.jobWorker.resources.limits.memory }}
                  {{- end }}
                {{- end }}
            requests:
                {{- if .Values.jobWorker.resources.requests }}
                  {{- if .Values.jobWorker.resources.requests.cpu  }}
              cpu: {{ .Values.jobWorker.resources.requests.cpu }}
                  {{- end }}
                  {{- if .Values.jobWorker.resources.requests.memory  }}
              memory: {{ .Values.jobWorker.resources.requests.memory }}
                  {{- end }}
                {{- end }}
              {{- end }}
          command: ["/entrypoint.sh"]
          {{- if .Values.jobWorker.args }}
          args:
{{ toYaml .Values.jobWorker.args | trim | indent 12 }}
          {{- end }}
          env:
          - name: ALLUXIO_WORKER_HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: ALLUXIO_JOB_WORKER_JAVA_OPTS
            value: {{ print " -Dalluxio.worker.hostname=$(ALLUXIO_WORKER_HOSTNAME) " | quote }}
          envFrom:
          - configMapRef:
              name: {{ template "alluxio.fullname" . }}-config
          ports:
          - containerPort: {{ .Values.jobWorker.resources.ports.rpc }}
            name: job-rpc
          - containerPort: {{ .Values.jobWorker.resources.ports.data }}
            name: job-data
          - containerPort: {{ .Values.jobWorker.resources.ports.web }}
            name: job-web
          volumeMounts:
            - name: alluxio-domain
              mountPath: /opt/domain
            {{- if .Values.secrets }}
              {{- if .Values.secrets.worker }}
                {{- range $key, $val := .Values.secrets.worker }}
            - name: secret-{{ $key }}-volume
              mountPath: /secrets/{{ $val }}
              readOnly: true
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if .Values.tieredstore }} 
              {{- if .Values.tieredstore.levels }} 
                {{- range .Values.tieredstore.levels }}
                  {{- if .mediumtype }}
                    {{- if contains "," .mediumtype }}
            {{- $type := .type }}
            {{- $path := .path }}
            {{- $split := split "," .mediumtype }}
                      {{- range $key, $val := $split }} 
                        {{- if eq $type "hostPath"}}
            - mountPath:  {{ index ($path | split ",") $key }}
              name: {{ $val | lower }}-{{ $key | replace "_" "" }}
                        {{- end}}
                      {{- end}}
                    {{- end}}
                  {{- else}}
            - mountPath: {{ .path }}
              name: {{ .alias | lower }}
                  {{- end}}
                {{- end}} 
              {{- end}} 
            {{- end}} 
            {{- if .Values.mounts }}   
              {{- range .Values.mounts }}
            - name: "{{ .name }}"
              mountPath: "{{ .path }}"
              {{- end }}
            {{- end }}
      restartPolicy: Always
      volumes:
        - name: alluxio-domain
          hostPath:
            path: {{ .Values.domainHostPath }}
            type: DirectoryOrCreate
        {{- if .Values.secrets }}
          {{- if .Values.secrets.worker }}
            {{- range $key, $val := .Values.secrets.worker }}
        - name: secret-{{ $key }}-volume
          secret:
            secretName: {{ $key }}
            defaultMode: 256
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .Values.tieredstore }} 
          {{- if .Values.tieredstore.levels }} 
            {{- range .Values.tieredstore.levels }}
              {{- if .mediumtype }}
                {{- if contains "," .mediumtype }}
           {{- $split := split "," .mediumtype }}
           {{- $type := .type }}
           {{- $path := .path }}
                  {{- range $key, $val := $split }} 
                    {{- if eq $type "hostPath"}}
        - hostPath:
            path: {{ index ($path | split ",") $key }}
            type: DirectoryOrCreate
          name: {{ $val | lower }}-{{ $key | replace "_" "" }}
                    {{- else }}
        - name: {{ $val | lower }}-{{ $key | replace "_" "" }}
          emptyDir:
            medium: "Memory"
                      {{- if .quota }} 
            sizeLimit: {{ .quota }}
                      {{- end}} 
                    {{- end}}
                  {{- end}}
                {{- end}}
              {{- else}}
                {{- if eq .type "hostPath"}}
        - hostPath:
            path: {{ .path }}
            type: DirectoryOrCreate
          name: {{ .alias | lower }}
                {{- else }}
        - name: {{ .alias | lower }}
          emptyDir:
            medium: "Memory"
                  {{- if .quota }}
            sizeLimit: {{ .quota }}
                  {{- end}}
                {{- end}}
              {{- end}}
            {{- end}} 
          {{- end}} 
        {{- end}}
        {{- if .Values.mounts }}   
          {{- range .Values.mounts }}
        - name: "{{ .name }}"
          persistentVolumeClaim:
            claimName: "{{ .name }}"
          {{- end }}
        {{- end }}
