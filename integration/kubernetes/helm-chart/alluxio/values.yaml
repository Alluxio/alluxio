#
# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0
# (the "License"). You may not use this work except in compliance with the License, which is
# available at www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied, as more fully set forth in the License.
#
# See the NOTICE file distributed with this work for information regarding copyright ownership.
#

image: alluxio/alluxio
imageTag: 2.1.0-SNAPSHOT
imagePullPolicy: IfNotPresent

# Set the tieredstore
tieredstore:
  levels:
  - alias: MEM
    level: 0
    path: /dev/shm
    type: emptyDir
    quota: 1GB
    high: 0.95
    low: 0.7

# set the uid, gid and fsGroup
user: 1000
group: 10000
fsGroup: 1000

# The domain hostPath for uuid mode in short Circuit
domainHostPath: "/tmp/alluxio-domain"

# properties for all the components
properties:
  # alluxio.user.metrics.collection.enabled: 'true'
  alluxio.security.stale.channel.purge.interval: 365d

# set for the heap for the docker
# TODO(jiacheng): Examples?
# jvmOptions: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=2 "

fuse:
  image: alluxio/alluxio-fuse
  imageTag: 2.1.0-SNAPSHOT
  imagePullPolicy: IfNotPresent
  # Customize the MaxDirectMemorySize
  jvmOptions: " -XX:MaxDirectMemorySize=2g "
  # shortCircuitPolicy can be local or uuid,
  # local means the cache directory is in the same mount namespace,
  # uuid means interact with domain socket
  shortCircuitPolicy: uuid
  args:
    - fuse
    - --fuse-opts=allow_other

master:
  count: 1 # For multiMaster mode increase this to >1
  replicas: 1
  args:
    - master
    - -no-format
# properties for the master components
  properties:
    # Example: use ROCKS DB instead of Heap
    # alluxio.master.metastore: ROCKS
    # alluxio.master.metastore.dir: /opt/alluxio/metastore
  resources:
    limits:
      cpu: "1"
      memory: "1G"
    requests:
      cpu: "1"
      memory: "1G"
    ports:
      embedded: 19200
      rpc: 19998
      web: 19999
  jvmOptions: ""
  nodeSelector: {}
  hostNetwork: true
  dnsPolicy: ClusterFirstWithHostNet
  metastore:
    medium: ""
    size: 1Gi

jobMaster:
  args:
    - job-master
  resources:
    limits:
      cpu: "1"
      memory: "1G"
    requests:
      cpu: "1"
      memory: "1G"
    ports:
      rpc: 20001
      web: 20002
  jvmOptions: ""

worker:
  args:
    - worker
    - -no-format
  resources:
    limits:
      cpu: "1"
      memory: "2G"
    requests:
      cpu: "1"
      memory: "2G"
    ports:
      rpc: 29999
      web: 30000
  jvmOptions: ""
  nodeSelector: {}
  domainHostPath: "/tmp/alluxio-domain"
  hostNetwork: true
  dnsPolicy: ClusterFirstWithHostNet
  ramdisk:
    size: 1Gi


jobWorker:
  args:
    - job-worker
# properties for the jobWorker components
  properties:
  resources:
    limits:
      cpu: "1"
      memory: "1G"
    requests:
      cpu: "1"
      memory: "1G"
    ports:
      rpc: 30001
      data: 30002
      web: 30003
  jvmOptions: ""


# Alluxio supports journal type of UFS and EMBEDDED
# UFS journal with HDFS example
# journal:
#   type: "UFS"
#   folder: "hdfs://{$hostname}:{$hostport}/journal"
# EMBEDDED journal to /journal example
# journal:
#   type: "EMBEDDED"
#   folder: "/journal"
journal:
  pvcName: alluxio-pv-claim
  storageClass: "standard"
  size: 1Gi
  type: "UFS"
  ufsType: "local" # Ignored if type is "EMBEDDED"
  folder: "/journal"
  # Configuration for journal formatting job
  format:
    job:
      activeDeadlineSeconds: 30
      ttlSecondsAfterFinished: 10

# Secrets Example: (<name>:<mount path under /secrets/>):
# secrets:
#   master:
#     alluxio-hdfs-config: hdfsConfig
#   worker:
#     alluxio-hdfs-config: hdfsConfig



