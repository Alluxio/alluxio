#
# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0
# (the "License"). You may not use this work except in compliance with the License, which is
# available at www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied, as more fully set forth in the License.
#
# See the NOTICE file distributed with this work for information regarding copyright ownership.
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "alluxio.fullname" . }}-master
  labels:
    name: {{ template "alluxio.fullname" . }}-master
    app: {{ template "alluxio.name" . }}
    chart: {{ template "alluxio.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: alluxio-master
spec:
  selector:
    matchLabels:
      app: {{ template "alluxio.name" . }}
      role: alluxio-master
      name: {{ template "alluxio.fullname" . }}-master
  serviceName: "alluxio-master"
  replicas: {{ .Values.master.replicaCount }}
  template:
    metadata:
      labels:
        name: {{ template "alluxio.fullname" . }}-master
        app: {{ template "alluxio.name" . }}
        chart: {{ template "alluxio.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: alluxio-master
    spec:
      hostNetwork: {{ .Values.useHostNetwork }}
      hostPID: {{ .Values.useHostPID }}
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
{{- if .Values.master.nodeSelector }}
{{ toYaml .Values.master.nodeSelector | trim | indent 8  }}
{{- else if .Values.nodeSelector }}
{{ toYaml .Values.nodeSelector | trim | indent 8  }}
{{- end }}
      securityContext:
        runAsUser: {{ .Values.user }}
        runAsGroup: {{ .Values.group }}
        fsGroup: {{ .Values.fsGroup }}
      initContainers:
        - name: format-master-if-need
          image: {{ .Values.image }}:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            limits:
            {{- if .Values.master.resources  }}
            {{- if .Values.master.resources.limits }}
            {{- if .Values.master.resources.limits.cpu  }}
              cpu: {{ .Values.master.resources.limits.cpu }}
              memory: {{ .Values.master.resources.limits.memory }}
            {{- end }}
            {{- end }}
            requests:
            {{- if .Values.master.resources.requests }}
            {{- if .Values.master.resources.requests.cpu  }}
              cpu: {{ .Values.master.resources.requests.cpu }}
              memory: {{ .Values.master.resources.requests.memory }}
            {{- end }}
            {{- end }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "alluxio.fullname" . }}-config
          env:
            - name: ALLUXIO_WORKER_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          {{- range $key, $value := .Values.master.env }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
          {{- end }}
          volumeMounts:
            - name: alluxio-journal
              mountPath: /journal
            - name: {{ template "alluxio.fullname" . }}-format-script
              mountPath: /opt/alluxio/format-script
            {{- if .Values.localTimezone  }}
            - mountPath: /etc/localtime
              name: volume-localtime
            {{- end }}
          command: ["/opt/alluxio/format-script/format-master.sh"]
      containers:
        - name: alluxio-master
          image: {{ .Values.image }}:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            limits:
            {{- if .Values.master.resources  }}
            {{- if .Values.master.resources.limits }}
            {{- if .Values.master.resources.limits.cpu  }}
              cpu: {{ .Values.master.resources.limits.cpu }}
              memory: {{ .Values.master.resources.limits.memory }}
            {{- end }}
            {{- end }}
            requests:
            {{- if .Values.master.resources.requests }}
            {{- if .Values.master.resources.requests.cpu  }}
              cpu: {{ .Values.master.resources.requests.cpu }}
              memory: {{ .Values.master.resources.requests.memory }}
            {{- end }}
            {{- end }}
            {{- end }}
          command: ["/entrypoint.sh"]
          args: ["master-only", "--no-format"]
          env:
          - name: ALLUXIO_WORKER_HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          envFrom:
          - configMapRef:
              name: {{ template "alluxio.fullname" . }}-config
          ports:
          - containerPort: 19998
            name: rpc
          - containerPort: 19999
            name: web
          volumeMounts:
            - name: alluxio-journal
              mountPath: /journal
            {{- if .Values.secrets }}
            {{- if .Values.secrets.master }}
            {{- range $key, $val := .Values.secrets.master }}
            - name: secret-{{ $key }}-volume
              mountPath: /secrets/{{ $val }}
              readOnly: true
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if .Values.mounts }}
            {{- range .Values.mounts }}
            - name: "{{ .name }}"
              mountPath: "{{ .path }}"
            {{- end }}
            {{- end }}
            {{- if .Values.localTimezone  }}
            - mountPath: /etc/localtime
              name: volume-localtime
            {{- end }}
        - name: alluxio-job-master
          image: {{ .Values.image }}:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            limits:
            {{- if .Values.jobMaster.resources  }}
            {{- if .Values.jobMaster.resources.limits }}
            {{- if .Values.jobMaster.resources.limits.cpu  }}
              cpu: {{ .Values.jobMaster.resources.limits.cpu }}
              memory: {{ .Values.jobMaster.resources.limits.memory }}
            {{- end }}
            {{- end }}
            requests:
            {{- if .Values.jobMaster.resources.requests }}
            {{- if .Values.jobMaster.resources.requests.cpu  }}
              cpu: {{ .Values.jobMaster.resources.requests.cpu }}
              memory: {{ .Values.jobMaster.resources.requests.memory }}
            {{- end }}
            {{- end }}
            {{- end }}
          command: ["/entrypoint.sh"]
          args: ["job-master"]
          env:
          - name: ALLUXIO_WORKER_HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          envFrom:
          - configMapRef:
              name: {{ template "alluxio.fullname" . }}-config
          ports:
          - containerPort: 20001
            name: job-rpc
          - containerPort: 20002
            name: job-web
          volumeMounts:
          {{- if .Values.secrets }}
          {{- if .Values.secrets.master }}
            {{- range $key, $val := .Values.secrets.master }}
            - name: secret-{{ $key }}-volume
              mountPath: /secrets/{{ $val }}
              readOnly: true
            {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.mounts }}
          {{- range .Values.mounts }}
            - name: "{{ .name }}"
              mountPath: "{{ .path }}"
          {{- end }}
          {{- end }}
      restartPolicy: Always
      volumes:
        {{- if .Values.journal }}
        {{- if .Values.journal.pvcName }}
        - name: alluxio-journal
          persistentVolumeClaim:
            claimName: {{ .Values.journal.pvcName }}
        {{- else}}
        - name: alluxio-journal
          emptyDir: {}
        {{- end }}
        {{- else}}
        - name: alluxio-journal
          emptyDir: {}
        {{- end }}
        {{- if .Values.secrets }}
        {{- if .Values.secrets.master }}
        {{- range $key, $val := .Values.secrets.master }}
        - name: secret-{{ $key }}-volume
          secret:
            secretName: {{ $key }}
            defaultMode: 256
        {{- end }}
        {{- end }}
        {{- end }}
        - name: {{ template "alluxio.fullname" . }}-format-script
          configMap:
            name: {{ template "alluxio.fullname" . }}-format-script
            items:
              - key: format-master.sh
                path: format-master.sh
                mode: 365
        {{- if .Values.localTimezone  }}
        - hostPath:
            path: /etc/localtime
            type: ''
          name: volume-localtime
        {{- end }}
        {{- if .Values.mounts }}
        {{- range .Values.mounts }}
        - name: "{{ .name }}"
          persistentVolumeClaim:
            claimName: "{{ .name }}"
        {{- end }}
        {{- end }}
