#
# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0
# (the "License"). You may not use this work except in compliance with the License, which is
# available at www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied, as more fully set forth in the License.
#
# See the NOTICE file distributed with this work for information regarding copyright ownership.
#

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "alluxio.fullname" . }}-fuse
  labels:
    app: {{ template "alluxio.name" . }}
    chart: {{ template "alluxio.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: alluxio-fuse
spec:
  selector:
    matchLabels:
      app: {{ template "alluxio.name" . }}
      chart: {{ template "alluxio.chart" . }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
      role: alluxio-fuse
  template:
    metadata:
      labels:
        app: {{ template "alluxio.name" . }}
        chart: {{ template "alluxio.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: alluxio-fuse
    spec:
      hostNetwork: {{ .Values.useHostNetwork }}
      hostPID: {{ .Values.useHostPID }}
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
{{- if .Values.fuse.nodeSelector }}
{{ toYaml .Values.fuse.nodeSelector | trim | indent 8  }}
{{- else if .Values.nodeSelector }}
{{ toYaml .Values.nodeSelector | trim | indent 8  }}
{{- end }}
      securityContext:
        runAsUser: {{ .Values.user }}
        runAsGroup: {{ .Values.group }}
        fsGroup: {{ .Values.fsGroup }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "alluxio.name" . }}
              - key: role
                operator: In
                values:
                - alluxio-worker
            topologyKey: kubernetes.io/hostname
      containers:
        - name: alluxio-fuse
          image: {{ .Values.fuse.image }}:{{ .Values.fuse.imageTag }}
          imagePullPolicy: {{ .Values.fuse.imagePullPolicy }}
          resources:
            limits:
              {{- if .Values.fuse.resources  }}
              {{- if .Values.fuse.resources.limits }}
              {{- if .Values.fuse.resources.limits.cpu  }}
              cpu: {{ .Values.fuse.resources.limits.cpu }}
              {{- end }}
              {{- if .Values.fuse.resources.limits.memory  }}
              memory: {{ .Values.fuse.resources.limits.memory }}
              {{- end }}
              {{- end }}
            requests:
              {{- if .Values.fuse.resources.requests }}
              {{- if .Values.fuse.resources.requests.cpu  }}
              cpu: {{ .Values.fuse.resources.requests.cpu }}
              {{- end }}
              {{- if .Values.fuse.resources.requests.memory  }}
              memory: {{ .Values.fuse.resources.requests.memory }}
              {{- end }}
              {{- end }}
              {{- end }}
          command: ["/entrypoint.sh"]
          # args: ["fuse", "--fuse-opts=allow_other"]
          {{- if .Values.fuse.args }}
          args:
{{ toYaml .Values.fuse.args | indent 12 }}
          {{- end }}
          env:
          - name: ALLUXIO_CLIENT_HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          {{- range $key, $value := .Values.fuse.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_ADMIN
          lifecycle:
            preStop:
              exec:
                command: ["/opt/alluxio/integration/fuse/bin/alluxio-fuse", "unmount", "/alluxio-fuse"]
          envFrom:
          - configMapRef:
              name: {{ template "alluxio.fullname" . }}-fuse-config
          volumeMounts:
            - name: alluxio-fuse-device
              mountPath: /dev/fuse
            - name: alluxio-fuse-mount
              mountPath: /alluxio-fuse
              mountPropagation: Bidirectional
            {{- if .Values.localTimezone  }}
            - mountPath: /etc/localtime
              name: volume-localtime
            {{- end }}
            {{- if eq .Values.fuse.shortCircuitPolicy "uuid" }}
            - name: alluxio-domain
              mountPath: /opt/domain
            {{- end }}
            {{- if eq .Values.fuse.shortCircuitPolicy "local" }}
            {{- if .Values.tieredstore }}
            {{- if .Values.tieredstore.levels }}
            {{- range .Values.tieredstore.levels }}
            {{- if .mediumtype }}
            {{- if contains "," .mediumtype }}
            {{- $type := .type }}
            {{- $path := .path }}
            {{- $split := split "," .mediumtype }}
            {{- range $key, $val := $split }}
            {{- if eq $type "hostPath"}}
            - mountPath:  {{ index ($path | split ",") $key }}
              name: {{ $val | lower }}-{{ $key | replace "_" "" }}
            {{- end}}
            {{- end}}
            {{- end}}
            {{- else}}
            {{- if eq .type "hostPath"}}
            - name: {{ .alias | lower }}
              mountPath: {{ .path }}
            {{- else }}
            # report error and exit
            {{ .name }} with {{ .type }} is not supported in shortCircuitPolicy local
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
      restartPolicy: Always
      volumes:
        - name: alluxio-fuse-device
          hostPath:
            path: /dev/fuse
            type: File
        {{- if .Values.localTimezone  }}
        - hostPath:
            path: /etc/localtime
            type: ''
          name: volume-localtime
        {{- end }}
        - name: alluxio-fuse-mount
          hostPath:
            path: /alluxio-fuse
            type: DirectoryOrCreate
        {{- if eq .Values.fuse.shortCircuitPolicy "uuid" }}
        - name: alluxio-domain
          hostPath:
            path: {{ .Values.domainHostPath }}
            type: "Directory"
        {{- end }}
        {{- if eq .Values.fuse.shortCircuitPolicy "local" }}
        {{- if .Values.tieredstore }}
        {{- if .Values.tieredstore.levels }}
        {{- range .Values.tieredstore.levels }}
        {{- if .mediumtype }}
        {{- if contains "," .mediumtype }}
           {{- $split := split "," .mediumtype }}
           {{- $type := .type }}
           {{- $path := .path }}
           {{- range $key, $val := $split }}
        {{- if eq $type "hostPath"}}
        - hostPath:
            path: {{ index ($path | split ",") $key }}
            type: DirectoryOrCreate
          name: {{ $val | lower }}-{{ $key | replace "_" "" }}
        {{- else }}
        - name: {{ $val | lower }}-{{ $key | replace "_" "" }}
          emptyDir:
            medium: "Memory"
            {{- if .quota }}
            sizeLimit: {{ .quota }}
            {{- end}}
        {{- end}}
        {{- end}}
        {{- end}}
        {{- else}}
        {{- if eq .type "hostPath"}}
        - hostPath:
            path: {{ .path }}
            type: DirectoryOrCreate
          name: {{ .alias | lower }}
        {{- else }}
        # report error and exit

        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
