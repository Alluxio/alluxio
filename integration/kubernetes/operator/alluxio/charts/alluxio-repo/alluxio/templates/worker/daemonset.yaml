#
# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0
# (the "License"). You may not use this work except in compliance with the License, which is
# available at www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied, as more fully set forth in the License.
#
# See the NOTICE file distributed with this work for information regarding copyright ownership.
#

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "alluxio.fullname" . }}-worker
  labels:
    app: {{ template "alluxio.name" . }}
    chart: {{ template "alluxio.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: alluxio-worker
spec:
  selector:
    matchLabels:
      app: {{ template "alluxio.name" . }}
      release: {{ .Release.Name }}
      role: alluxio-worker
  template:
    metadata:
      labels:
        app: {{ template "alluxio.name" . }}
        chart: {{ template "alluxio.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: alluxio-worker
    spec:
      hostNetwork: {{ .Values.useHostNetwork }}
      hostPID: {{ .Values.useHostPID }}
      dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        runAsUser: {{ .Values.user }}
        runAsGroup: {{ .Values.group }}
        fsGroup: {{ .Values.fsGroup }}
      nodeSelector:
{{- if .Values.worker.nodeSelector }}
{{ toYaml .Values.worker.nodeSelector | trim | indent 8  }}
{{- else if .Values.nodeSelector }}
{{ toYaml .Values.nodeSelector | trim | indent 8  }}
{{- end }}
      containers:
        - name: alluxio-worker
          image: {{ .Values.image }}:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            limits:
              {{- if .Values.worker.resources  }}
              {{- if .Values.worker.resources.limits }}
              {{- if .Values.worker.resources.limits.cpu  }}
              cpu: {{ .Values.worker.resources.limits.cpu }}
              {{- end }}
              {{- if .Values.worker.resources.limits.memory  }}
              memory: {{ .Values.worker.resources.limits.memory }}
              {{- end }}
              {{- end }}
            requests:
              {{- if .Values.worker.resources.requests }}
              {{- if .Values.worker.resources.requests.cpu  }}
              cpu: {{ .Values.worker.resources.requests.cpu }}
              {{- end }}
              {{- if .Values.worker.resources.requests.memory  }}
              memory: {{ .Values.worker.resources.requests.memory }}
              {{- end }}
              {{- end }}
              {{- end }}
          command: ["/entrypoint.sh"]
          args: ["worker-only", "--no-format"]
          env:
          - name: ALLUXIO_WORKER_HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          {{- if .Values.enablealluxio }}
          - name: ALLUXIO_WORKER_MEMORY_SIZE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['data.alluxio.io/storage-human-alluxio-{{ .Release.Name }}']
          {{- end }}
          {{- range $key, $value := .Values.worker.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
          envFrom:
          - configMapRef:
              name: {{ template "alluxio.fullname" . }}-config
          ports:
          - containerPort: {{ .Values.worker.resources.ports.rpc }}
            name: rpc
          - containerPort: {{ .Values.worker.resources.ports.web }}
            name: web
          volumeMounts:
            - name: alluxio-domain
              mountPath: /opt/domain
            {{- if .Values.secrets }}
            {{- if .Values.secrets.worker }}
            {{- range $key, $val := .Values.secrets.worker }}
            - name: secret-{{ $key }}-volume
              mountPath: /secrets/{{ $val }}
              readOnly: true
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if .Values.tieredstore }}
            {{- if .Values.tieredstore.levels }}
            {{- range .Values.tieredstore.levels }}
            {{- if .mediumtype }}
            {{- if contains "," .mediumtype }}
            {{- $type := .type }}
            {{- $path := .path }}
            {{- $split := split "," .mediumtype }}
            {{- range $key, $val := $split }}
            {{- if eq $type "hostPath"}}
            - mountPath:  {{ index ($path | split ",") $key }}
              name: {{ $val | lower }}-{{ $key | replace "_" "" }}
            {{- end}}
            {{- end}}
            {{- end}}
            {{- else}}
            - mountPath: {{ .path }}
              name: {{ .alias | lower }}
            {{- end}}
            {{- end}}
            {{- end}}
            {{- end}}
            {{- if .Values.mounts }}
            {{- range .Values.mounts }}
            - name: "{{ .name }}"
              mountPath: "{{ .path }}"
            {{- end }}
            {{- end }}
            {{- if .Values.localTimezone  }}
            - mountPath: /etc/localtime
              name: volume-localtime
            {{- end }}
        - name: alluxio-job-worker
          image: {{ .Values.image }}:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            limits:
              {{- if .Values.jobWorker.resources  }}
              {{- if .Values.jobWorker.resources.limits }}
              {{- if .Values.jobWorker.resources.limits.cpu  }}
              cpu: {{ .Values.jobWorker.resources.limits.cpu }}
              {{- end }}
              {{- if .Values.jobWorker.resources.limits.memory  }}
              memory: {{ .Values.jobWorker.resources.limits.memory }}
              {{- end }}
              {{- end }}
            requests:
              {{- if .Values.jobWorker.resources.requests }}
              {{- if .Values.jobWorker.resources.requests.cpu  }}
              cpu: {{ .Values.jobWorker.resources.requests.cpu }}
              {{- end }}
              {{- if .Values.jobWorker.resources.requests.memory  }}
              memory: {{ .Values.jobWorker.resources.requests.memory }}
              {{- end }}
              {{- end }}
              {{- end }}
          command: ["/entrypoint.sh"]
          args: ["job-worker"]
          env:
          {{- range $key, $value := .Values.jobWorker.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
          - name: ALLUXIO_WORKER_HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          {{- if .Values.enablealluxio }}
          - name: ALLUXIO_WORKER_MEMORY_SIZE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['data.alluxio.io/storage-GB-alluxio-{{ .Release.Name }}']
          {{- end }}
          #- name: ALLUXIO_JOB_WORKER_JAVA_OPTS
          #  value: " -Dalluxio.worker.hostname=$(ALLUXIO_WORKER_HOSTNAME) "
          envFrom:
          - configMapRef:
              name: {{ template "alluxio.fullname" . }}-config
          ports:
          - containerPort: {{ .Values.jobWorker.resources.ports.rpc }}
            name: job-rpc
          - containerPort: {{ .Values.jobWorker.resources.ports.data }}
            name: job-data
          - containerPort: {{ .Values.jobWorker.resources.ports.web }}
            name: job-web
          volumeMounts:
            - name: alluxio-domain
              mountPath: /opt/domain
            {{- if .Values.secrets }}
            {{- if .Values.secrets.worker }}
            {{- range $key, $val := .Values.secrets.worker }}
            - name: secret-{{ $key }}-volume
              mountPath: /secrets/{{ $val }}
              readOnly: true
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if .Values.tieredstore }}
            {{- if .Values.tieredstore.levels }}
            {{- range .Values.tieredstore.levels }}
            {{- if .mediumtype }}
            {{- if contains "," .mediumtype }}
            {{- $type := .type }}
            {{- $path := .path }}
            {{- $split := split "," .mediumtype }}
            {{- range $key, $val := $split }}
            {{- if eq $type "hostPath"}}
            - mountPath:  {{ index ($path | split ",") $key }}
              name: {{ $val | lower }}-{{ $key | replace "_" "" }}
            {{- end}}
            {{- end}}
            {{- end}}
            {{- else}}
            - mountPath: {{ .path }}
              name: {{ .alias | lower }}
            {{- end}}
            {{- end}}
            {{- end}}
            {{- end}}
            {{- if .Values.mounts }}
            {{- range .Values.mounts }}
            - name: "{{ .name }}"
              mountPath: "{{ .path }}"
            {{- end }}
            {{- end }}
            {{- if .Values.localTimezone  }}
            - mountPath: /etc/localtime
              name: volume-localtime
            {{- end }}
      restartPolicy: Always
      volumes:
        - name: alluxio-domain
          hostPath:
            path: {{ .Values.domainHostPath }}
            type: DirectoryOrCreate
        {{- if .Values.secrets }}
        {{- if .Values.secrets.worker }}
        {{- range $key, $val := .Values.secrets.worker }}
        - name: secret-{{ $key }}-volume
          secret:
            secretName: {{ $key }}
            defaultMode: 256
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .Values.tieredstore }}
        {{- if .Values.tieredstore.levels }}
        {{- range .Values.tieredstore.levels }}
        {{- if .mediumtype }}
        {{- if contains "," .mediumtype }}
           {{- $split := split "," .mediumtype }}
           {{- $type := .type }}
           {{- $path := .path }}
           {{- range $key, $val := $split }}
        {{- if eq $type "hostPath"}}
        - hostPath:
            path: {{ index ($path | split ",") $key }}
            type: DirectoryOrCreate
          name: {{ $val | lower }}-{{ $key | replace "_" "" }}
        {{- else }}
        - name: {{ $val | lower }}-{{ $key | replace "_" "" }}
          emptyDir:
            medium: "Memory"
            {{- if .quota }}
            sizeLimit: {{ .quota }}
            {{- end}}
        {{- end}}
        {{- end}}
        {{- end}}
        {{- else}}
        {{- if eq .type "hostPath"}}
        - hostPath:
            path: {{ .path }}
            type: DirectoryOrCreate
          name: {{ .alias | lower }}
        {{- else }}
        - name: {{ .alias | lower }}
          emptyDir:
            medium: "Memory"
            {{- if .quota }}
            sizeLimit: {{ .quota }}
            {{- end}}
        {{- end}}
        {{- end}}
        {{- end}}
        {{- end}}
        {{- end}}
        {{- if .Values.localTimezone  }}
        - hostPath:
            path: /etc/localtime
            type: ''
          name: volume-localtime
        {{- end }}
        {{- if .Values.mounts }}
        {{- range .Values.mounts }}
        - name: "{{ .name }}"
          persistentVolumeClaim:
            claimName: "{{ .name }}"
        {{- end }}
        {{- end }}
