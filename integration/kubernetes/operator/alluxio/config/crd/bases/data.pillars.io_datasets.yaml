#
# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0
# (the "License"). You may not use this work except in compliance with the License, which is
# available at www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied, as more fully set forth in the License.
#
# See the NOTICE file distributed with this work for information regarding copyright ownership.
#


---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.2
  creationTimestamp: null
  name: datasets.data.alluxio.io
spec:
  group: data.alluxio.io
  names:
    kind: Dataset
    listKind: DatasetList
    plural: datasets
    singular: dataset
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Dataset is the Schema for the datasets API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: DatasetSpec defines the desired state of Dataset
          properties:
            highWaterMarkRatio:
              description: floats are not support https://github.com/kubernetes-sigs/controller-tools/blob/abcf7d8d54b0cca0f42c470b705fd3cfe768ede3/pkg/crd/schema.go#L387
                highWaterMarkRatio is the min replicas of dataset in the cluster
              type: string
            lowWaterMarkRatio:
              description: floats are not support https://github.com/kubernetes-sigs/controller-tools/blob/abcf7d8d54b0cca0f42c470b705fd3cfe768ede3/pkg/crd/schema.go#L387
                lowWaterMarkRatio is the LowWaterMarkRatio resource.Quantity `json:"lowWaterMarkRatio,omitempty"`
              type: string
            mounts:
              description: Mounts
              items:
                description: Mount describes a mounting.
                properties:
                  mountPoint:
                    description: MountPoint is the mount point of source
                    minLength: 10
                    type: string
                  name:
                    description: The name of mount
                    minLength: 0
                    type: string
                  options:
                    additionalProperties:
                      type: string
                    description: Options to configure
                    type: object
                  readOnly:
                    description: 'Optional: Defaults to false (read-write).'
                    type: boolean
                  shared:
                    description: 'Optional: Defaults to false (shared).'
                    type: boolean
                type: object
              minItems: 1
              type: array
            nodeAffinity:
              description: NodeAffinity defines constraints that limit what nodes
                this dataset can be cached to. This field influences the scheduling
                of pods that use the cached dataset.
              properties:
                required:
                  description: Required specifies hard node constraints that must
                    be met.
                  properties:
                    nodeSelectorTerms:
                      description: Required. A list of node selector terms. The terms
                        are ORed.
                      items:
                        description: A null or empty node selector term matches no
                          objects. The requirements of them are ANDed. The TopologySelectorTerm
                          type implements a subset of the NodeSelectorTerm.
                        properties:
                          matchExpressions:
                            description: A list of node selector requirements by node's
                              labels.
                            items:
                              description: A node selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: The label key that the selector applies
                                    to.
                                  type: string
                                operator:
                                  description: Represents a key's relationship to
                                    a set of values. Valid operators are In, NotIn,
                                    Exists, DoesNotExist. Gt, and Lt.
                                  type: string
                                values:
                                  description: An array of string values. If the operator
                                    is In or NotIn, the values array must be non-empty.
                                    If the operator is Exists or DoesNotExist, the
                                    values array must be empty. If the operator is
                                    Gt or Lt, the values array must have a single
                                    element, which will be interpreted as an integer.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchFields:
                            description: A list of node selector requirements by node's
                              fields.
                            items:
                              description: A node selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: The label key that the selector applies
                                    to.
                                  type: string
                                operator:
                                  description: Represents a key's relationship to
                                    a set of values. Valid operators are In, NotIn,
                                    Exists, DoesNotExist. Gt, and Lt.
                                  type: string
                                values:
                                  description: An array of string values. If the operator
                                    is In or NotIn, the values array must be non-empty.
                                    If the operator is Exists or DoesNotExist, the
                                    values array must be empty. If the operator is
                                    Gt or Lt, the values array must have a single
                                    element, which will be interpreted as an integer.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                        type: object
                      type: array
                  required:
                  - nodeSelectorTerms
                  type: object
              type: object
            prefetchStrategy:
              description: 'Specifies how to prefetch dataset. Valid values are: -
                "Never" (default): never prefetch the dataset; - "Always": always
                prefetch the dataset; - "OnDemand": will prefetch when application
                which consumes the dataset is running'
              enum:
              - Never
              - Always
              - OnDemand
              type: string
            replicas:
              description: replicas is the min replicas of dataset in the cluster
              format: int32
              minimum: 1
              type: integer
            runtime:
              description: The runtime handle the dataset, for now, only support alluxio.
              type: string
            tolerations:
              description: If specified, the cache's tolerations.
              items:
                description: The pod this Toleration is attached to tolerates any
                  taint that matches the triple <key,value,effect> using the matching
                  operator <operator>.
                properties:
                  effect:
                    description: Effect indicates the taint effect to match. Empty
                      means match all taint effects. When specified, allowed values
                      are NoSchedule, PreferNoSchedule and NoExecute.
                    type: string
                  key:
                    description: Key is the taint key that the toleration applies
                      to. Empty means match all taint keys. If the key is empty, operator
                      must be Exists; this combination means to match all values and
                      all keys.
                    type: string
                  operator:
                    description: Operator represents a key's relationship to the value.
                      Valid operators are Exists and Equal. Defaults to Equal. Exists
                      is equivalent to wildcard for value, so that a pod can tolerate
                      all taints of a particular category.
                    type: string
                  tolerationSeconds:
                    description: TolerationSeconds represents the period of time the
                      toleration (which must be of effect NoExecute, otherwise this
                      field is ignored) tolerates the taint. By default, it is not
                      set, which means tolerate the taint forever (do not evict).
                      Zero and negative values will be treated as 0 (evict immediately)
                      by the system.
                    format: int64
                    type: integer
                  value:
                    description: Value is the taint value the toleration matches to.
                      If the operator is Exists, the value should be empty, otherwise
                      just a regular string.
                    type: string
                type: object
              type: array
          type: object
        status:
          description: DatasetStatus defines the observed state of Dataset
          properties:
            cacheStatus:
              description: CacheStatus represents the total resources of the dataset.
              properties:
                cacheStates:
                  additionalProperties:
                    type: string
                  description: CacheStatus represents the total resources of the dataset.
                  type: object
                conditions:
                  description: Conditions is an array of current observed cache conditions.
                  items:
                    description: Condition describes the state of the cache at a certain
                      point.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      lastUpdateTime:
                        description: The last time this condition was updated.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of cache condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              required:
              - conditions
              type: object
            phase:
              description: Dataset Phase
              type: string
            total:
              description: Max Total in GB of the dataset to load in the cluster
              type: string
            ufsTotal:
              description: Total in GB of dataset in the cluster
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
