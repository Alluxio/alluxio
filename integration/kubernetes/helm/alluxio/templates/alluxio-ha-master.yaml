#
# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0
# (the "License"). You may not use this work except in compliance with the License, which is
# available at www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied, as more fully set forth in the License.
#
# See the NOTICE file distributed with this work for information regarding copyright ownership.
#

{{- if eq .Values.journal.type "EMBEDDED" }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alluxio-pv-claim
spec:
  storageClassName: {{ .Values.volumes.master.journal.storageClass }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.volumes.master.journal.size | quote }}
{{- end}}

{{- $root := . -}}
{{ $masterCount := int .Values.resources.masterCount }}
{{- range $i := until $masterCount }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "alluxio-master%v" $i }}
  labels:
    app: alluxio
spec:
  ports:
    - port: 19998
      name: rpc
    - port: 19999
      name: web
  clusterIP: None
  selector:
    app: {{ printf "alluxio-master%v" $i }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ printf "alluxio-master%v" $i }}
spec:
  selector:
    matchLabels:
      app: {{ printf "alluxio-master%v" $i }}
  serviceName: {{ printf "alluxio-master%v" $i | quote }}
  replicas: {{ $root.Values.resources.master.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ printf "alluxio-master%v" $i }}
    spec:
      securityContext:
        runAsUser: {{ $root.Values.user }}
        runAsGroup: {{ $root.Values.group }}
        fsGroup: {{ $root.Values.fsGroup }}
      containers:
        - name: alluxio-master
          image: {{ $root.Values.image }}:{{ $root.Values.imageTag }}
          imagePullPolicy: {{ $root.Values.imagePullPolicy }}
          resources:
            limits:
              cpu: {{ $root.Values.resources.master.limits.cpu }}
              memory: {{ $root.Values.resources.master.limits.memory }}
            requests:
              cpu: {{ $root.Values.resources.master.requests.cpu }}
              memory: {{ $root.Values.resources.master.requests.memory }}
          command: ["/entrypoint.sh"]
          args: ["master-only", "--no-format"]
          env:
            - name: ALLUXIO_MASTER_JAVA_OPTS
              value: {{ printf " -Dalluxio.master.hostname=alluxio-master%v " $i | quote }}
          envFrom:
            - configMapRef:
                name: {{ $root.Values.const.configName }}
          ports:
            - containerPort: 19998
              name: rpc
            - containerPort: 19999
              name: web
          volumeMounts:
            {{- if eq $root.Values.journal.type "EMBEDDED" }}
            - name: alluxio-journal
              mountPath: {{ $root.Values.journal.folder }}
            {{- end }}
            {{- if $root.Values.secrets }}
            {{- if $root.Values.secrets.master }}
            {{- range $key, $val := $root.Values.secrets.master }}
            - name: secret-{{ $key }}-volume
              mountPath: /secrets/{{ $val }}
              readOnly: true
            {{- end }}
            {{- end }}
            {{- end }}
        - name: alluxio-job-master
          image: {{ $root.Values.image }}:{{ $root.Values.imageTag }}
          imagePullPolicy: {{ $root.Values.imagePullPolicy }}
          resources:
            limits:
              cpu: {{ $root.Values.resources.jobMaster.limits.cpu }}
              memory: {{ $root.Values.resources.jobMaster.limits.memory }}
            requests:
              cpu: {{ $root.Values.resources.jobMaster.requests.cpu }}
              memory: {{ $root.Values.resources.jobMaster.requests.memory }}
          command: ["/entrypoint.sh"]
          args: ["job-master"]
          env:
            - name: ALLUXIO_MASTER_JAVA_OPTS
              value: {{ printf " -Dalluxio.master.hostname=alluxio-master%v " $i | quote }}
          envFrom:
            - configMapRef:
                name: {{ $root.Values.const.configName }}
          ports:
            - containerPort: 20001
              name: job-rpc
            - containerPort: 20002
              name: job-web
          {{- if $root.Values.secrets }}
          {{- if $root.Values.secrets.master }}
          volumeMounts:
            {{- range $key, $val := $root.Values.secrets.master }}
            - name: secret-{{ $key }}-volume
              mountPath: /secrets/{{ $val }}
              readOnly: true
            {{- end }}
          {{- end }}
          {{- end }}
      restartPolicy: Always
      volumes:
        {{- if eq $root.Values.journal.type "EMBEDDED" }}
        - name: alluxio-journal
          persistentVolumeClaim:
            claimName: alluxio-pv-claim
        {{- end }}
        {{- if $root.Values.secrets }}
        {{- if $root.Values.secrets.master }}
        {{- range $key, $val := $root.Values.secrets.master }}
        - name: secret-{{ $key }}-volume
          secret:
            secretName: {{ $key }}
            defaultMode: 256
        {{- end }}
        {{- end }}
        {{- end }}
  {{- end }}