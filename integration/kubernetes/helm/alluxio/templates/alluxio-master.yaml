#
# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0
# (the "License"). You may not use this work except in compliance with the License, which is
# available at www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied, as more fully set forth in the License.
#
# See the NOTICE file distributed with this work for information regarding copyright ownership.
#

{{ $root := . -}}
{{- $isRoot := eq (int $root.Values.user) 0 }}
{{- $ugi := printf "%v:%v" $root.Values.user $root.Values.group }}
{{- $masterCount := int .Values.resources.masterCount }}
{{- $isSingleMaster := eq $masterCount 1 }}
{{- $isEmbedded := (eq .Values.journal.type "EMBEDDED") }}
{{- $isHaEmbedded := and $isEmbedded (gt $masterCount 1) }}
{{- $isUfsLocal := and (eq .Values.journal.type "UFS") (eq .Values.journal.ufsType "local") }}
{{- $isSingleUfsLocal := and $isUfsLocal $isSingleMaster }}
{{- $needJournalVolume := or $isEmbedded $isUfsLocal }}
{{- if $isUfsLocal }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alluxio-pv-claim
spec:
  storageClassName: {{ .Values.volumes.master.journal.storageClass }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.volumes.master.journal.size | quote }}
---
{{- end }}
{{- range $i := until $masterCount }}
  {{- $masterName := printf "alluxio-master-%v" $i }}
  {{- $masterJavaOpts := printf " -Dalluxio.master.hostname=alluxio-master-%v " $i }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $masterName }}
  labels:
    app: alluxio
spec:
  ports:
  - port: 19998
    name: rpc
  - port: 19999
    name: web
  {{- if $isEmbedded }}
  - port: 19200
    name: embedded
  {{- end}}
  clusterIP: None
  selector:
    name: {{ $masterName }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $masterName }}
  labels:
    app: alluxio
spec:
  selector:
    matchLabels:
      name: {{ $masterName }}
  serviceName: {{ $masterName | quote }}
  replicas: {{ $root.Values.resources.master.replicaCount }}
  template:
    metadata:
      labels:
        name: {{ $masterName }}
        app: alluxio
    spec:
      securityContext:
        fsGroup: {{ $root.Values.fsGroup }}
      {{- if and $isSingleUfsLocal (not $isRoot) }}
      initContainers:
      - name: journal-chown
        securityContext:
          runAsUser: 0
        image: {{ $root.Values.image }}:{{ $root.Values.imageTag }}
        command: ["/bin/chown","-R", {{ $ugi | quote }}, "/journal"]
        volumeMounts:
          - name: alluxio-journal
            mountPath: /journal
      {{- end}}
      containers:
      - name: alluxio-master
        image: {{ $root.Values.image }}:{{ $root.Values.imageTag }}
        imagePullPolicy: {{ $root.Values.imagePullPolicy }}
        resources:
          limits:
            cpu: {{ $root.Values.resources.master.limits.cpu }}
            memory: {{ $root.Values.resources.master.limits.memory }}
          requests:
            cpu: {{ $root.Values.resources.master.requests.cpu }}
            memory: {{ $root.Values.resources.master.requests.memory }}
        securityContext:
          runAsUser: {{ $root.Values.user }}
          runAsGroup: {{ $root.Values.group }}
        command: ["/entrypoint.sh"]
        args: ["master-only", "--no-format"]
        {{- if $isHaEmbedded }}
        env:
          - name: ALLUXIO_MASTER_JAVA_OPTS
            value: {{ $masterJavaOpts | quote }}
          - name: ALLUXIO_USER_JAVA_OPTS
            value: {{ $masterJavaOpts | quote }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ $root.Values.const.configName }}
        ports:
        - containerPort: 19998
          name: rpc
        - containerPort: 19999
          name: web
        {{- if $isEmbedded }}
        - containerPort: 19200
          name: embedded
        {{- end}}
        volumeMounts:
        {{- if $needJournalVolume }}
        - name: alluxio-journal
          mountPath: {{ $root.Values.journal.folder }}
        {{- end }}
        {{- if $root.Values.secrets }}
        {{- if $root.Values.secrets.master }}
        {{- range $key, $val := $root.Values.secrets.master }}
        - name: secret-{{ $key }}-volume
          mountPath: /secrets/{{ $val }}
          readOnly: true
        {{- end }}
        {{- end }}
        {{- end }}
      - name: alluxio-job-master
        image: {{ $root.Values.image }}:{{ $root.Values.imageTag }}
        imagePullPolicy: {{ $root.Values.imagePullPolicy }}
        resources:
          limits:
            cpu: {{ $root.Values.resources.jobMaster.limits.cpu }}
            memory: {{ $root.Values.resources.jobMaster.limits.memory }}
          requests:
            cpu: {{ $root.Values.resources.jobMaster.requests.cpu }}
            memory: {{ $root.Values.resources.jobMaster.requests.memory }}
        securityContext:
          runAsUser: {{ $root.Values.user }}
          runAsGroup: {{ $root.Values.group }}
        command: ["/entrypoint.sh"]
        args: ["job-master"]
        {{- if $isHaEmbedded }}
        env:
        - name: ALLUXIO_JOB_MASTER_JAVA_OPTS
          value: {{ $masterJavaOpts | quote }}
        - name: ALLUXIO_USER_JAVA_OPTS
          value: {{ $masterJavaOpts | quote }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ $root.Values.const.configName }}
        ports:
        - containerPort: 20001
          name: job-rpc
        - containerPort: 20002
          name: job-web
        {{- if $root.Values.secrets }}
        {{- if $root.Values.secrets.master }}
        volumeMounts:
        {{- range $key, $val := $root.Values.secrets.master }}
        - name: secret-{{ $key }}-volume
          mountPath: /secrets/{{ $val }}
          readOnly: true
        {{- end }}
        {{- end }}
        {{- end }}
      restartPolicy: Always
      volumes:
      {{- if $isSingleUfsLocal }}
      - name: alluxio-journal
        persistentVolumeClaim:
          claimName: alluxio-pv-claim
      {{- end }}
      {{- if $isHaEmbedded }}
      - name: alluxio-journal
        emptyDir: {}
      {{- end}}
      {{- if $root.Values.secrets }}
      {{- if $root.Values.secrets.master }}
      {{- range $key, $val := $root.Values.secrets.master }}
      - name: secret-{{ $key }}-volume
        secret:
          secretName: {{ $key }}
          defaultMode: 256
      {{- end }}
      {{- end }}
      {{- end }}
---
{{- end }}
