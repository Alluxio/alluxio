#!/bin/bash

set -e

usage() {
 echo "usage: start <number of machines> <provider(aws/vb)>"
 exit 1
}

if [[ "$#" != "2" ]]; then
 usage
fi

TOTAL="$1"
PROVIDER="$2"

if [[ "$TOTAL" < "2" ]]; then
 echo "number of machines should at least be 2"
 exit 1
fi

HERE=`dirname "$0"`
pushd $HERE >/dev/null

mkdir -p ./files
# files/id_rsa, files/id_rsa.pub
if [ ! -f ./files/id_rsa ]; then 
 ssh-keygen -f ./files/id_rsa -t rsa -N '' &>/dev/null
fi

# files/workers
rm -f files/workers
for i in `seq 1 $((TOTAL-1))`; do
 echo "TachyonWorker${i}.local" >> files/workers
done
echo "TachyonMaster.local" >> files/workers

if [[ "$PROVIDER" == "aws" ]]; then
 # ssh without password
 cat files/id_rsa.pub |awk '{print $1, $2, "Generated by vagrant"}' > files/authorized_keys2
 cat files/id_rsa.pub |awk '{print $1, $2, "Generated by vagrant"}' > files/authorized_keys
fi

python bin/init.py $PROVIDER

# start machine without provisioning
VUP="vagrant up --provider=$PROVIDER --no-provision"
if [[ "$PROVIDER" == "aws" ]]; then
 VUP="${VUP} --parallel"
fi
$VUP

# files/hosts
# IPs are automatically assigned by vagrant
# hack to find out the assigned IPs by looking into vagrant's ssh config to 
if [[ "$PROVIDER" == "aws" ]]; then
 vagrant ssh-config | egrep '^Host|HostName' | sed "N;s/\n//g" | awk '{ print $4, $2 ".local" }' > files/hosts
fi
if [[ "$PROVIDER" == "vb" ]]; then
 rm -f files/hosts
 # for vb with dhcp network, vagrant ssh-config returns 127.0.0.1 with different ports
 # this relates to vagrant's handling of dhcp
 # but we can ssh to each vm and find out its assigned IP
 for host in `cat files/workers`; do
  IP=`vagrant ssh $host -c 'ifconfig eth1 | grep "inet addr"' | grep -w 'inet addr' | awk '{print $2}' | cut -d':' -f2`
  echo "$IP ${host}.local" >> files/hosts
 done
fi

# provision
vagrant provision

# show master IP
if [[ "$?" == "0" ]]; then
 HERE=`dirname $0`
 pushd $HERE > /dev/null
 if [[ "$PROVIDER" == "aws" ]]; then
  master=`cat ${HERE}/.vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory | grep Master | cut -d' ' -f2 | cut -d'=' -f2`
 else
  master=`tail -n 1 $HERE/files/hosts | cut -d' ' -f1`
 fi
 purple='\033[1;35m'
 no_color='\033[0m'
 echo -e ">>> ${purple}TachyonMaster public IP is ${master}${no_color} <<<"
 echo -e ">>> ${purple}visit default port of the web UI of what you deployed${no_color} <<<"
fi

popd >/dev/null
