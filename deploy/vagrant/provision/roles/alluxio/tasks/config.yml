# Configure Alluxio, some configuration is related to ufs, so will reference scripts in roles/ufs_xxx
---

- name: set alluxio/conf/workers
  script: set_workers.sh

- name: set ALLUXIO_MASTER_ADDRESS in alluxio-env.sh
  script: set_master_address.sh
  when: not alluxio_version_lessthan_1_1

- name: set ALLUXIO_MASTER_ADDRESS in alluxio-env.sh for releases older than 1.1.0
  script: set_master_address_old.sh
  when: alluxio_version_lessthan_1_1

- name: set ufs related info in alluxio-env.sh
  script: roles/ufs_{{ ufs }}/files/config_alluxio.sh
  environment:
    S3_BUCKET: "{{ s3_bucket }}"
    S3_ID: "{{ s3_id }}"
    S3_KEY: "{{ s3_key }}"
    GCS_BUCKET: "{{ gcs_bucket }}"
    GCS_ID: "{{ gcs_id }}"
    GCS_KEY: "{{ gcs_key }}"

- name: Source the bashrc file
  shell: source ~/.bashrc

- name: set usezookeeper and zookeeper address if number of masters is larger than 1
  script: zookeeper.sh
  when: alluxio_masters > 1

- name: set journal folder as a shared folder in underfs for fault tolerance
  script: set_journal_folder.sh
  when: alluxio_masters > 1

- name: set longer worker heartbeat timeout to wait for leader selection
  script: set_worker_heartbeat_timeout.sh
  when: alluxio_masters > 1

- name: set worker memory in alluxio-env.sh
  replace: >
    dest=/alluxio/conf/alluxio-env.sh
    regexp='^export ALLUXIO_WORKER_MEMORY_SIZE=.*'
    replace='export ALLUXIO_WORKER_MEMORY_SIZE={{ alluxio_memory }}'

- name: let alluxio ssh to workers in parallel when start
  replace: >
    dest=/alluxio/conf/alluxio-env.sh
    regexp='ALLUXIO_SSH_FOREGROUND="yes"'
    replace='ALLUXIO_SSH_FOREGROUND=""'

- name: set ALLUXIO_JAR in libexec/alluxio-config.sh
  script: alluxio_jar.sh

# vim :set filetype=ansible.yaml:
