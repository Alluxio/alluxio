- hosts: all
  tasks:
    - name: mount devices defined in block device mapping
      script: device.sh
      when: is_aws

    - name: prepare /vagrant
      shell: sudo mkdir -p /vagrant && user=`whoami` && sudo chown -R $user /vagrant
      when: not is_vb # vb sync the whole /vagrant directory

    - name: sync files
      synchronize: src=../files dest=/vagrant
      when: not is_vb # vb sync the whole /vagrant directory

    - name: configure ssh
      script: ssh.sh

    - name: open PasswordAuthentication of sshd for openstack
      shell: sudo sed -i -e "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
      when: is_os

    - name: configure hosts
      script: host.sh

    - name: install java
      script: java.sh

    - name: install rsync
      shell: sudo yum install -y -q rsync

    - name: mkdir /tachyon
      shell: sudo mkdir -p /tachyon && user=`whoami` && sudo chown -R $user /tachyon

    - name: mkdir /spark
      shell: sudo mkdir -p /spark && user=`whoami` && sudo chown -R $user /spark
      when: use_spark

- hosts: TachyonMaster
  tasks:
    - name: install maven
      script: maven.sh

    - name: install git
      command: sudo yum install -y -q git
      when: is_git

    - name: clone tachyon repo
      git: repo={{ tachyon_repo }} dest=/tachyon version={{ tachyon_version }}
      when: is_git

    - name: clone local tachyon repo
      synchronize:
        src: ../../../
        dest: /tachyon
        rsync_opts: >
          --exclude=.git,
          --exclude=.gitignore,
          --exclude=core/target,
          --exclude=assembly/target,
          --exclude=client/target,
          --exclude=deploy,
          --exclude=docs,
          --exclude=journal,
          --exclude=logs,
          --exclude=underFSStorage
      when: (not is_vb) and (not is_git)

    - copy: src=../ufs/{{ ufs }}/compile_tachyon.sh dest=/tmp/compile_tachyon.sh
    - name: compile tachyon
      command: bash /tmp/compile_tachyon.sh
      async: 1200
      poll: 60

    - name: set tachyon/conf/workers tachyon/conf/slaves
      shell: cp /vagrant/files/workers /tachyon/conf/workers && cp /vagrant/files/workers /tachyon/conf/slaves

    - name: set tachyon-env.sh
      script: ../ufs/{{ ufs }}/config_tachyon.sh
    - name: set TACHYON_SSH_FOREGROUND=""
      shell: sed -i 's/TACHYON_SSH_FOREGROUND="yes"/TACHYON_SSH_FOREGROUND=""/g' /tachyon/conf/tachyon-env.sh
    - name: set TACHYON_JAR in libexec/tachyon-config.sh
      shell: tachyon_version=`grep version /tachyon/pom.xml | \
             head -n1 | tr -d ' ' | \
             sed 's/<version>//g' | \
             sed 's/<\/version>//g'` && \
             sed -i "s/tachyon-.*-jar-with-dependencies.jar/tachyon-${tachyon_version}-jar-with-dependencies.jar/g" /tachyon/libexec/tachyon-config.sh

    - name: clone spark repo
      git: repo={{ spark_repo }} dest=/spark version={{ spark_version }}
      when: use_spark

    - name: set current tachyon version in spark/core/pom.xml
      shell: tachyon_version=`/tachyon/bin/tachyon version | cut -d':' -f2 | tr -d ' '` && \
             perl -0777 -i -pe \
             "s/(<artifactId>tachyon-client<\/artifactId>\n\s*)<version>.*/\1<version>${tachyon_version}<\/version>/g" \
             /spark/core/pom.xml
      when: use_spark

    - name: set spark/conf/slaves
      command: cp /vagrant/files/workers /spark/conf/slaves
      when: use_spark

    - name: set spark-env.sh
      shell: echo export SPARK_CLASSPATH=/tachyon/client/target/tachyon-client-*-jar-with-dependencies.jar:$SPARK_CLASSPATH >> /spark/conf/spark-env.sh
      when: use_spark and spark_version_lessthan_1
    - shell: echo export HADOOP_CONF_DIR=/hadoop/etc/hadoop >> /spark/conf/spark-env.sh
      when: use_spark

    - name: set spark/conf/core-site.xml
      script: config_spark.sh
      when: use_spark

    - copy: src=../ufs/{{ ufs }}/compile_spark.sh dest=/tmp/compile_spark.sh
    - name: compile spark and make-distribution
      command: bash /tmp/compile_spark.sh
      async: 1800
      poll: 60
      when: use_spark

- hosts: TachyonWorker*
  tasks:
    - name: rsync tachyon bin distribution from TachyonMaster
      shell: set -e \
          && mkdir -p /tachyon/core/target \
          && rsync -avz TachyonMaster.local:/tachyon/core/target/tachyon-*-jar-with-dependencies.jar /tachyon/core/target \
          && rsync -avz TachyonMaster.local:'/tachyon/bin /tachyon/conf /tachyon/libexec' /tachyon
      when: not is_vb

    - name: rsync spark bin distribution from TachyonMaster
      shell: rsync -avz TachyonMaster.local:/spark/dist/* /spark
      when: use_spark

- hosts: all
  tasks:
    - name: prepare /vagrant/shared
      shell: sudo mkdir -p /vagrant/shared && user=`whoami` && sudo chown -R $user /vagrant

    - name: install wget
      command: sudo yum install -y -q wget

# when is_vb, only master downloads ufs, others share throught /vagrant/shared
- hosts: TachyonMaster
  tasks:
    - name: download and configure underfs
      script: ../ufs/{{ ufs }}/init.sh
      when: is_vb
- hosts: TachyonWorker*
  tasks:
    - name: configure underfs
      script: ../ufs/{{ ufs }}/init.sh
      when: is_vb

# when not is_vb, all download ufs in parallel
- hosts: all
  tasks:
    - name: download and configure underfs
      script: ../ufs/{{ ufs }}/init.sh
      when: not is_vb

- hosts: TachyonMaster
  tasks:
    - name: start underfs
      script: ../ufs/{{ ufs }}/post.sh

    - name: start Tachyon
      script: start_tachyon_cluster.sh

    - name: start spark
      shell: /spark/sbin/start-all.sh
      when: use_spark


# vim:ft=ansible:
