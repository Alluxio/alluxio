// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/catalog/catalog_master.proto

package alluxio.grpc.catalog;

public interface ColumnChunkMetaDataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:alluxio.grpc.catalog.ColumnChunkMetaData)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .alluxio.grpc.catalog.ColumnPath path = 1;</code>
   */
  boolean hasPath();
  /**
   * <code>optional .alluxio.grpc.catalog.ColumnPath path = 1;</code>
   */
  alluxio.grpc.catalog.ColumnPath getPath();
  /**
   * <code>optional .alluxio.grpc.catalog.ColumnPath path = 1;</code>
   */
  alluxio.grpc.catalog.ColumnPathOrBuilder getPathOrBuilder();

  /**
   * <code>optional .alluxio.grpc.catalog.PrimitiveTypeName type = 2;</code>
   */
  boolean hasType();
  /**
   * <code>optional .alluxio.grpc.catalog.PrimitiveTypeName type = 2;</code>
   */
  alluxio.grpc.catalog.PrimitiveTypeName getType();

  /**
   * <code>optional .alluxio.grpc.catalog.ColumnChunkMetaData.CompressionCodecName codec = 3;</code>
   */
  boolean hasCodec();
  /**
   * <code>optional .alluxio.grpc.catalog.ColumnChunkMetaData.CompressionCodecName codec = 3;</code>
   */
  alluxio.grpc.catalog.ColumnChunkMetaData.CompressionCodecName getCodec();

  /**
   * <code>repeated .alluxio.grpc.catalog.ColumnChunkMetaData.Encoding encodings = 4;</code>
   */
  java.util.List<alluxio.grpc.catalog.ColumnChunkMetaData.Encoding> getEncodingsList();
  /**
   * <code>repeated .alluxio.grpc.catalog.ColumnChunkMetaData.Encoding encodings = 4;</code>
   */
  int getEncodingsCount();
  /**
   * <code>repeated .alluxio.grpc.catalog.ColumnChunkMetaData.Encoding encodings = 4;</code>
   */
  alluxio.grpc.catalog.ColumnChunkMetaData.Encoding getEncodings(int index);

  /**
   * <code>optional int64 first_data_page = 5;</code>
   */
  boolean hasFirstDataPage();
  /**
   * <code>optional int64 first_data_page = 5;</code>
   */
  long getFirstDataPage();

  /**
   * <code>optional int64 page_offset = 6;</code>
   */
  boolean hasPageOffset();
  /**
   * <code>optional int64 page_offset = 6;</code>
   */
  long getPageOffset();

  /**
   * <code>optional int64 value_count = 7;</code>
   */
  boolean hasValueCount();
  /**
   * <code>optional int64 value_count = 7;</code>
   */
  long getValueCount();

  /**
   * <code>optional int64 total_size = 8;</code>
   */
  boolean hasTotalSize();
  /**
   * <code>optional int64 total_size = 8;</code>
   */
  long getTotalSize();

  /**
   * <code>optional int64 total_uncompressed_size = 9;</code>
   */
  boolean hasTotalUncompressedSize();
  /**
   * <code>optional int64 total_uncompressed_size = 9;</code>
   */
  long getTotalUncompressedSize();
}
