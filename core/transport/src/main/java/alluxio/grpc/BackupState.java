// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/meta_master.proto

package alluxio.grpc;

/**
 * Protobuf enum {@code alluxio.grpc.meta.BackupState}
 */
public enum BackupState
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>EMPTY = 1;</code>
   */
  EMPTY(1),
  /**
   * <code>INITIATING = 2;</code>
   */
  INITIATING(2),
  /**
   * <code>TRANSITIONING = 3;</code>
   */
  TRANSITIONING(3),
  /**
   * <code>RUNNING = 4;</code>
   */
  RUNNING(4),
  /**
   * <code>COMPLETED = 5;</code>
   */
  COMPLETED(5),
  /**
   * <code>FAULTED = 6;</code>
   */
  FAULTED(6),
  ;

  /**
   * <code>EMPTY = 1;</code>
   */
  public static final int EMPTY_VALUE = 1;
  /**
   * <code>INITIATING = 2;</code>
   */
  public static final int INITIATING_VALUE = 2;
  /**
   * <code>TRANSITIONING = 3;</code>
   */
  public static final int TRANSITIONING_VALUE = 3;
  /**
   * <code>RUNNING = 4;</code>
   */
  public static final int RUNNING_VALUE = 4;
  /**
   * <code>COMPLETED = 5;</code>
   */
  public static final int COMPLETED_VALUE = 5;
  /**
   * <code>FAULTED = 6;</code>
   */
  public static final int FAULTED_VALUE = 6;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static BackupState valueOf(int value) {
    return forNumber(value);
  }

  public static BackupState forNumber(int value) {
    switch (value) {
      case 1: return EMPTY;
      case 2: return INITIATING;
      case 3: return TRANSITIONING;
      case 4: return RUNNING;
      case 5: return COMPLETED;
      case 6: return FAULTED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<BackupState>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      BackupState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<BackupState>() {
          public BackupState findValueByNumber(int number) {
            return BackupState.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return alluxio.grpc.MetaMasterProto.getDescriptor().getEnumTypes().get(3);
  }

  private static final BackupState[] VALUES = values();

  public static BackupState valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private BackupState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:alluxio.grpc.meta.BackupState)
}

