// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/meta_master.proto

package alluxio.grpc;

/**
 * Protobuf enum {@code alluxio.grpc.meta.BackupState}
 */
public enum BackupState
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>None = 1;</code>
   */
  None(1),
  /**
   * <code>Initiating = 2;</code>
   */
  Initiating(2),
  /**
   * <code>Transitioning = 3;</code>
   */
  Transitioning(3),
  /**
   * <code>Running = 4;</code>
   */
  Running(4),
  /**
   * <code>Completed = 5;</code>
   */
  Completed(5),
  /**
   * <code>Failed = 6;</code>
   */
  Failed(6),
  ;

  /**
   * <code>None = 1;</code>
   */
  public static final int None_VALUE = 1;
  /**
   * <code>Initiating = 2;</code>
   */
  public static final int Initiating_VALUE = 2;
  /**
   * <code>Transitioning = 3;</code>
   */
  public static final int Transitioning_VALUE = 3;
  /**
   * <code>Running = 4;</code>
   */
  public static final int Running_VALUE = 4;
  /**
   * <code>Completed = 5;</code>
   */
  public static final int Completed_VALUE = 5;
  /**
   * <code>Failed = 6;</code>
   */
  public static final int Failed_VALUE = 6;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static BackupState valueOf(int value) {
    return forNumber(value);
  }

  public static BackupState forNumber(int value) {
    switch (value) {
      case 1: return None;
      case 2: return Initiating;
      case 3: return Transitioning;
      case 4: return Running;
      case 5: return Completed;
      case 6: return Failed;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<BackupState>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      BackupState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<BackupState>() {
          public BackupState findValueByNumber(int number) {
            return BackupState.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return alluxio.grpc.MetaMasterProto.getDescriptor().getEnumTypes().get(3);
  }

  private static final BackupState[] VALUES = values();

  public static BackupState valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private BackupState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:alluxio.grpc.meta.BackupState)
}

