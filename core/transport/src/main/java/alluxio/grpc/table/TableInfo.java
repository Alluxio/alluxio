// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/table/table_master.proto

package alluxio.grpc.table;

/**
 * Protobuf type {@code alluxio.grpc.table.TableInfo}
 */
public  final class TableInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:alluxio.grpc.table.TableInfo)
    TableInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TableInfo.newBuilder() to construct.
  private TableInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TableInfo() {
    tableName_ = "";
    dbName_ = "";
    type_ = 0;
    version_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TableInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000001;
            tableName_ = bs;
            break;
          }
          case 18: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000002;
            dbName_ = bs;
            break;
          }
          case 24: {
            int rawValue = input.readEnum();
            alluxio.grpc.table.TableInfo.TableType value = alluxio.grpc.table.TableInfo.TableType.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(3, rawValue);
            } else {
              bitField0_ |= 0x00000004;
              type_ = rawValue;
            }
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            version_ = input.readUInt32();
            break;
          }
          case 42: {
            alluxio.grpc.table.Schema.Builder subBuilder = null;
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              subBuilder = schema_.toBuilder();
            }
            schema_ = input.readMessage(alluxio.grpc.table.Schema.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(schema_);
              schema_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000010;
            break;
          }
          case 50: {
            alluxio.grpc.table.UdbTableInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              subBuilder = udbInfo_.toBuilder();
            }
            udbInfo_ = input.readMessage(alluxio.grpc.table.UdbTableInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(udbInfo_);
              udbInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000020;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return alluxio.grpc.table.TableMasterProto.internal_static_alluxio_grpc_table_TableInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return alluxio.grpc.table.TableMasterProto.internal_static_alluxio_grpc_table_TableInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            alluxio.grpc.table.TableInfo.class, alluxio.grpc.table.TableInfo.Builder.class);
  }

  /**
   * Protobuf enum {@code alluxio.grpc.table.TableInfo.TableType}
   */
  public enum TableType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *native alluxio metastore table, both metadata and datafile managed by alluxio
     * </pre>
     *
     * <code>NATIVE = 0;</code>
     */
    NATIVE(0),
    /**
     * <pre>
     *imported alluxio metastore table, only the metadata is managed by alluxio
     * </pre>
     *
     * <code>IMPORTED = 1;</code>
     */
    IMPORTED(1),
    ;

    /**
     * <pre>
     *native alluxio metastore table, both metadata and datafile managed by alluxio
     * </pre>
     *
     * <code>NATIVE = 0;</code>
     */
    public static final int NATIVE_VALUE = 0;
    /**
     * <pre>
     *imported alluxio metastore table, only the metadata is managed by alluxio
     * </pre>
     *
     * <code>IMPORTED = 1;</code>
     */
    public static final int IMPORTED_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TableType valueOf(int value) {
      return forNumber(value);
    }

    public static TableType forNumber(int value) {
      switch (value) {
        case 0: return NATIVE;
        case 1: return IMPORTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TableType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TableType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TableType>() {
            public TableType findValueByNumber(int number) {
              return TableType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return alluxio.grpc.table.TableInfo.getDescriptor().getEnumTypes().get(0);
    }

    private static final TableType[] VALUES = values();

    public static TableType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TableType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:alluxio.grpc.table.TableInfo.TableType)
  }

  private int bitField0_;
  public static final int TABLE_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object tableName_;
  /**
   * <code>optional string table_name = 1;</code>
   */
  public boolean hasTableName() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional string table_name = 1;</code>
   */
  public java.lang.String getTableName() {
    java.lang.Object ref = tableName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        tableName_ = s;
      }
      return s;
    }
  }
  /**
   * <code>optional string table_name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getTableNameBytes() {
    java.lang.Object ref = tableName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tableName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DB_NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object dbName_;
  /**
   * <code>optional string db_name = 2;</code>
   */
  public boolean hasDbName() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional string db_name = 2;</code>
   */
  public java.lang.String getDbName() {
    java.lang.Object ref = dbName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        dbName_ = s;
      }
      return s;
    }
  }
  /**
   * <code>optional string db_name = 2;</code>
   */
  public com.google.protobuf.ByteString
      getDbNameBytes() {
    java.lang.Object ref = dbName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      dbName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TYPE_FIELD_NUMBER = 3;
  private int type_;
  /**
   * <code>optional .alluxio.grpc.table.TableInfo.TableType type = 3;</code>
   */
  public boolean hasType() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional .alluxio.grpc.table.TableInfo.TableType type = 3;</code>
   */
  public alluxio.grpc.table.TableInfo.TableType getType() {
    alluxio.grpc.table.TableInfo.TableType result = alluxio.grpc.table.TableInfo.TableType.valueOf(type_);
    return result == null ? alluxio.grpc.table.TableInfo.TableType.NATIVE : result;
  }

  public static final int VERSION_FIELD_NUMBER = 4;
  private int version_;
  /**
   * <code>optional uint32 version = 4;</code>
   */
  public boolean hasVersion() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional uint32 version = 4;</code>
   */
  public int getVersion() {
    return version_;
  }

  public static final int SCHEMA_FIELD_NUMBER = 5;
  private alluxio.grpc.table.Schema schema_;
  /**
   * <code>optional .alluxio.grpc.table.Schema schema = 5;</code>
   */
  public boolean hasSchema() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional .alluxio.grpc.table.Schema schema = 5;</code>
   */
  public alluxio.grpc.table.Schema getSchema() {
    return schema_ == null ? alluxio.grpc.table.Schema.getDefaultInstance() : schema_;
  }
  /**
   * <code>optional .alluxio.grpc.table.Schema schema = 5;</code>
   */
  public alluxio.grpc.table.SchemaOrBuilder getSchemaOrBuilder() {
    return schema_ == null ? alluxio.grpc.table.Schema.getDefaultInstance() : schema_;
  }

  public static final int UDB_INFO_FIELD_NUMBER = 6;
  private alluxio.grpc.table.UdbTableInfo udbInfo_;
  /**
   * <code>optional .alluxio.grpc.table.UdbTableInfo udb_info = 6;</code>
   */
  public boolean hasUdbInfo() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>optional .alluxio.grpc.table.UdbTableInfo udb_info = 6;</code>
   */
  public alluxio.grpc.table.UdbTableInfo getUdbInfo() {
    return udbInfo_ == null ? alluxio.grpc.table.UdbTableInfo.getDefaultInstance() : udbInfo_;
  }
  /**
   * <code>optional .alluxio.grpc.table.UdbTableInfo udb_info = 6;</code>
   */
  public alluxio.grpc.table.UdbTableInfoOrBuilder getUdbInfoOrBuilder() {
    return udbInfo_ == null ? alluxio.grpc.table.UdbTableInfo.getDefaultInstance() : udbInfo_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (hasUdbInfo()) {
      if (!getUdbInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tableName_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, dbName_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeEnum(3, type_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeUInt32(4, version_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeMessage(5, getSchema());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeMessage(6, getUdbInfo());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tableName_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, dbName_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, type_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, version_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getSchema());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getUdbInfo());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof alluxio.grpc.table.TableInfo)) {
      return super.equals(obj);
    }
    alluxio.grpc.table.TableInfo other = (alluxio.grpc.table.TableInfo) obj;

    boolean result = true;
    result = result && (hasTableName() == other.hasTableName());
    if (hasTableName()) {
      result = result && getTableName()
          .equals(other.getTableName());
    }
    result = result && (hasDbName() == other.hasDbName());
    if (hasDbName()) {
      result = result && getDbName()
          .equals(other.getDbName());
    }
    result = result && (hasType() == other.hasType());
    if (hasType()) {
      result = result && type_ == other.type_;
    }
    result = result && (hasVersion() == other.hasVersion());
    if (hasVersion()) {
      result = result && (getVersion()
          == other.getVersion());
    }
    result = result && (hasSchema() == other.hasSchema());
    if (hasSchema()) {
      result = result && getSchema()
          .equals(other.getSchema());
    }
    result = result && (hasUdbInfo() == other.hasUdbInfo());
    if (hasUdbInfo()) {
      result = result && getUdbInfo()
          .equals(other.getUdbInfo());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTableName()) {
      hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getTableName().hashCode();
    }
    if (hasDbName()) {
      hash = (37 * hash) + DB_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getDbName().hashCode();
    }
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
    }
    if (hasVersion()) {
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
    }
    if (hasSchema()) {
      hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getSchema().hashCode();
    }
    if (hasUdbInfo()) {
      hash = (37 * hash) + UDB_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getUdbInfo().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static alluxio.grpc.table.TableInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static alluxio.grpc.table.TableInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static alluxio.grpc.table.TableInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static alluxio.grpc.table.TableInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static alluxio.grpc.table.TableInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static alluxio.grpc.table.TableInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static alluxio.grpc.table.TableInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static alluxio.grpc.table.TableInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static alluxio.grpc.table.TableInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static alluxio.grpc.table.TableInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static alluxio.grpc.table.TableInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static alluxio.grpc.table.TableInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(alluxio.grpc.table.TableInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code alluxio.grpc.table.TableInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:alluxio.grpc.table.TableInfo)
      alluxio.grpc.table.TableInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return alluxio.grpc.table.TableMasterProto.internal_static_alluxio_grpc_table_TableInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return alluxio.grpc.table.TableMasterProto.internal_static_alluxio_grpc_table_TableInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              alluxio.grpc.table.TableInfo.class, alluxio.grpc.table.TableInfo.Builder.class);
    }

    // Construct using alluxio.grpc.table.TableInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSchemaFieldBuilder();
        getUdbInfoFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      tableName_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      dbName_ = "";
      bitField0_ = (bitField0_ & ~0x00000002);
      type_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      version_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      if (schemaBuilder_ == null) {
        schema_ = null;
      } else {
        schemaBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      if (udbInfoBuilder_ == null) {
        udbInfo_ = null;
      } else {
        udbInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return alluxio.grpc.table.TableMasterProto.internal_static_alluxio_grpc_table_TableInfo_descriptor;
    }

    public alluxio.grpc.table.TableInfo getDefaultInstanceForType() {
      return alluxio.grpc.table.TableInfo.getDefaultInstance();
    }

    public alluxio.grpc.table.TableInfo build() {
      alluxio.grpc.table.TableInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public alluxio.grpc.table.TableInfo buildPartial() {
      alluxio.grpc.table.TableInfo result = new alluxio.grpc.table.TableInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.tableName_ = tableName_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.dbName_ = dbName_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.type_ = type_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.version_ = version_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      if (schemaBuilder_ == null) {
        result.schema_ = schema_;
      } else {
        result.schema_ = schemaBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      if (udbInfoBuilder_ == null) {
        result.udbInfo_ = udbInfo_;
      } else {
        result.udbInfo_ = udbInfoBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof alluxio.grpc.table.TableInfo) {
        return mergeFrom((alluxio.grpc.table.TableInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(alluxio.grpc.table.TableInfo other) {
      if (other == alluxio.grpc.table.TableInfo.getDefaultInstance()) return this;
      if (other.hasTableName()) {
        bitField0_ |= 0x00000001;
        tableName_ = other.tableName_;
        onChanged();
      }
      if (other.hasDbName()) {
        bitField0_ |= 0x00000002;
        dbName_ = other.dbName_;
        onChanged();
      }
      if (other.hasType()) {
        setType(other.getType());
      }
      if (other.hasVersion()) {
        setVersion(other.getVersion());
      }
      if (other.hasSchema()) {
        mergeSchema(other.getSchema());
      }
      if (other.hasUdbInfo()) {
        mergeUdbInfo(other.getUdbInfo());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (hasUdbInfo()) {
        if (!getUdbInfo().isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      alluxio.grpc.table.TableInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (alluxio.grpc.table.TableInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object tableName_ = "";
    /**
     * <code>optional string table_name = 1;</code>
     */
    public boolean hasTableName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string table_name = 1;</code>
     */
    public java.lang.String getTableName() {
      java.lang.Object ref = tableName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tableName_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string table_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTableNameBytes() {
      java.lang.Object ref = tableName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string table_name = 1;</code>
     */
    public Builder setTableName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      tableName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string table_name = 1;</code>
     */
    public Builder clearTableName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      tableName_ = getDefaultInstance().getTableName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string table_name = 1;</code>
     */
    public Builder setTableNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      tableName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object dbName_ = "";
    /**
     * <code>optional string db_name = 2;</code>
     */
    public boolean hasDbName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string db_name = 2;</code>
     */
    public java.lang.String getDbName() {
      java.lang.Object ref = dbName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dbName_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string db_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDbNameBytes() {
      java.lang.Object ref = dbName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dbName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string db_name = 2;</code>
     */
    public Builder setDbName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      dbName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string db_name = 2;</code>
     */
    public Builder clearDbName() {
      bitField0_ = (bitField0_ & ~0x00000002);
      dbName_ = getDefaultInstance().getDbName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string db_name = 2;</code>
     */
    public Builder setDbNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      dbName_ = value;
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <code>optional .alluxio.grpc.table.TableInfo.TableType type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .alluxio.grpc.table.TableInfo.TableType type = 3;</code>
     */
    public alluxio.grpc.table.TableInfo.TableType getType() {
      alluxio.grpc.table.TableInfo.TableType result = alluxio.grpc.table.TableInfo.TableType.valueOf(type_);
      return result == null ? alluxio.grpc.table.TableInfo.TableType.NATIVE : result;
    }
    /**
     * <code>optional .alluxio.grpc.table.TableInfo.TableType type = 3;</code>
     */
    public Builder setType(alluxio.grpc.table.TableInfo.TableType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .alluxio.grpc.table.TableInfo.TableType type = 3;</code>
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      type_ = 0;
      onChanged();
      return this;
    }

    private int version_ ;
    /**
     * <code>optional uint32 version = 4;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 version = 4;</code>
     */
    public int getVersion() {
      return version_;
    }
    /**
     * <code>optional uint32 version = 4;</code>
     */
    public Builder setVersion(int value) {
      bitField0_ |= 0x00000008;
      version_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 version = 4;</code>
     */
    public Builder clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000008);
      version_ = 0;
      onChanged();
      return this;
    }

    private alluxio.grpc.table.Schema schema_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        alluxio.grpc.table.Schema, alluxio.grpc.table.Schema.Builder, alluxio.grpc.table.SchemaOrBuilder> schemaBuilder_;
    /**
     * <code>optional .alluxio.grpc.table.Schema schema = 5;</code>
     */
    public boolean hasSchema() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .alluxio.grpc.table.Schema schema = 5;</code>
     */
    public alluxio.grpc.table.Schema getSchema() {
      if (schemaBuilder_ == null) {
        return schema_ == null ? alluxio.grpc.table.Schema.getDefaultInstance() : schema_;
      } else {
        return schemaBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .alluxio.grpc.table.Schema schema = 5;</code>
     */
    public Builder setSchema(alluxio.grpc.table.Schema value) {
      if (schemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        schema_ = value;
        onChanged();
      } else {
        schemaBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>optional .alluxio.grpc.table.Schema schema = 5;</code>
     */
    public Builder setSchema(
        alluxio.grpc.table.Schema.Builder builderForValue) {
      if (schemaBuilder_ == null) {
        schema_ = builderForValue.build();
        onChanged();
      } else {
        schemaBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>optional .alluxio.grpc.table.Schema schema = 5;</code>
     */
    public Builder mergeSchema(alluxio.grpc.table.Schema value) {
      if (schemaBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            schema_ != null &&
            schema_ != alluxio.grpc.table.Schema.getDefaultInstance()) {
          schema_ =
            alluxio.grpc.table.Schema.newBuilder(schema_).mergeFrom(value).buildPartial();
        } else {
          schema_ = value;
        }
        onChanged();
      } else {
        schemaBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>optional .alluxio.grpc.table.Schema schema = 5;</code>
     */
    public Builder clearSchema() {
      if (schemaBuilder_ == null) {
        schema_ = null;
        onChanged();
      } else {
        schemaBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }
    /**
     * <code>optional .alluxio.grpc.table.Schema schema = 5;</code>
     */
    public alluxio.grpc.table.Schema.Builder getSchemaBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getSchemaFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .alluxio.grpc.table.Schema schema = 5;</code>
     */
    public alluxio.grpc.table.SchemaOrBuilder getSchemaOrBuilder() {
      if (schemaBuilder_ != null) {
        return schemaBuilder_.getMessageOrBuilder();
      } else {
        return schema_ == null ?
            alluxio.grpc.table.Schema.getDefaultInstance() : schema_;
      }
    }
    /**
     * <code>optional .alluxio.grpc.table.Schema schema = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        alluxio.grpc.table.Schema, alluxio.grpc.table.Schema.Builder, alluxio.grpc.table.SchemaOrBuilder> 
        getSchemaFieldBuilder() {
      if (schemaBuilder_ == null) {
        schemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            alluxio.grpc.table.Schema, alluxio.grpc.table.Schema.Builder, alluxio.grpc.table.SchemaOrBuilder>(
                getSchema(),
                getParentForChildren(),
                isClean());
        schema_ = null;
      }
      return schemaBuilder_;
    }

    private alluxio.grpc.table.UdbTableInfo udbInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        alluxio.grpc.table.UdbTableInfo, alluxio.grpc.table.UdbTableInfo.Builder, alluxio.grpc.table.UdbTableInfoOrBuilder> udbInfoBuilder_;
    /**
     * <code>optional .alluxio.grpc.table.UdbTableInfo udb_info = 6;</code>
     */
    public boolean hasUdbInfo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .alluxio.grpc.table.UdbTableInfo udb_info = 6;</code>
     */
    public alluxio.grpc.table.UdbTableInfo getUdbInfo() {
      if (udbInfoBuilder_ == null) {
        return udbInfo_ == null ? alluxio.grpc.table.UdbTableInfo.getDefaultInstance() : udbInfo_;
      } else {
        return udbInfoBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .alluxio.grpc.table.UdbTableInfo udb_info = 6;</code>
     */
    public Builder setUdbInfo(alluxio.grpc.table.UdbTableInfo value) {
      if (udbInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        udbInfo_ = value;
        onChanged();
      } else {
        udbInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <code>optional .alluxio.grpc.table.UdbTableInfo udb_info = 6;</code>
     */
    public Builder setUdbInfo(
        alluxio.grpc.table.UdbTableInfo.Builder builderForValue) {
      if (udbInfoBuilder_ == null) {
        udbInfo_ = builderForValue.build();
        onChanged();
      } else {
        udbInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <code>optional .alluxio.grpc.table.UdbTableInfo udb_info = 6;</code>
     */
    public Builder mergeUdbInfo(alluxio.grpc.table.UdbTableInfo value) {
      if (udbInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020) &&
            udbInfo_ != null &&
            udbInfo_ != alluxio.grpc.table.UdbTableInfo.getDefaultInstance()) {
          udbInfo_ =
            alluxio.grpc.table.UdbTableInfo.newBuilder(udbInfo_).mergeFrom(value).buildPartial();
        } else {
          udbInfo_ = value;
        }
        onChanged();
      } else {
        udbInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <code>optional .alluxio.grpc.table.UdbTableInfo udb_info = 6;</code>
     */
    public Builder clearUdbInfo() {
      if (udbInfoBuilder_ == null) {
        udbInfo_ = null;
        onChanged();
      } else {
        udbInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }
    /**
     * <code>optional .alluxio.grpc.table.UdbTableInfo udb_info = 6;</code>
     */
    public alluxio.grpc.table.UdbTableInfo.Builder getUdbInfoBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getUdbInfoFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .alluxio.grpc.table.UdbTableInfo udb_info = 6;</code>
     */
    public alluxio.grpc.table.UdbTableInfoOrBuilder getUdbInfoOrBuilder() {
      if (udbInfoBuilder_ != null) {
        return udbInfoBuilder_.getMessageOrBuilder();
      } else {
        return udbInfo_ == null ?
            alluxio.grpc.table.UdbTableInfo.getDefaultInstance() : udbInfo_;
      }
    }
    /**
     * <code>optional .alluxio.grpc.table.UdbTableInfo udb_info = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        alluxio.grpc.table.UdbTableInfo, alluxio.grpc.table.UdbTableInfo.Builder, alluxio.grpc.table.UdbTableInfoOrBuilder> 
        getUdbInfoFieldBuilder() {
      if (udbInfoBuilder_ == null) {
        udbInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            alluxio.grpc.table.UdbTableInfo, alluxio.grpc.table.UdbTableInfo.Builder, alluxio.grpc.table.UdbTableInfoOrBuilder>(
                getUdbInfo(),
                getParentForChildren(),
                isClean());
        udbInfo_ = null;
      }
      return udbInfoBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:alluxio.grpc.table.TableInfo)
  }

  // @@protoc_insertion_point(class_scope:alluxio.grpc.table.TableInfo)
  private static final alluxio.grpc.table.TableInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new alluxio.grpc.table.TableInfo();
  }

  public static alluxio.grpc.table.TableInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<TableInfo>
      PARSER = new com.google.protobuf.AbstractParser<TableInfo>() {
    public TableInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TableInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TableInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TableInfo> getParserForType() {
    return PARSER;
  }

  public alluxio.grpc.table.TableInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

