syntax = "proto2";

option java_multiple_files = true;
option java_package = "alluxio.grpc";
option java_outer_classname = "VersionProto";

package alluxio.grpc;


enum AlluxioServiceType {
  FILE_SYSTEM_MASTER_CLIENT_SERVICE = 0;
  FILE_SYSTEM_MASTER_WORKER_SERVICE = 1;
  FILE_SYSTEM_MASTER_JOB_SERVICE = 2;
  BLOCK_MASTER_CLIENT_SERVICE = 3;
  BLOCK_MASTER_WORKER_SERVICE = 4;
  META_MASTER_CLIENT_SERVICE = 5;
  META_MASTER_MASTER_SERVICE = 6;
  METRICS_MASTER_CLIENT_SERVICE = 7;
  JOB_MASTER_CLIENT_SERVICE = 8;
  JOB_MASTER_WORKER_SERVICE = 9;
  KEY_VALUE_MASTER_CLIENT_SERVICE = 10;
  KEY_VALUE_WORKER_SERVICE = 11;
  UNKNOWN_SERVICE = 12;
}

message GetServiceVersionPRequest {
  optional AlluxioServiceType serviceType = 1;
}
message GetServiceVersionPResponse {
  optional int64 version = 1;
}

service AlluxioVersionService {

  /**
   * Returns the version of the master service.
   * NOTE: The version should be updated every time a backwards incompatible API change occurs.
   */
  rpc getServiceVersion(GetServiceVersionPRequest) returns (GetServiceVersionPResponse);
}
