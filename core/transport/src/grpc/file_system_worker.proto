syntax = "proto2";

option java_multiple_files = true;
option java_package = "alluxio.grpc";
option java_outer_classname = "FileSystemWorkerProto";

package alluxio.grpc;

message CancelUfsFilePOptions {}
message CancelUfsFilePResponse {}
message CancelUfsFilePRequest {
  /** the id of the current session */
  optional int64 sessionId = 1;
  /** the worker specific file id of the ufs file */
  optional int64 tempUfsFileId  = 2;
  /** the options for canceling the file */
  optional CancelUfsFilePOptions options = 3;
}

message CloseUfsFilePOptions {}
message CloseUfsFilePResponse {}
message CloseUfsFilePRequest {
  /** the id of the current session */
  optional int64 sessionId = 1;
  /** the worker specific file id of the ufs file */
  optional int64 tempUfsFileId = 2;
  /** the options for closing the file */
  optional CloseUfsFilePOptions options = 3;
}

message CompleteUfsFilePOptions {
  optional string owner = 1;
  optional string group = 2;
  optional int32 mode = 3;
}
message CompleteUfsFilePReponse {
  optional int64 id = 1;
}
message CompleteUfsFilePRequest {
  /** the id of the current session */
  optional int64 sessionId = 1;
  /** the worker specific file id of the ufs file */
  optional int64 tempUfsFileId = 2;
  /** the options for completing the file */
  optional CompleteUfsFilePOptions options = 3;
}

message CreateUfsFilePOptions {
  optional string owner = 1;
  optional string group = 2;
  optional int32 mode = 3;
}
message CreateUfsFilePResponse {
  optional int64 id = 1;
}
message CreateUfsFilePRequest {
  /** the id of the current session */
  optional int64 sessionId = 1;
  /** the path of the file in the ufs */
  optional string ufsPath = 2;
  /** the options for creating the file */
  optional CreateUfsFilePOptions options = 3;
}

message OpenUfsFilePOptions {}
message OpenUfsFilePResponse {
  optional int64 id = 1;
}
message OpenUfsFilePRequest {
  /** the id of the current session */
  optional int64 sessionId = 1;
  /** the path of the file in the ufs */
  optional string ufsPath = 2;
  /** the options for opening the file */
  optional OpenUfsFilePOptions options = 3;
}

message SessionFileSystemHeartbeatPOptions {}
message SessionFileSystemHeartbeatPResponse {}
message SessionFileSystemHeartbeatPRequest {
  /** the id of the current session */
  optional int64 sessionId = 1;
  /** the client metrics. deprecated since 1.3.0 and will be removed in 2.0 */
  repeated int64 metrics = 2;
  /** the method options */
  optional SessionFileSystemHeartbeatPOptions options = 3;
}

/**
 * This interface contains file system worker service endpoints for Alluxio clients.
 */
service FileSystemWorkerClientService {
  /**
   * Cancels a file which has not been completed in the under file system.
   */
  rpc CancelUfsFile (CancelUfsFilePRequest) returns (CancelUfsFilePResponse);

  /**
   * Closes a file in the under file system which was previously opened for reading.
   **/
  rpc CloseUfsFile (CloseUfsFilePRequest) returns (CloseUfsFilePResponse);

  /**
   * Completes a file in the under file system.
   */
  rpc CompleteUfsFile (CompleteUfsFilePRequest) returns (CompleteUfsFilePReponse);

  /**
   * Creates a file in the under file system.
   */
  rpc CreateUfsFile (CreateUfsFilePRequest) returns (CreateUfsFilePResponse);

  /**
   * Opens an existing file in the under file system for reading.
   */
  rpc OpenUfsFile (OpenUfsFilePRequest) returns (OpenUfsFilePResponse);

  /**
   * Local session send heartbeat to local worker to keep its state.
   */
  rpc SessionFileSystemHeartbeat (SessionFileSystemHeartbeatPRequest) returns (SessionFileSystemHeartbeatPResponse);
}
