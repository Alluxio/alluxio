syntax = "proto2";

option java_multiple_files = true;
option java_package = "alluxio.grpc";
option java_outer_classname = "CommonProto";

package alluxio.grpc;

/**
 * Contains the information of a block in Alluxio. It maintains the worker nodes where the replicas
 * of the blocks are stored.
 */
message BlockInfo {
  optional int64 blockId = 1;
  optional int64 length = 2;
  repeated BlockLocation locations = 3;
}

/**
 * Information about blocks.
 */
message BlockLocation {
  optional int64 workerId = 1;
  optional WorkerNetAddress workerAddress = 2;
  optional string tierAlias = 3;
}

/**
 * Information about metrics.
 */
message Metric {
  optional string instance = 1;
  optional string hostname = 2;
  optional string instanceId = 3;
  optional string name = 4;
  optional double value = 5;
  map<string,string> tags = 6;
}

enum CommandType {
  Unknown = 0;
  Nothing = 1;
  Register = 2; // Ask the worker to re-register.
  Free = 3;     // Ask the worker to free files.
  Delete = 4;   // Ask the worker to delete files.
  Persist = 5;  // Ask the worker to persist a file for lineage
}

message ConfigProperty {
  optional string name = 1;
  optional string source = 2;
  optional string value = 3;
}

enum TtlAction {
  DELETE = 0; // Delete the file after TTL expires.
  FREE = 1;   // Free the file after TTL expires.
}

message Command {
  optional CommandType commandType = 1;
  repeated int64 data = 2;
}

message LocalityTier {
  optional string tierName = 1;
  optional string value = 2;
}

message TieredIdentity {
  repeated LocalityTier tiers = 1;
}

/**
 * Address information about masters.
 */
message NetAddress {
  optional string host = 1;
  optional int32 rpcPort = 2;
}

/**
 * Address information about workers.
 */
message WorkerNetAddress {
  optional string host = 1;
  optional int32 rpcPort = 2;
  optional int32 dataPort = 3;
  optional int32 webPort = 4;
  optional string domainSocketPath = 5;
  optional TieredIdentity tieredIdentity = 6;
}