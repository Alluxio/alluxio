{"version":3,"file":"index.cjs.js","sources":["lib/get-custom-properties-from-root.js","lib/get-custom-properties-from-imports.js","lib/transform-value-ast.js","lib/transform-properties.js","lib/write-custom-properties-to-exports.js","index.js"],"sourcesContent":["import valueParser from 'postcss-values-parser';\n\n// return custom selectors from the css root, conditionally removing them\nexport default function getCustomPropertiesFromRoot(root, opts) {\n\t// initialize custom selectors\n\tconst customPropertiesFromHtmlElement = {};\n\tconst customPropertiesFromRootPsuedo = {};\n\n\t// for each html or :root rule\n\troot.nodes.slice().forEach(rule => {\n\t\tconst customPropertiesObject = isHtmlRule(rule)\n\t\t\t? customPropertiesFromHtmlElement\n\t\t: isRootRule(rule)\n\t\t\t? customPropertiesFromRootPsuedo\n\t\t: null;\n\n\t\t// for each custom property\n\t\tif (customPropertiesObject) {\n\t\t\trule.nodes.slice().forEach(decl => {\n\t\t\t\tif (isCustomDecl(decl)) {\n\t\t\t\t\tconst { prop } = decl;\n\n\t\t\t\t\t// write the parsed value to the custom property\n\t\t\t\t\tcustomPropertiesObject[prop] = valueParser(decl.value).parse().nodes;\n\n\t\t\t\t\t// conditionally remove the custom property declaration\n\t\t\t\t\tif (!opts.preserve) {\n\t\t\t\t\t\tdecl.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// conditionally remove the empty html or :root rule\n\t\t\tif (!opts.preserve && isEmptyParent(rule)) {\n\t\t\t\trule.remove();\n\t\t\t}\n\t\t}\n\t});\n\n\t// return all custom properties, preferring :root properties over html properties\n\treturn { ...customPropertiesFromHtmlElement, ...customPropertiesFromRootPsuedo };\n}\n\n// match html and :root rules\nconst htmlSelectorRegExp = /^html$/i;\nconst rootSelectorRegExp = /^:root$/i;\nconst customPropertyRegExp = /^--[A-z][\\w-]*$/;\n\n// whether the node is an html or :root rule\nconst isHtmlRule = node => node.type === 'rule' && htmlSelectorRegExp.test(node.selector) && Object(node.nodes).length;\nconst isRootRule = node => node.type === 'rule' && rootSelectorRegExp.test(node.selector) && Object(node.nodes).length;\n\n// whether the node is an custom property\nconst isCustomDecl = node => node.type === 'decl' && customPropertyRegExp.test(node.prop);\n\n// whether the node is a parent without children\nconst isEmptyParent = node => Object(node.nodes).length === 0;\n","import fs from 'fs';\nimport path from 'path';\nimport postcss from 'postcss';\nimport valueParser from 'postcss-values-parser';\nimport getCustomPropertiesFromRoot from './get-custom-properties-from-root';\n\n/* Get Custom Properties from CSS File\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromCSSFile(from) {\n\tconst css = await readFile(from);\n\tconst root = postcss.parse(css, { from });\n\n\treturn getCustomPropertiesFromRoot(root, { preserve: true });\n}\n\n/* Get Custom Properties from Object\n/* ========================================================================== */\n\nfunction getCustomPropertiesFromObject(object) {\n\tconst customProperties = Object.assign(\n\t\t{},\n\t\tObject(object).customProperties,\n\t\tObject(object)['custom-properties']\n\t);\n\n\tfor (const key in customProperties) {\n\t\tcustomProperties[key] = valueParser(String(customProperties[key])).parse().nodes;\n\t}\n\n\treturn customProperties;\n}\n\n/* Get Custom Properties from JSON file\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromJSONFile(from) {\n\tconst object = await readJSON(from);\n\n\treturn getCustomPropertiesFromObject(object);\n}\n\n/* Get Custom Properties from JS file\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromJSFile(from) {\n\tconst object = await import(from);\n\n\treturn getCustomPropertiesFromObject(object);\n}\n\n/* Get Custom Properties from Imports\n/* ========================================================================== */\n\nexport default function getCustomPropertiesFromImports(sources) {\n\treturn sources.map(source => {\n\t\tif (source instanceof Promise) {\n\t\t\treturn source;\n\t\t} else if (source instanceof Function) {\n\t\t\treturn source();\n\t\t}\n\n\t\t// read the source as an object\n\t\tconst opts = source === Object(source) ? source : { from: String(source) };\n\n\t\t// skip objects with Custom Properties\n\t\tif (opts.customProperties || opts['custom-properties']) {\n\t\t\treturn opts\n\t\t}\n\n\t\t// source pathname\n\t\tconst from = path.resolve(String(opts.from || ''));\n\n\t\t// type of file being read from\n\t\tconst type = (opts.type || path.extname(from).slice(1)).toLowerCase();\n\n\t\treturn { type, from };\n\t}).reduce(async (customProperties, source) => {\n\t\tconst { type, from } = await source;\n\n\t\tif (type === 'css') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromCSSFile(from));\n\t\t}\n\n\t\tif (type === 'js') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromJSFile(from));\n\t\t}\n\n\t\tif (type === 'json') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromJSONFile(from));\n\t\t}\n\n\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromObject(await source));\n\t}, {});\n}\n\n/* Helper utilities\n/* ========================================================================== */\n\nconst readFile = from => new Promise((resolve, reject) => {\n\tfs.readFile(from, 'utf8', (error, result) => {\n\t\tif (error) {\n\t\t\treject(error);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n});\n\nconst readJSON = async from => JSON.parse(await readFile(from));\n","export default function transformValueAST(root, customProperties) {\n\tif (root.nodes && root.nodes.length) {\n\t\troot.nodes.slice().forEach(child => {\n\t\t\tif (isVarFunction(child)) {\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tconst [propertyNode, comma, ...fallbacks] = child.nodes.slice(1, -1);\n\t\t\t\tconst { value: name } = propertyNode;\n\n\t\t\t\tif (name in customProperties) {\n\t\t\t\t\t// conditionally replace a known custom property\n\t\t\t\t\tconst nodes = asClonedArrayWithBeforeSpacing(customProperties[name], child.raws.before);\n\n\t\t\t\t\tchild.replaceWith(...nodes);\n\n\t\t\t\t\tretransformValueAST({ nodes }, customProperties, name);\n\t\t\t\t} else if (fallbacks.length) {\n\t\t\t\t\t// conditionally replace a custom property with a fallback\n\t\t\t\t\tconst index = root.nodes.indexOf(child);\n\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\troot.nodes.splice(index, 1, ...asClonedArrayWithBeforeSpacing(fallbacks, child.raws.before));\n\t\t\t\t\t}\n\n\t\t\t\t\ttransformValueAST(root, customProperties);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttransformValueAST(child, customProperties);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn root;\n}\n\n// retransform the current ast without a custom property (to prevent recursion)\nfunction retransformValueAST(root, customProperties, withoutProperty) {\n\tconst nextCustomProperties = Object.assign({}, customProperties);\n\n\tdelete nextCustomProperties[withoutProperty];\n\n\treturn transformValueAST(root, nextCustomProperties);\n}\n\n// match var() functions\nconst varRegExp = /^var$/i;\n\n// whether the node is a var() function\nconst isVarFunction = node => node.type === 'func' && varRegExp.test(node.value) && Object(node.nodes).length > 0;\n\n// return an array with its nodes cloned, preserving the raw\nconst asClonedArrayWithBeforeSpacing = (array, beforeSpacing) => {\n\tconst clonedArray = asClonedArray(array, null);\n\n\tif (clonedArray[0]) {\n\t\tclonedArray[0].raws.before = beforeSpacing;\n\t}\n\n\treturn clonedArray;\n};\n\n// return an array with its nodes cloned\nconst asClonedArray = (array, parent) => array.map(node => asClonedNode(node, parent));\n\n// return a cloned node\nconst asClonedNode = (node, parent) => {\n\tconst cloneNode = new node.constructor(node);\n\n\tfor (const key in node) {\n\t\tif (key === 'parent') {\n\t\t\tcloneNode.parent = parent;\n\t\t} else if (Object(node[key]).constructor === Array) {\n\t\t\tcloneNode[key] = asClonedArray(node.nodes, cloneNode);\n\t\t} else if (Object(node[key]).constructor === Object) {\n\t\t\tcloneNode[key] = Object.assign({}, node[key]);\n\t\t}\n\t}\n\n\treturn cloneNode;\n};\n","import valueParser from 'postcss-values-parser';\nimport transformValueAST from './transform-value-ast';\n\n// transform custom pseudo selectors with custom selectors\nexport default (root, customProperties, opts) => {\n\t// walk decls that can be transformed\n\troot.walkDecls(decl => {\n\t\tif (isTransformableDecl(decl)) {\n\t\t\tconst originalValue = decl.value;\n\t\t\tconst valueAST = valueParser(originalValue).parse();\n\t\t\tconst value = String(transformValueAST(valueAST, customProperties));\n\n\t\t\t// conditionally transform values that have changed\n\t\t\tif (value !== originalValue) {\n\t\t\t\tif (opts.preserve) {\n\t\t\t\t\tdecl.cloneBefore({ value });\n\t\t\t\t} else {\n\t\t\t\t\tdecl.value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\n// match custom properties\nconst customPropertyRegExp = /^--[A-z][\\w-]*$/;\n\n// match custom property inclusions\nconst customPropertiesRegExp = /(^|[^\\w-])var\\([\\W\\w]+\\)/;\n\n// whether the declaration should be potentially transformed\nconst isTransformableDecl = decl => !customPropertyRegExp.test(decl.prop) && customPropertiesRegExp.test(decl.value);\n","import fs from 'fs';\nimport path from 'path';\n\n/* Write Custom Properties to CSS File\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToCssFile(to, customProperties) {\n\tconst cssContent = Object.keys(customProperties).reduce((cssLines, name) => {\n\t\tcssLines.push(`\\t${name}: ${customProperties[name]};`);\n\n\t\treturn cssLines;\n\t}, []).join('\\n');\n\tconst css = `:root {\\n${cssContent}\\n}\\n`;\n\n\tawait writeFile(to, css);\n}\n\n/* Write Custom Properties to JSON file\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToJsonFile(to, customProperties) {\n\tconst jsonContent = JSON.stringify({\n\t\t'custom-properties': customProperties\n\t}, null, '  ');\n\tconst json = `${jsonContent}\\n`;\n\n\tawait writeFile(to, json);\n}\n\n/* Write Custom Properties to Common JS file\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToCjsFile(to, customProperties) {\n\tconst jsContents = Object.keys(customProperties).reduce((jsLines, name) => {\n\t\tjsLines.push(`\\t\\t'${escapeForJS(name)}': '${escapeForJS(customProperties[name])}'`);\n\n\t\treturn jsLines;\n\t}, []).join(',\\n');\n\tconst js = `module.exports = {\\n\\tcustomProperties: {\\n${jsContents}\\n\\t}\\n};\\n`;\n\n\tawait writeFile(to, js);\n}\n\n/* Write Custom Properties to Module JS file\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToMjsFile(to, customProperties) {\n\tconst mjsContents = Object.keys(customProperties).reduce((mjsLines, name) => {\n\t\tmjsLines.push(`\\t'${escapeForJS(name)}': '${escapeForJS(customProperties[name])}'`);\n\n\t\treturn mjsLines;\n\t}, []).join(',\\n');\n\tconst mjs = `export const customProperties = {\\n${mjsContents}\\n};\\n`;\n\n\tawait writeFile(to, mjs);\n}\n\n/* Write Custom Properties to Exports\n/* ========================================================================== */\n\nexport default function writeCustomPropertiesToExports(customProperties, destinations) {\n\treturn Promise.all(destinations.map(async destination => {\n\t\tif (destination instanceof Function) {\n\t\t\tawait destination(defaultCustomPropertiesToJSON(customProperties));\n\t\t} else {\n\t\t\t// read the destination as an object\n\t\t\tconst opts = destination === Object(destination) ? destination : { to: String(destination) };\n\n\t\t\t// transformer for Custom Properties into a JSON-compatible object\n\t\t\tconst toJSON = opts.toJSON || defaultCustomPropertiesToJSON;\n\n\t\t\tif ('customProperties' in opts) {\n\t\t\t\t// write directly to an object as customProperties\n\t\t\t\topts.customProperties = toJSON(customProperties);\n\t\t\t} else if ('custom-properties' in opts) {\n\t\t\t\t// write directly to an object as custom-properties\n\t\t\t\topts['custom-properties'] = toJSON(customProperties);\n\t\t\t} else {\n\t\t\t\t// destination pathname\n\t\t\t\tconst to = String(opts.to || '');\n\n\t\t\t\t// type of file being written to\n\t\t\t\tconst type = (opts.type || path.extname(opts.to).slice(1)).toLowerCase();\n\n\t\t\t\t// transformed Custom Properties\n\t\t\t\tconst customPropertiesJSON = toJSON(customProperties);\n\n\t\t\t\tif (type === 'css') {\n\t\t\t\t\tawait writeCustomPropertiesToCssFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'js') {\n\t\t\t\t\tawait writeCustomPropertiesToCjsFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'json') {\n\t\t\t\t\tawait writeCustomPropertiesToJsonFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'mjs') {\n\t\t\t\t\tawait writeCustomPropertiesToMjsFile(to, customPropertiesJSON);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}));\n}\n\n/* Helper utilities\n/* ========================================================================== */\n\nconst defaultCustomPropertiesToJSON = customProperties => {\n\treturn Object.keys(customProperties).reduce((customPropertiesJSON, key) => {\n\t\tcustomPropertiesJSON[key] = String(customProperties[key]);\n\n\t\treturn customPropertiesJSON;\n\t}, {});\n};\n\nconst writeFile = (to, text) => new Promise((resolve, reject) => {\n\tfs.writeFile(to, text, error => {\n\t\tif (error) {\n\t\t\treject(error);\n\t\t} else {\n\t\t\tresolve();\n\t\t}\n\t});\n});\n\nconst escapeForJS = string => string.replace(/\\\\([\\s\\S])|(')/g, '\\\\$1$2').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n","import postcss from 'postcss';\nimport getCustomPropertiesFromRoot from './lib/get-custom-properties-from-root';\nimport getCustomPropertiesFromImports from './lib/get-custom-properties-from-imports';\nimport transformProperties from './lib/transform-properties';\nimport writeCustomPropertiesToExports from './lib/write-custom-properties-to-exports';\n\nexport default postcss.plugin('postcss-custom-properties', opts => {\n\t// whether to preserve custom selectors and rules using them\n\tconst preserve = 'preserve' in Object(opts) ? Boolean(opts.preserve) : true;\n\n\t// sources to import custom selectors from\n\tconst importFrom = [].concat(Object(opts).importFrom || []);\n\n\t// destinations to export custom selectors to\n\tconst exportTo = [].concat(Object(opts).exportTo || []);\n\n\t// promise any custom selectors are imported\n\tconst customPropertiesPromise = getCustomPropertiesFromImports(importFrom);\n\n\treturn async root => {\n\t\tconst customProperties = Object.assign(\n\t\t\tawait customPropertiesPromise,\n\t\t\tgetCustomPropertiesFromRoot(root, { preserve })\n\t\t);\n\n\t\tawait writeCustomPropertiesToExports(customProperties, exportTo);\n\n\t\ttransformProperties(root, customProperties, { preserve });\n\t};\n});\n"],"names":["getCustomPropertiesFromRoot","root","opts","customPropertiesFromHtmlElement","customPropertiesFromRootPsuedo","nodes","slice","forEach","rule","customPropertiesObject","isHtmlRule","isRootRule","decl","isCustomDecl","prop","valueParser","value","parse","preserve","remove","isEmptyParent","htmlSelectorRegExp","rootSelectorRegExp","customPropertyRegExp","node","type","test","selector","Object","length","getCustomPropertiesFromCSSFile","from","css","readFile","postcss","getCustomPropertiesFromObject","object","customProperties","assign","key","String","getCustomPropertiesFromJSONFile","readJSON","getCustomPropertiesFromJSFile","getCustomPropertiesFromImports","sources","map","source","Promise","Function","path","resolve","extname","toLowerCase","reduce","reject","fs","error","result","JSON","transformValueAST","child","isVarFunction","propertyNode","comma","fallbacks","name","asClonedArrayWithBeforeSpacing","raws","before","replaceWith","retransformValueAST","index","indexOf","splice","withoutProperty","nextCustomProperties","varRegExp","array","beforeSpacing","clonedArray","asClonedArray","parent","asClonedNode","cloneNode","constructor","Array","walkDecls","isTransformableDecl","originalValue","valueAST","cloneBefore","customPropertiesRegExp","writeCustomPropertiesToCssFile","to","cssContent","keys","cssLines","push","join","writeFile","writeCustomPropertiesToJsonFile","jsonContent","stringify","json","writeCustomPropertiesToCjsFile","jsContents","jsLines","escapeForJS","js","writeCustomPropertiesToMjsFile","mjsContents","mjsLines","mjs","writeCustomPropertiesToExports","destinations","all","destination","defaultCustomPropertiesToJSON","toJSON","customPropertiesJSON","text","string","replace","plugin","Boolean","importFrom","concat","exportTo","customPropertiesPromise","transformProperties"],"mappings":"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"}