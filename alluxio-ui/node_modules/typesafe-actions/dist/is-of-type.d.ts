import { StringType } from './types';
export declare function isOfType<T extends StringType, A extends {
    type: StringType;
}>(type: T, action: A): action is A extends {
    type: T;
} ? A : never;
export declare function isOfType<T extends K[], K extends StringType, A extends {
    type: StringType;
}>(type: T, action: A): action is A extends {
    type: T[number];
} ? A : never;
export declare function isOfType<T extends StringType>(type: T): <A extends {
    type: StringType;
}>(action: A) => action is A extends {
    type: T;
} ? A : never;
export declare function isOfType<T extends K[], K extends StringType>(type: T): <A extends {
    type: StringType;
}>(action: A) => action is A extends {
    type: T[number];
} ? A : never;
