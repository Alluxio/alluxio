'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports['default'] = wrap;

var _object = require('object.assign');

var _object2 = _interopRequireDefault(_object);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _semver = require('semver');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  children: _propTypes2['default'].element.isRequired
};

var Wrapper = ((0, _semver.intersects)('>= 0.14', _react2['default'].version)
// eslint-disable-next-line prefer-arrow-callback
? function () {
  return (0, _object2['default'])(function () {
    function SimpleSFCWrapper(_ref) {
      var children = _ref.children;

      return children;
    }

    return SimpleSFCWrapper;
  }(), { propTypes: propTypes });
} : function () {
  var SimpleClassWrapper = function (_React$Component) {
    _inherits(SimpleClassWrapper, _React$Component);

    function SimpleClassWrapper() {
      _classCallCheck(this, SimpleClassWrapper);

      return _possibleConstructorReturn(this, (SimpleClassWrapper.__proto__ || Object.getPrototypeOf(SimpleClassWrapper)).apply(this, arguments));
    }

    _createClass(SimpleClassWrapper, [{
      key: 'render',
      value: function () {
        function render() {
          var children = this.props.children;

          return children;
        }

        return render;
      }()
    }]);

    return SimpleClassWrapper;
  }(_react2['default'].Component);

  SimpleClassWrapper.propTypes = propTypes;
  return SimpleClassWrapper;
})();

function wrap(element) {
  return _react2['default'].createElement(
    Wrapper,
    null,
    element
  );
}