{
  "activity": {
    "checkStarringRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/starred/:owner/:repo"
    },
    "deleteRepoSubscription": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/subscription"
    },
    "deleteThreadSubscription": {
      "method": "DELETE",
      "params": {
        "thread_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/notifications/threads/:thread_id/subscription"
    },
    "getRepoSubscription": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/subscription"
    },
    "getThread": {
      "method": "GET",
      "params": {
        "thread_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/notifications/threads/:thread_id"
    },
    "getThreadSubscription": {
      "method": "GET",
      "params": {
        "thread_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/notifications/threads/:thread_id/subscription"
    },
    "listEventsForOrg": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/events/orgs/:org"
    },
    "listEventsForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/events"
    },
    "listFeeds": {
      "method": "GET",
      "params": {},
      "url": "/feeds"
    },
    "listNotifications": {
      "method": "GET",
      "params": {
        "all": {
          "type": "boolean"
        },
        "before": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "participating": {
          "type": "boolean"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/notifications"
    },
    "listNotificationsForRepo": {
      "method": "GET",
      "params": {
        "all": {
          "type": "boolean"
        },
        "before": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "participating": {
          "type": "boolean"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/notifications"
    },
    "listPublicEvents": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/events"
    },
    "listPublicEventsForOrg": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/events"
    },
    "listPublicEventsForRepoNetwork": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/networks/:owner/:repo/events"
    },
    "listPublicEventsForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/events/public"
    },
    "listReceivedEventsForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/received_events"
    },
    "listReceivedPublicEventsForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/received_events/public"
    },
    "listRepoEvents": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/events"
    },
    "listReposStarredByAuthenticatedUser": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/user/starred"
    },
    "listReposStarredByUser": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/starred"
    },
    "listReposWatchedByUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/subscriptions"
    },
    "listStargazersForRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/stargazers"
    },
    "listWatchedReposForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/subscriptions"
    },
    "listWatchersForRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/subscribers"
    },
    "markAsRead": {
      "method": "PUT",
      "params": {
        "last_read_at": {
          "type": "string"
        }
      },
      "url": "/notifications"
    },
    "markNotificationsAsReadForRepo": {
      "method": "PUT",
      "params": {
        "last_read_at": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/notifications"
    },
    "markThreadAsRead": {
      "method": "PATCH",
      "params": {
        "thread_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/notifications/threads/:thread_id"
    },
    "setRepoSubscription": {
      "method": "PUT",
      "params": {
        "ignored": {
          "type": "boolean"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "subscribed": {
          "type": "boolean"
        }
      },
      "url": "/repos/:owner/:repo/subscription"
    },
    "setThreadSubscription": {
      "method": "PUT",
      "params": {
        "ignored": {
          "type": "boolean"
        },
        "thread_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/notifications/threads/:thread_id/subscription"
    },
    "starRepo": {
      "method": "PUT",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/starred/:owner/:repo"
    },
    "unstarRepo": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/starred/:owner/:repo"
    }
  },
  "apps": {
    "addRepoToInstallation": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "PUT",
      "params": {
        "installation_id": {
          "required": true,
          "type": "integer"
        },
        "repository_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/installations/:installation_id/repositories/:repository_id"
    },
    "createInstallationToken": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "POST",
      "params": {
        "installation_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/installations/:installation_id/access_tokens"
    },
    "findOrgInstallation": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/installation"
    },
    "findRepoInstallation": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/installation"
    },
    "findUserInstallation": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/installation"
    },
    "getAuthenticated": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {},
      "url": "/app"
    },
    "getBySlug": {
      "method": "GET",
      "params": {
        "app_slug": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/apps/:app_slug"
    },
    "getInstallation": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "installation_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/app/installations/:installation_id"
    },
    "listInstallationReposForAuthenticatedUser": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "installation_id": {
          "required": true,
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/installations/:installation_id/repositories"
    },
    "listInstallations": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/app/installations"
    },
    "listInstallationsForAuthenticatedUser": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/installations"
    },
    "listRepos": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/installation/repositories"
    },
    "removeRepoFromInstallation": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "DELETE",
      "params": {
        "installation_id": {
          "required": true,
          "type": "integer"
        },
        "repository_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/installations/:installation_id/repositories/:repository_id"
    }
  },
  "checks": {
    "create": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "POST",
      "params": {
        "actions": {
          "type": "object[]"
        },
        "actions[].description": {
          "required": true,
          "type": "string"
        },
        "actions[].identifier": {
          "required": true,
          "type": "string"
        },
        "actions[].label": {
          "required": true,
          "type": "string"
        },
        "completed_at": {
          "type": "string"
        },
        "conclusion": {
          "enum": [
            "success",
            "failure",
            "neutral",
            "cancelled",
            "timed_out",
            "action_required"
          ],
          "type": "string"
        },
        "details_url": {
          "type": "string"
        },
        "external_id": {
          "type": "string"
        },
        "head_sha": {
          "required": true,
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "output": {
          "type": "object"
        },
        "output.annotations": {
          "type": "object[]"
        },
        "output.annotations[].blob_href": {
          "required": true,
          "type": "string"
        },
        "output.annotations[].end_line": {
          "required": true,
          "type": "integer"
        },
        "output.annotations[].filename": {
          "required": true,
          "type": "string"
        },
        "output.annotations[].message": {
          "required": true,
          "type": "string"
        },
        "output.annotations[].raw_details": {
          "type": "string"
        },
        "output.annotations[].start_line": {
          "required": true,
          "type": "integer"
        },
        "output.annotations[].title": {
          "type": "string"
        },
        "output.annotations[].warning_level": {
          "enum": [
            "notice",
            "warning",
            "failure"
          ],
          "required": true,
          "type": "string"
        },
        "output.images": {
          "type": "object[]"
        },
        "output.images[].alt": {
          "required": true,
          "type": "string"
        },
        "output.images[].caption": {
          "type": "string"
        },
        "output.images[].image_url": {
          "required": true,
          "type": "string"
        },
        "output.summary": {
          "required": true,
          "type": "string"
        },
        "output.text": {
          "type": "string"
        },
        "output.title": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-runs"
    },
    "createSuite": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "POST",
      "params": {
        "head_sha": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-suites"
    },
    "get": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "GET",
      "params": {
        "check_run_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-runs/:check_run_id"
    },
    "getSuite": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "GET",
      "params": {
        "check_suite_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-suites/:check_suite_id"
    },
    "listAnnotations": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "GET",
      "params": {
        "check_run_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-runs/:check_run_id/annotations"
    },
    "listForRef": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "GET",
      "params": {
        "check_name": {
          "type": "string"
        },
        "filter": {
          "enum": [
            "latest",
            "all"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "status": {
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:ref/check-runs"
    },
    "listForSuite": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "GET",
      "params": {
        "check_name": {
          "type": "string"
        },
        "check_suite_id": {
          "required": true,
          "type": "integer"
        },
        "filter": {
          "enum": [
            "latest",
            "all"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "status": {
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-suites/:check_suite_id/check-runs"
    },
    "listSuitesForRef": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "GET",
      "params": {
        "app_id": {
          "type": "integer"
        },
        "check_name": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:ref/check-suites"
    },
    "requestSuites": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "POST",
      "params": {
        "head_sha": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-suite-requests"
    },
    "setSuitesPreferences": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "PATCH",
      "params": {
        "auto_trigger_checks": {
          "type": "object[]"
        },
        "auto_trigger_checks[].app_id": {
          "required": true,
          "type": "integer"
        },
        "auto_trigger_checks[].setting": {
          "required": true,
          "type": "boolean"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-suites/preferences"
    },
    "update": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "PATCH",
      "params": {
        "actions": {
          "type": "object[]"
        },
        "actions[].description": {
          "required": true,
          "type": "string"
        },
        "actions[].identifier": {
          "required": true,
          "type": "string"
        },
        "actions[].label": {
          "required": true,
          "type": "string"
        },
        "check_run_id": {
          "required": true,
          "type": "integer"
        },
        "completed_at": {
          "type": "string"
        },
        "conclusion": {
          "enum": [
            "success",
            "failure",
            "neutral",
            "cancelled",
            "timed_out",
            "action_required"
          ],
          "type": "string"
        },
        "details_url": {
          "type": "string"
        },
        "external_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "output": {
          "type": "object"
        },
        "output.annotations": {
          "type": "object[]"
        },
        "output.annotations[].blob_href": {
          "required": true,
          "type": "string"
        },
        "output.annotations[].end_line": {
          "required": true,
          "type": "integer"
        },
        "output.annotations[].filename": {
          "required": true,
          "type": "string"
        },
        "output.annotations[].message": {
          "required": true,
          "type": "string"
        },
        "output.annotations[].raw_details": {
          "type": "string"
        },
        "output.annotations[].start_line": {
          "required": true,
          "type": "integer"
        },
        "output.annotations[].title": {
          "type": "string"
        },
        "output.annotations[].warning_level": {
          "enum": [
            "notice",
            "warning",
            "failure"
          ],
          "required": true,
          "type": "string"
        },
        "output.images": {
          "type": "object[]"
        },
        "output.images[].alt": {
          "required": true,
          "type": "string"
        },
        "output.images[].caption": {
          "type": "string"
        },
        "output.images[].image_url": {
          "required": true,
          "type": "string"
        },
        "output.summary": {
          "required": true,
          "type": "string"
        },
        "output.text": {
          "type": "string"
        },
        "output.title": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-runs/:check_run_id"
    }
  },
  "codesOfConduct": {
    "getConductCode": {
      "headers": {
        "accept": "application/vnd.github.scarlet-witch-preview+json"
      },
      "method": "GET",
      "params": {
        "key": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/codes_of_conduct/:key"
    },
    "getForRepo": {
      "headers": {
        "accept": "application/vnd.github.scarlet-witch-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/community/code_of_conduct"
    },
    "listConductCodes": {
      "headers": {
        "accept": "application/vnd.github.scarlet-witch-preview+json"
      },
      "method": "GET",
      "params": {},
      "url": "/codes_of_conduct"
    }
  },
  "emojis": {
    "get": {
      "method": "GET",
      "params": {},
      "url": "/emojis"
    }
  },
  "enterpriseAdmin": {
    "addAuthorizedSshKey": {
      "method": "POST",
      "params": {
        "authorized_key": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/setup/api/settings/authorized-keys"
    },
    "checkConfigurationStatus": {
      "method": "GET",
      "params": {},
      "url": "/setup/api/configcheck"
    },
    "checkMaintenanceStatus": {
      "method": "GET",
      "params": {},
      "url": "/setup/api/maintenance"
    },
    "createGlobalHook": {
      "headers": {
        "accept": "application/vnd.github.superpro-preview+json"
      },
      "method": "POST",
      "params": {
        "active": {
          "type": "boolean"
        },
        "config": {
          "required": true,
          "type": "object"
        },
        "config.content_type": {
          "type": "string"
        },
        "config.insecure_ssl": {
          "type": "string"
        },
        "config.secret": {
          "type": "string"
        },
        "config.url": {
          "required": true,
          "type": "string"
        },
        "events": {
          "enum": [
            "user",
            "organization"
          ],
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/hooks"
    },
    "createImpersonationOAuthToken": {
      "method": "POST",
      "params": {
        "scopes": {
          "type": "string[]"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/users/:username/authorizations"
    },
    "createOrg": {
      "method": "POST",
      "params": {
        "admin": {
          "required": true,
          "type": "string"
        },
        "login": {
          "required": true,
          "type": "string"
        },
        "profile_name": {
          "type": "string"
        }
      },
      "url": "/admin/organizations"
    },
    "createPreReceiveEnvironment": {
      "method": "POST",
      "params": {
        "image_url": {
          "required": true,
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/pre-receive-environments"
    },
    "createPreReceiveHook": {
      "method": "POST",
      "params": {
        "allow_downstream_configuration": {
          "type": "boolean"
        },
        "enforcement": {
          "type": "string"
        },
        "environment": {
          "required": true,
          "type": "object"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "script": {
          "required": true,
          "type": "string"
        },
        "script_repository": {
          "required": true,
          "type": "object"
        }
      },
      "url": "/admin/pre-receive-hooks"
    },
    "createUser": {
      "method": "POST",
      "params": {
        "email": {
          "type": "string"
        },
        "login": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/users"
    },
    "deleteGlobalHook": {
      "headers": {
        "accept": "application/vnd.github.superpro-preview+json"
      },
      "method": "DELETE",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/hooks/:hook_id"
    },
    "deleteImpersonationOAuthToken": {
      "method": "DELETE",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/users/:username/authorizations"
    },
    "deletePreReceiveEnvironment": {
      "method": "DELETE",
      "params": {
        "pre_receive_environment_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/pre-receive-environments/:pre_receive_environment_id"
    },
    "deletePreReceiveHook": {
      "method": "DELETE",
      "params": {
        "pre_receive_hook_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/pre_receive_hooks/:pre_receive_hook_id"
    },
    "deleteUser": {
      "method": "DELETE",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/users/:username"
    },
    "demoteSiteAdministratorToOrdinaryUser": {
      "method": "DELETE",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/site_admin"
    },
    "enableOrDisableMaintenanceMode": {
      "method": "POST",
      "params": {
        "maintenance": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/setup/api/maintenance"
    },
    "getGlobalHook": {
      "headers": {
        "accept": "application/vnd.github.superpro-preview+json"
      },
      "method": "GET",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/hooks/:hook_id"
    },
    "getLicenseInformation": {
      "method": "GET",
      "params": {},
      "url": "/enterprise/settings/license"
    },
    "getPreReceiveEnvironment": {
      "method": "GET",
      "params": {
        "pre_receive_environment_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/pre-receive-environments/:pre_receive_environment_id"
    },
    "getPreReceiveEnvironmentDownloadStatus": {
      "method": "GET",
      "params": {
        "downloaded_at": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "pre_receive_environment_id": {
          "required": true,
          "type": "integer"
        },
        "state": {
          "type": "string"
        }
      },
      "url": "/admin/pre-receive-environments/:pre_receive_environment_id/downloads/latest"
    },
    "getPreReceiveHook": {
      "method": "GET",
      "params": {
        "pre_receive_hook_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/pre-receive-hooks/:pre_receive_hook_id"
    },
    "getPreReceiveHookForOrg": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "pre_receive_hook_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/orgs/:org/pre-receive-hooks/:pre_receive_hook_id"
    },
    "getPreReceiveHookForRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "pre_receive_hook_id": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pre-receive-hooks/:pre_receive_hook_id"
    },
    "getTypeStats": {
      "method": "GET",
      "params": {
        "type": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/enterprise/stats/:type"
    },
    "listGlobalHooks": {
      "headers": {
        "accept": "application/vnd.github.superpro-preview+json"
      },
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/admin/hooks"
    },
    "listPreReceiveEnvironments": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/admin/pre-receive-environments"
    },
    "listPreReceiveHooks": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/admin/pre-receive-hooks"
    },
    "listPreReceiveHooksForOrg": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/pre-receive-hooks"
    },
    "listPreReceiveHooksForRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pre-receive-hooks"
    },
    "modifySettings": {
      "method": "PUT",
      "params": {
        "settings": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/setup/api/settings"
    },
    "pingGlobalHook": {
      "headers": {
        "accept": "application/vnd.github.superpro-preview+json"
      },
      "method": "POST",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/hooks/:hook_id/pings"
    },
    "promoteOrdinaryUserToSiteAdministrator": {
      "method": "PUT",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/site_admin"
    },
    "queueIndexingJob": {
      "method": "POST",
      "params": {
        "target": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/staff/indexing_jobs"
    },
    "removeAuthorizedSshKey": {
      "method": "DELETE",
      "params": {
        "authorized_key": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/setup/api/settings/authorized-keys"
    },
    "removeEnforcementOverridesForPreReceiveHookForOrg": {
      "method": "DELETE",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "pre_receive_hook_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/orgs/:org/pre-receive-hooks/:pre_receive_hook_id"
    },
    "removeEnforcementOverridesForPreReceiveHookForRepo": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "pre_receive_hook_id": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pre-receive-hooks/:pre_receive_hook_id"
    },
    "renameOrg": {
      "method": "PATCH",
      "params": {
        "login": {
          "required": true,
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/organizations/:org"
    },
    "renameUser": {
      "method": "PATCH",
      "params": {
        "login": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/users/:username"
    },
    "retrieveAuthorizedSshKeys": {
      "method": "GET",
      "params": {},
      "url": "/setup/api/settings/authorized-keys"
    },
    "retrieveSettings": {
      "method": "GET",
      "params": {},
      "url": "/setup/api/settings"
    },
    "startConfigurationProcess": {
      "method": "POST",
      "params": {},
      "url": "/setup/api/configure"
    },
    "suspendUser": {
      "method": "PUT",
      "params": {
        "reason": {
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/suspended"
    },
    "syncLdapMappingForTeam": {
      "method": "POST",
      "params": {
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/ldap/teams/:team_id/sync"
    },
    "syncLdapMappingForUser": {
      "method": "POST",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/ldap/users/:username/sync"
    },
    "triggerPreReceiveEnvironmentDownload": {
      "method": "POST",
      "params": {
        "pre_receive_environment_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/pre-receive-environments/:pre_receive_environment_id/downloads"
    },
    "unsuspendUser": {
      "method": "DELETE",
      "params": {
        "reason": {
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/suspended"
    },
    "updateGlobalHook": {
      "headers": {
        "accept": "application/vnd.github.superpro-preview+json"
      },
      "method": "PATCH",
      "params": {
        "active": {
          "type": "boolean"
        },
        "config": {
          "type": "object"
        },
        "config.content_type": {
          "type": "string"
        },
        "config.insecure_ssl": {
          "type": "string"
        },
        "config.secret": {
          "type": "string"
        },
        "config.url": {
          "required": true,
          "type": "string"
        },
        "events": {
          "enum": [
            "user",
            "organization"
          ],
          "type": "string"
        },
        "hook_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/hooks/:hook_id"
    },
    "updateLdapMappingForTeam": {
      "method": "PATCH",
      "params": {
        "ldap_dn": {
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/ldap/teams/:team_id/mapping"
    },
    "updateLdapMappingForUser": {
      "method": "PATCH",
      "params": {
        "ldap_dn": {
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/ldap/users/:username/mapping"
    },
    "updatePreReceiveEnvironment": {
      "method": "PATCH",
      "params": {
        "image_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pre_receive_environment_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/pre-receive-environments/:pre_receive_environment_id"
    },
    "updatePreReceiveHook": {
      "method": "PATCH",
      "params": {
        "pre_receive_hook_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/pre_receive_hooks/:pre_receive_hook_id"
    },
    "updatePreReceiveHookEnforcementForOrg": {
      "method": "PATCH",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "pre_receive_hook_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/orgs/:org/pre-receive-hooks/:pre_receive_hook_id"
    },
    "updatePreReceiveHookEnforcementForRepo": {
      "method": "PATCH",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "pre_receive_hook_id": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pre-receive-hooks/:pre_receive_hook_id"
    },
    "upgradeLicense": {
      "method": "POST",
      "params": {
        "license": {
          "type": "string"
        }
      },
      "url": "/setup/api/upgrade"
    },
    "uploadLicenseForFirstTime": {
      "method": "POST",
      "params": {
        "license": {
          "required": true,
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "settings": {
          "type": "string"
        }
      },
      "url": "/setup/api/start"
    }
  },
  "gists": {
    "checkIsStarred": {
      "method": "GET",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id/star"
    },
    "create": {
      "method": "POST",
      "params": {
        "description": {
          "type": "string"
        },
        "files": {
          "required": true,
          "type": "object"
        },
        "files.content": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        }
      },
      "url": "/gists"
    },
    "createComment": {
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "gist_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id/comments"
    },
    "delete": {
      "method": "DELETE",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id"
    },
    "deleteComment": {
      "method": "DELETE",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "gist_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id/comments/:comment_id"
    },
    "fork": {
      "method": "POST",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id/forks"
    },
    "get": {
      "method": "GET",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id"
    },
    "getComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "gist_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id/comments/:comment_id"
    },
    "getRevision": {
      "method": "GET",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id/:sha"
    },
    "list": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/gists"
    },
    "listComments": {
      "method": "GET",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/gists/:gist_id/comments"
    },
    "listCommits": {
      "method": "GET",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/gists/:gist_id/commits"
    },
    "listForks": {
      "method": "GET",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/gists/:gist_id/forks"
    },
    "listPublic": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/gists/public"
    },
    "listPublicForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/gists"
    },
    "listStarred": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/gists/starred"
    },
    "star": {
      "method": "PUT",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id/star"
    },
    "unstar": {
      "method": "DELETE",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id/star"
    },
    "update": {
      "method": "PATCH",
      "params": {
        "description": {
          "type": "string"
        },
        "files": {
          "type": "object"
        },
        "files.content": {
          "type": "string"
        },
        "files.filename": {
          "type": "string"
        },
        "gist_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id"
    },
    "updateComment": {
      "method": "PATCH",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "gist_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id/comments/:comment_id"
    }
  },
  "git": {
    "createBlob": {
      "method": "POST",
      "params": {
        "content": {
          "required": true,
          "type": "string"
        },
        "encoding": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/blobs"
    },
    "createCommit": {
      "method": "POST",
      "params": {
        "author": {
          "type": "object"
        },
        "committer": {
          "type": "object"
        },
        "message": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "parents": {
          "required": true,
          "type": "string[]"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tree": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/commits"
    },
    "createRef": {
      "method": "POST",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/refs"
    },
    "createTag": {
      "method": "POST",
      "params": {
        "message": {
          "required": true,
          "type": "string"
        },
        "object": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tag": {
          "required": true,
          "type": "string"
        },
        "tagger": {
          "type": "object"
        },
        "tagger.date": {
          "type": "string"
        },
        "tagger.email": {
          "type": "string"
        },
        "tagger.name": {
          "type": "string"
        },
        "type": {
          "enum": [
            "commit",
            "tree",
            "blob"
          ],
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/tags"
    },
    "createTree": {
      "method": "POST",
      "params": {
        "base_tree": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tree": {
          "required": true,
          "type": "object[]"
        },
        "tree[].content": {
          "type": "string"
        },
        "tree[].mode": {
          "enum": [
            "100644",
            "100755",
            "040000",
            "160000",
            "120000"
          ],
          "type": "string"
        },
        "tree[].path": {
          "type": "string"
        },
        "tree[].sha": {
          "type": "string"
        },
        "tree[].type": {
          "enum": [
            "blob",
            "tree",
            "commit"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/trees"
    },
    "deleteRef": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/refs/:ref"
    },
    "getBlob": {
      "method": "GET",
      "params": {
        "file_sha": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/blobs/:file_sha"
    },
    "getCommit": {
      "method": "GET",
      "params": {
        "commit_sha": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/commits/:commit_sha"
    },
    "getRef": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/refs/:ref"
    },
    "getTag": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tag_sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/tags/:tag_sha"
    },
    "getTree": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "recursive": {
          "enum": [
            1
          ],
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tree_sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/trees/:tree_sha"
    },
    "listRefs": {
      "method": "GET",
      "params": {
        "namespace": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/refs/:namespace"
    },
    "updateRef": {
      "method": "PATCH",
      "params": {
        "force": {
          "type": "boolean"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/refs/:ref"
    }
  },
  "gitignore": {
    "getTemplate": {
      "method": "GET",
      "params": {
        "name": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gitignore/templates/:name"
    },
    "listTemplates": {
      "method": "GET",
      "params": {},
      "url": "/gitignore/templates"
    }
  },
  "issues": {
    "addAssignees": {
      "method": "POST",
      "params": {
        "assignees": {
          "type": "string[]"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/assignees"
    },
    "addLabels": {
      "method": "POST",
      "params": {
        "labels": {
          "mapTo": "data",
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/labels"
    },
    "checkAssignee": {
      "method": "GET",
      "params": {
        "assignee": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/assignees/:assignee"
    },
    "create": {
      "method": "POST",
      "params": {
        "assignee": {
          "type": "string"
        },
        "assignees": {
          "type": "string[]"
        },
        "body": {
          "type": "string"
        },
        "labels": {
          "type": "string[]"
        },
        "milestone": {
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "title": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues"
    },
    "createComment": {
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/comments"
    },
    "createLabel": {
      "method": "POST",
      "params": {
        "color": {
          "required": true,
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/labels"
    },
    "createMilestone": {
      "method": "POST",
      "params": {
        "description": {
          "type": "string"
        },
        "due_on": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "title": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/milestones"
    },
    "deleteComment": {
      "method": "DELETE",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/comments/:comment_id"
    },
    "deleteLabel": {
      "method": "DELETE",
      "params": {
        "name": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/labels/:name"
    },
    "deleteMilestone": {
      "method": "DELETE",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/milestones/:number"
    },
    "get": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number"
    },
    "getComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/comments/:comment_id"
    },
    "getEvent": {
      "method": "GET",
      "params": {
        "event_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/events/:event_id"
    },
    "getLabel": {
      "method": "GET",
      "params": {
        "name": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/labels/:name"
    },
    "getMilestone": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/milestones/:number"
    },
    "list": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "filter": {
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "all"
          ],
          "type": "string"
        },
        "labels": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/issues"
    },
    "listAssignees": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/assignees"
    },
    "listComments": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/comments"
    },
    "listCommentsForRepo": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/comments"
    },
    "listEvents": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/events"
    },
    "listEventsForRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/events"
    },
    "listEventsForTimeline": {
      "headers": {
        "accept": "application/vnd.github.mockingbird-preview+json"
      },
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/timeline"
    },
    "listForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "filter": {
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "all"
          ],
          "type": "string"
        },
        "labels": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/user/issues"
    },
    "listForOrg": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "filter": {
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "all"
          ],
          "type": "string"
        },
        "labels": {
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/orgs/:org/issues"
    },
    "listForRepo": {
      "method": "GET",
      "params": {
        "assignee": {
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "labels": {
          "type": "string"
        },
        "mentioned": {
          "type": "string"
        },
        "milestone": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues"
    },
    "listLabelsForMilestone": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/milestones/:number/labels"
    },
    "listLabelsForRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/labels"
    },
    "listLabelsOnIssue": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/labels"
    },
    "listMilestonesForRepo": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "due_on",
            "completeness"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/milestones"
    },
    "lock": {
      "method": "PUT",
      "params": {
        "lock_reason": {
          "enum": [
            "off-topic",
            "too heated",
            "resolved",
            "spam"
          ],
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/lock"
    },
    "removeAssignees": {
      "method": "DELETE",
      "params": {
        "assignees": {
          "type": "string[]"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/assignees"
    },
    "removeLabel": {
      "method": "DELETE",
      "params": {
        "name": {
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/labels/:name"
    },
    "removeLabels": {
      "method": "DELETE",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/labels"
    },
    "replaceLabels": {
      "method": "PUT",
      "params": {
        "labels": {
          "mapTo": "data",
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/labels"
    },
    "unlock": {
      "method": "DELETE",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/lock"
    },
    "update": {
      "method": "PATCH",
      "params": {
        "assignee": {
          "type": "string"
        },
        "assignees": {
          "type": "string[]"
        },
        "body": {
          "type": "string"
        },
        "labels": {
          "type": "string[]"
        },
        "milestone": {
          "allowNull": true,
          "type": "integer"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number"
    },
    "updateComment": {
      "method": "PATCH",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/comments/:comment_id"
    },
    "updateLabel": {
      "method": "PATCH",
      "params": {
        "color": {
          "type": "string"
        },
        "current_name": {
          "required": true,
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/labels/:current_name"
    },
    "updateMilestone": {
      "method": "PATCH",
      "params": {
        "description": {
          "type": "string"
        },
        "due_on": {
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/milestones/:number"
    }
  },
  "licenses": {
    "get": {
      "method": "GET",
      "params": {
        "license": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/licenses/:license"
    },
    "getForRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/license"
    },
    "list": {
      "method": "GET",
      "params": {},
      "url": "/licenses"
    }
  },
  "markdown": {
    "render": {
      "method": "POST",
      "params": {
        "context": {
          "type": "string"
        },
        "mode": {
          "enum": [
            "markdown",
            "gfm"
          ],
          "type": "string"
        },
        "text": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/markdown"
    },
    "renderRaw": {
      "headers": {
        "content-type": "text/plain; charset=utf-8"
      },
      "method": "POST",
      "params": {
        "data": {
          "mapTo": "data",
          "required": true,
          "type": "string"
        }
      },
      "url": "/markdown/raw"
    }
  },
  "meta": {
    "get": {
      "method": "GET",
      "params": {},
      "url": "/meta"
    }
  },
  "oauthAuthorizations": {
    "checkAuthorization": {
      "method": "GET",
      "params": {
        "access_token": {
          "required": true,
          "type": "string"
        },
        "client_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/applications/:client_id/tokens/:access_token"
    },
    "createAuthorization": {
      "method": "POST",
      "params": {
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "fingerprint": {
          "type": "string"
        },
        "note": {
          "required": true,
          "type": "string"
        },
        "note_url": {
          "type": "string"
        },
        "scopes": {
          "type": "string[]"
        }
      },
      "url": "/authorizations"
    },
    "deleteAuthorization": {
      "method": "DELETE",
      "params": {
        "authorization_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/authorizations/:authorization_id"
    },
    "deleteGrant": {
      "method": "DELETE",
      "params": {
        "grant_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/applications/grants/:grant_id"
    },
    "getAuthorization": {
      "method": "GET",
      "params": {
        "authorization_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/authorizations/:authorization_id"
    },
    "getGrant": {
      "method": "GET",
      "params": {
        "grant_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/applications/grants/:grant_id"
    },
    "getOrCreateAuthorizationForApp": {
      "method": "PUT",
      "params": {
        "client_id": {
          "required": true,
          "type": "string"
        },
        "client_secret": {
          "required": true,
          "type": "string"
        },
        "fingerprint": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "note_url": {
          "type": "string"
        },
        "scopes": {
          "type": "string[]"
        }
      },
      "url": "/authorizations/clients/:client_id"
    },
    "getOrCreateAuthorizationForAppAndFingerprint": {
      "method": "PUT",
      "params": {
        "client_id": {
          "required": true,
          "type": "string"
        },
        "client_secret": {
          "required": true,
          "type": "string"
        },
        "fingerprint": {
          "required": true,
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "note_url": {
          "type": "string"
        },
        "scopes": {
          "type": "string[]"
        }
      },
      "url": "/authorizations/clients/:client_id/:fingerprint"
    },
    "getOrCreateAuthorizationForAppFingerprint": {
      "method": "PUT",
      "params": {
        "client_id": {
          "required": true,
          "type": "string"
        },
        "client_secret": {
          "required": true,
          "type": "string"
        },
        "fingerprint": {
          "required": true,
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "note_url": {
          "type": "string"
        },
        "scopes": {
          "type": "string[]"
        }
      },
      "url": "/authorizations/clients/:client_id/:fingerprint"
    },
    "listAuthorizations": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/authorizations"
    },
    "listGrants": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/applications/grants"
    },
    "resetAuthorization": {
      "method": "POST",
      "params": {
        "access_token": {
          "required": true,
          "type": "string"
        },
        "client_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/applications/:client_id/tokens/:access_token"
    },
    "revokeAuthorizationForApplication": {
      "method": "DELETE",
      "params": {
        "access_token": {
          "required": true,
          "type": "string"
        },
        "client_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/applications/:client_id/tokens/:access_token"
    },
    "revokeGrantForApplication": {
      "method": "DELETE",
      "params": {
        "access_token": {
          "required": true,
          "type": "string"
        },
        "client_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/applications/:client_id/grants/:access_token"
    },
    "updateAuthorization": {
      "method": "PATCH",
      "params": {
        "add_scopes": {
          "type": "string[]"
        },
        "authorization_id": {
          "required": true,
          "type": "integer"
        },
        "fingerprint": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "note_url": {
          "type": "string"
        },
        "remove_scopes": {
          "type": "string[]"
        },
        "scopes": {
          "type": "string[]"
        }
      },
      "url": "/authorizations/:authorization_id"
    }
  },
  "orgs": {
    "addOrUpdateMembership": {
      "method": "PUT",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "role": {
          "enum": [
            "admin",
            "member"
          ],
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/memberships/:username"
    },
    "checkMembership": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/members/:username"
    },
    "checkPublicMembership": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/public_members/:username"
    },
    "concealMembership": {
      "method": "DELETE",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/public_members/:username"
    },
    "convertMemberToOutsideCollaborator": {
      "method": "PUT",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/outside_collaborators/:username"
    },
    "createHook": {
      "method": "POST",
      "params": {
        "active": {
          "type": "boolean"
        },
        "config": {
          "required": true,
          "type": "object"
        },
        "config.content_type": {
          "type": "string"
        },
        "config.insecure_ssl": {
          "type": "string"
        },
        "config.secret": {
          "type": "string"
        },
        "config.url": {
          "required": true,
          "type": "string"
        },
        "events": {
          "type": "string[]"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/hooks"
    },
    "deleteHook": {
      "method": "DELETE",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/hooks/:hook_id"
    },
    "get": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org"
    },
    "getHook": {
      "method": "GET",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/hooks/:hook_id"
    },
    "getMembership": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/memberships/:username"
    },
    "getMembershipForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/memberships/orgs/:org"
    },
    "list": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/organizations"
    },
    "listForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/orgs"
    },
    "listForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/orgs"
    },
    "listHooks": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/hooks"
    },
    "listMembers": {
      "method": "GET",
      "params": {
        "filter": {
          "enum": [
            "2fa_disabled",
            "all"
          ],
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "role": {
          "enum": [
            "all",
            "admin",
            "member"
          ],
          "type": "string"
        }
      },
      "url": "/orgs/:org/members"
    },
    "listMemberships": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "state": {
          "enum": [
            "active",
            "pending"
          ],
          "type": "string"
        }
      },
      "url": "/user/memberships/orgs"
    },
    "listOutsideCollaborators": {
      "method": "GET",
      "params": {
        "filter": {
          "enum": [
            "2fa_disabled",
            "all"
          ],
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/outside_collaborators"
    },
    "listPublicMembers": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/public_members"
    },
    "pingHook": {
      "method": "POST",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/hooks/:hook_id/pings"
    },
    "publicizeMembership": {
      "method": "PUT",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/public_members/:username"
    },
    "removeMember": {
      "method": "DELETE",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/members/:username"
    },
    "removeMembership": {
      "method": "DELETE",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/memberships/:username"
    },
    "removeOutsideCollaborator": {
      "method": "DELETE",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/outside_collaborators/:username"
    },
    "update": {
      "method": "PATCH",
      "params": {
        "billing_email": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "default_repository_permission": {
          "enum": [
            "read",
            "write",
            "admin",
            "none"
          ],
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "has_organization_projects": {
          "type": "boolean"
        },
        "has_repository_projects": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "members_can_create_repositories": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org"
    },
    "updateHook": {
      "method": "PATCH",
      "params": {
        "active": {
          "type": "boolean"
        },
        "config": {
          "type": "object"
        },
        "config.content_type": {
          "type": "string"
        },
        "config.insecure_ssl": {
          "type": "string"
        },
        "config.secret": {
          "type": "string"
        },
        "config.url": {
          "required": true,
          "type": "string"
        },
        "events": {
          "type": "string[]"
        },
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/hooks/:hook_id"
    },
    "updateMembership": {
      "method": "PATCH",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "active"
          ],
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/memberships/orgs/:org"
    }
  },
  "projects": {
    "addCollaborator": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "PUT",
      "params": {
        "permission": {
          "enum": [
            "read",
            "write",
            "admin"
          ],
          "type": "string"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/projects/:project_id/collaborators/:username"
    },
    "createCard": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "POST",
      "params": {
        "column_id": {
          "required": true,
          "type": "integer"
        },
        "content_id": {
          "type": "integer"
        },
        "content_type": {
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      },
      "url": "/projects/columns/:column_id/cards"
    },
    "createColumn": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "POST",
      "params": {
        "name": {
          "required": true,
          "type": "string"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/:project_id/columns"
    },
    "createForOrg": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "POST",
      "params": {
        "body": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/projects"
    },
    "createForRepo": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "POST",
      "params": {
        "body": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/projects"
    },
    "delete": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "DELETE",
      "params": {
        "project_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/:project_id"
    },
    "deleteCard": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "DELETE",
      "params": {
        "card_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/columns/cards/:card_id"
    },
    "deleteColumn": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "DELETE",
      "params": {
        "column_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/columns/:column_id"
    },
    "get": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/:project_id"
    },
    "getCard": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "card_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/columns/cards/:card_id"
    },
    "getColumn": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "column_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/columns/:column_id"
    },
    "listCards": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "column_id": {
          "required": true,
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/projects/columns/:column_id/cards"
    },
    "listCollaborators": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "affiliation": {
          "enum": [
            "outside",
            "direct",
            "all"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/:project_id/collaborators"
    },
    "listColumns": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/:project_id/columns"
    },
    "listForOrg": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/orgs/:org/projects"
    },
    "listForRepo": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/projects"
    },
    "moveCard": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "POST",
      "params": {
        "card_id": {
          "required": true,
          "type": "integer"
        },
        "column_id": {
          "type": "integer"
        },
        "position": {
          "required": true,
          "type": "string",
          "validation": "^(top|bottom|after:\\d+)$"
        }
      },
      "url": "/projects/columns/cards/:card_id/moves"
    },
    "moveColumn": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "POST",
      "params": {
        "column_id": {
          "required": true,
          "type": "integer"
        },
        "position": {
          "required": true,
          "type": "string",
          "validation": "^(first|last|after:\\d+)$"
        }
      },
      "url": "/projects/columns/:column_id/moves"
    },
    "removeCollaborator": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "DELETE",
      "params": {
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/projects/:project_id/collaborators/:username"
    },
    "reviewUserPermissionLevel": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/projects/:project_id/collaborators/:username/permission"
    },
    "update": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "PATCH",
      "params": {
        "body": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organization_permission": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "private": {
          "type": "boolean"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "state": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        }
      },
      "url": "/projects/:project_id"
    },
    "updateCard": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "PATCH",
      "params": {
        "card_id": {
          "required": true,
          "type": "integer"
        },
        "note": {
          "type": "string"
        }
      },
      "url": "/projects/columns/cards/:card_id"
    },
    "updateColumn": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "PATCH",
      "params": {
        "column_id": {
          "required": true,
          "type": "integer"
        },
        "name": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/projects/columns/:column_id"
    }
  },
  "pulls": {
    "checkIfMerged": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/merge"
    },
    "create": {
      "method": "POST",
      "params": {
        "base": {
          "required": true,
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "head": {
          "required": true,
          "type": "string"
        },
        "maintainer_can_modify": {
          "type": "boolean"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "title": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls"
    },
    "createComment": {
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "commit_id": {
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "path": {
          "required": true,
          "type": "string"
        },
        "position": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/comments"
    },
    "createCommentReply": {
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "in_reply_to": {
          "required": true,
          "type": "integer"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/comments"
    },
    "createFromIssue": {
      "method": "POST",
      "params": {
        "base": {
          "required": true,
          "type": "string"
        },
        "head": {
          "required": true,
          "type": "string"
        },
        "issue": {
          "required": true,
          "type": "integer"
        },
        "maintainer_can_modify": {
          "type": "boolean"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls"
    },
    "createReview": {
      "method": "POST",
      "params": {
        "body": {
          "type": "string"
        },
        "comments": {
          "type": "object[]"
        },
        "comments[].body": {
          "required": true,
          "type": "string"
        },
        "comments[].path": {
          "required": true,
          "type": "string"
        },
        "comments[].position": {
          "required": true,
          "type": "integer"
        },
        "commit_id": {
          "type": "string"
        },
        "event": {
          "enum": [
            "APPROVE",
            "REQUEST_CHANGES",
            "COMMENT"
          ],
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews"
    },
    "createReviewRequest": {
      "method": "POST",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "reviewers": {
          "type": "string[]"
        },
        "team_reviewers": {
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/requested_reviewers"
    },
    "deleteComment": {
      "method": "DELETE",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/comments/:comment_id"
    },
    "deletePendingReview": {
      "method": "DELETE",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "review_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews/:review_id"
    },
    "deleteReviewRequest": {
      "method": "DELETE",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "reviewers": {
          "type": "string[]"
        },
        "team_reviewers": {
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/requested_reviewers"
    },
    "dismissReview": {
      "method": "PUT",
      "params": {
        "message": {
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "review_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews/:review_id/dismissals"
    },
    "get": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number"
    },
    "getComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/comments/:comment_id"
    },
    "getCommentsForReview": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "review_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews/:review_id/comments"
    },
    "getReview": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "review_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews/:review_id"
    },
    "list": {
      "method": "GET",
      "params": {
        "base": {
          "type": "string"
        },
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "head": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "popularity",
            "long-running"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls"
    },
    "listComments": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/comments"
    },
    "listCommentsForRepo": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/comments"
    },
    "listCommits": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/commits"
    },
    "listFiles": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/files"
    },
    "listReviewRequests": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/requested_reviewers"
    },
    "listReviews": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews"
    },
    "merge": {
      "method": "PUT",
      "params": {
        "commit_message": {
          "type": "string"
        },
        "commit_title": {
          "type": "string"
        },
        "merge_method": {
          "enum": [
            "merge",
            "squash",
            "rebase"
          ],
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/merge"
    },
    "submitReview": {
      "method": "POST",
      "params": {
        "body": {
          "type": "string"
        },
        "event": {
          "enum": [
            "APPROVE",
            "REQUEST_CHANGES",
            "COMMENT"
          ],
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "review_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews/:review_id/events"
    },
    "update": {
      "method": "PATCH",
      "params": {
        "base": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "maintainer_can_modify": {
          "type": "boolean"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number"
    },
    "updateComment": {
      "method": "PATCH",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/comments/:comment_id"
    }
  },
  "rateLimit": {
    "get": {
      "method": "GET",
      "params": {},
      "url": "/rate_limit"
    }
  },
  "reactions": {
    "createForCommitComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/comments/:comment_id/reactions"
    },
    "createForIssue": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/reactions"
    },
    "createForIssueComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/comments/:comment_id/reactions"
    },
    "createForPullRequestReviewComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/comments/:comment_id/reactions"
    },
    "createForTeamDiscussion": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "required": true,
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/reactions"
    },
    "createForTeamDiscussionComment": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "comment_number": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "required": true,
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"
    },
    "delete": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "DELETE",
      "params": {
        "reaction_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/reactions/:reaction_id"
    },
    "listForCommitComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/comments/:comment_id/reactions"
    },
    "listForIssue": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/reactions"
    },
    "listForIssueComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/comments/:comment_id/reactions"
    },
    "listForPullRequestReviewComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/comments/:comment_id/reactions"
    },
    "listForTeamDiscussion": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/reactions"
    },
    "listForTeamDiscussionComment": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "comment_number": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"
    }
  },
  "repos": {
    "acceptInvitation": {
      "method": "PATCH",
      "params": {
        "invitation_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/repository_invitations/:invitation_id"
    },
    "addCollaborator": {
      "method": "PUT",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "permission": {
          "enum": [
            "pull",
            "push",
            "admin"
          ],
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/collaborators/:username"
    },
    "addDeployKey": {
      "method": "POST",
      "params": {
        "key": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "read_only": {
          "type": "boolean"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/keys"
    },
    "addProtectedBranchAdminEnforcement": {
      "method": "POST",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins"
    },
    "addProtectedBranchRequiredSignatures": {
      "headers": {
        "accept": "application/vnd.github.zzzax-preview+json"
      },
      "method": "POST",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_signatures"
    },
    "addProtectedBranchRequiredStatusChecksContexts": {
      "method": "POST",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "contexts": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
    },
    "addProtectedBranchTeamRestrictions": {
      "method": "POST",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "teams": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    "addProtectedBranchUserRestrictions": {
      "method": "POST",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "users": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    "checkCollaborator": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/collaborators/:username"
    },
    "compareCommits": {
      "method": "GET",
      "params": {
        "base": {
          "required": true,
          "type": "string"
        },
        "head": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/compare/:base...:head"
    },
    "createCommitComment": {
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "line": {
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "position": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:sha/comments"
    },
    "createDeployment": {
      "method": "POST",
      "params": {
        "auto_merge": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "payload": {
          "type": "string"
        },
        "production_environment": {
          "type": "boolean"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "required_contexts": {
          "type": "string[]"
        },
        "task": {
          "type": "string"
        },
        "transient_environment": {
          "type": "boolean"
        }
      },
      "url": "/repos/:owner/:repo/deployments"
    },
    "createDeploymentStatus": {
      "method": "POST",
      "params": {
        "auto_inactive": {
          "type": "boolean"
        },
        "deployment_id": {
          "required": true,
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "environment_url": {
          "type": "string"
        },
        "log_url": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "error",
            "failure",
            "inactive",
            "pending",
            "success"
          ],
          "required": true,
          "type": "string"
        },
        "target_url": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/deployments/:deployment_id/statuses"
    },
    "createFile": {
      "method": "PUT",
      "params": {
        "author": {
          "type": "object"
        },
        "author.email": {
          "required": true,
          "type": "string"
        },
        "author.name": {
          "required": true,
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "committer": {
          "type": "object"
        },
        "committer.email": {
          "required": true,
          "type": "string"
        },
        "committer.name": {
          "required": true,
          "type": "string"
        },
        "content": {
          "required": true,
          "type": "string"
        },
        "message": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "path": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/contents/:path"
    },
    "createForAuthenticatedUser": {
      "method": "POST",
      "params": {
        "allow_merge_commit": {
          "type": "boolean"
        },
        "allow_rebase_merge": {
          "type": "boolean"
        },
        "allow_squash_merge": {
          "type": "boolean"
        },
        "auto_init": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "gitignore_template": {
          "type": "string"
        },
        "has_issues": {
          "type": "boolean"
        },
        "has_projects": {
          "type": "boolean"
        },
        "has_wiki": {
          "type": "boolean"
        },
        "homepage": {
          "type": "string"
        },
        "license_template": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "private": {
          "type": "boolean"
        },
        "team_id": {
          "type": "integer"
        }
      },
      "url": "/user/repos"
    },
    "createFork": {
      "method": "POST",
      "params": {
        "organization": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/forks"
    },
    "createHook": {
      "method": "POST",
      "params": {
        "active": {
          "type": "boolean"
        },
        "config": {
          "required": true,
          "type": "object"
        },
        "config.content_type": {
          "type": "string"
        },
        "config.insecure_ssl": {
          "type": "string"
        },
        "config.secret": {
          "type": "string"
        },
        "config.url": {
          "required": true,
          "type": "string"
        },
        "events": {
          "type": "string[]"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks"
    },
    "createInOrg": {
      "method": "POST",
      "params": {
        "allow_merge_commit": {
          "type": "boolean"
        },
        "allow_rebase_merge": {
          "type": "boolean"
        },
        "allow_squash_merge": {
          "type": "boolean"
        },
        "auto_init": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "gitignore_template": {
          "type": "string"
        },
        "has_issues": {
          "type": "boolean"
        },
        "has_projects": {
          "type": "boolean"
        },
        "has_wiki": {
          "type": "boolean"
        },
        "homepage": {
          "type": "string"
        },
        "license_template": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "private": {
          "type": "boolean"
        },
        "team_id": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/repos"
    },
    "createRelease": {
      "method": "POST",
      "params": {
        "body": {
          "type": "string"
        },
        "draft": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "prerelease": {
          "type": "boolean"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tag_name": {
          "required": true,
          "type": "string"
        },
        "target_commitish": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases"
    },
    "createStatus": {
      "method": "POST",
      "params": {
        "context": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "error",
            "failure",
            "pending",
            "success"
          ],
          "required": true,
          "type": "string"
        },
        "target_url": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/statuses/:sha"
    },
    "declineInvitation": {
      "method": "DELETE",
      "params": {
        "invitation_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/repository_invitations/:invitation_id"
    },
    "delete": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo"
    },
    "deleteCommitComment": {
      "method": "DELETE",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/comments/:comment_id"
    },
    "deleteDownload": {
      "method": "DELETE",
      "params": {
        "download_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/downloads/:download_id"
    },
    "deleteFile": {
      "method": "DELETE",
      "params": {
        "author": {
          "type": "object"
        },
        "branch": {
          "type": "string"
        },
        "committer": {
          "type": "object"
        },
        "message": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "path": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/contents/:path"
    },
    "deleteHook": {
      "method": "DELETE",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks/:hook_id"
    },
    "deleteInvitation": {
      "method": "DELETE",
      "params": {
        "invitation_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/invitations/:invitation_id"
    },
    "deleteRelease": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "release_id": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/:release_id"
    },
    "deleteReleaseAsset": {
      "method": "DELETE",
      "params": {
        "asset_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/assets/:asset_id"
    },
    "get": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo"
    },
    "getArchiveLink": {
      "method": "GET",
      "params": {
        "archive_format": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/:archive_format/:ref"
    },
    "getBranch": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch"
    },
    "getBranchProtection": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection"
    },
    "getCodeFrequencyStats": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/stats/code_frequency"
    },
    "getCollaboratorPermissionLevel": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/collaborators/:username/permission"
    },
    "getCombinedStatusForRef": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:ref/status"
    },
    "getCommit": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:sha"
    },
    "getCommitActivityStats": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/stats/commit_activity"
    },
    "getCommitComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/comments/:comment_id"
    },
    "getCommitRefSha": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:ref"
    },
    "getContents": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "path": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/contents/:path"
    },
    "getContributorsStats": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/stats/contributors"
    },
    "getDeployKey": {
      "method": "GET",
      "params": {
        "key_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/keys/:key_id"
    },
    "getDeployment": {
      "method": "GET",
      "params": {
        "deployment_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/deployments/:deployment_id"
    },
    "getDeploymentStatus": {
      "method": "GET",
      "params": {
        "deployment_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "status_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/deployments/:deployment_id/statuses/:status_id"
    },
    "getDownload": {
      "method": "GET",
      "params": {
        "download_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/downloads/:download_id"
    },
    "getHook": {
      "method": "GET",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks/:hook_id"
    },
    "getLatestPagesBuild": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pages/builds/latest"
    },
    "getLatestRelease": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/latest"
    },
    "getPages": {
      "headers": {
        "accept": "application/vnd.github.mister-fantastic-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pages"
    },
    "getPagesBuild": {
      "method": "GET",
      "params": {
        "build_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pages/builds/:build_id"
    },
    "getParticipationStats": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/stats/participation"
    },
    "getProtectedBranchAdminEnforcement": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins"
    },
    "getProtectedBranchPullRequestReviewEnforcement": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"
    },
    "getProtectedBranchRequiredSignatures": {
      "headers": {
        "accept": "application/vnd.github.zzzax-preview+json"
      },
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_signatures"
    },
    "getProtectedBranchRequiredStatusChecks": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks"
    },
    "getProtectedBranchRestrictions": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions"
    },
    "getPunchCardStats": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/stats/punch_card"
    },
    "getReadme": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/readme"
    },
    "getRelease": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "release_id": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/:release_id"
    },
    "getReleaseAsset": {
      "method": "GET",
      "params": {
        "asset_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/assets/:asset_id"
    },
    "getReleaseByTag": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tag": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/tags/:tag"
    },
    "list": {
      "method": "GET",
      "params": {
        "affiliation": {
          "enum": [
            "owner",
            "collaborator",
            "organization_member"
          ],
          "type": "string"
        },
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "pushed",
            "full_name"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "all",
            "owner",
            "public",
            "private",
            "member"
          ],
          "type": "string"
        },
        "visibility": {
          "enum": [
            "all",
            "public",
            "private"
          ],
          "type": "string"
        }
      },
      "url": "/user/repos"
    },
    "listAssetsForRelease": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "release_id": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/:release_id/assets"
    },
    "listBranches": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "protected": {
          "type": "boolean"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches"
    },
    "listCollaborators": {
      "method": "GET",
      "params": {
        "affiliation": {
          "enum": [
            "outside",
            "direct",
            "all"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/collaborators"
    },
    "listCommentsForCommit": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:ref/comments"
    },
    "listCommitComments": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/comments"
    },
    "listCommits": {
      "method": "GET",
      "params": {
        "author": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "path": {
          "type": "string"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "type": "string"
        },
        "since": {
          "type": "string"
        },
        "until": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits"
    },
    "listContributors": {
      "method": "GET",
      "params": {
        "anon": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/contributors"
    },
    "listDeployKeys": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/keys"
    },
    "listDeploymentStatuses": {
      "method": "GET",
      "params": {
        "deployment_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/deployments/:deployment_id/statuses"
    },
    "listDeployments": {
      "method": "GET",
      "params": {
        "environment": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "ref": {
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "type": "string"
        },
        "task": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/deployments"
    },
    "listDownloads": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/downloads"
    },
    "listForOrg": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "type": {
          "enum": [
            "all",
            "public",
            "private",
            "forks",
            "sources",
            "member"
          ],
          "type": "string"
        }
      },
      "url": "/orgs/:org/repos"
    },
    "listForUser": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "pushed",
            "full_name"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "all",
            "owner",
            "member"
          ],
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/repos"
    },
    "listForks": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "newest",
            "oldest",
            "stargazers"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/forks"
    },
    "listHooks": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks"
    },
    "listInvitations": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/invitations"
    },
    "listInvitationsForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/repository_invitations"
    },
    "listLanguages": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/languages"
    },
    "listPagesBuilds": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pages/builds"
    },
    "listProtectedBranchRequiredStatusChecksContexts": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
    },
    "listProtectedBranchTeamRestrictions": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    "listProtectedBranchUserRestrictions": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    "listPublic": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        }
      },
      "url": "/repositories"
    },
    "listReleases": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases"
    },
    "listStatusesForRef": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:ref/statuses"
    },
    "listTags": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/tags"
    },
    "listTeams": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/teams"
    },
    "listTopics": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/topics"
    },
    "merge": {
      "method": "POST",
      "params": {
        "base": {
          "required": true,
          "type": "string"
        },
        "commit_message": {
          "type": "string"
        },
        "head": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/merges"
    },
    "pingHook": {
      "method": "POST",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks/:hook_id/pings"
    },
    "removeBranchProtection": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection"
    },
    "removeCollaborator": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/collaborators/:username"
    },
    "removeDeployKey": {
      "method": "DELETE",
      "params": {
        "key_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/keys/:key_id"
    },
    "removeProtectedBranchAdminEnforcement": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins"
    },
    "removeProtectedBranchPullRequestReviewEnforcement": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"
    },
    "removeProtectedBranchRequiredSignatures": {
      "headers": {
        "accept": "application/vnd.github.zzzax-preview+json"
      },
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_signatures"
    },
    "removeProtectedBranchRequiredStatusChecks": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks"
    },
    "removeProtectedBranchRequiredStatusChecksContexts": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "contexts": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
    },
    "removeProtectedBranchRestrictions": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions"
    },
    "removeProtectedBranchTeamRestrictions": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "teams": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    "removeProtectedBranchUserRestrictions": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "users": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    "replaceProtectedBranchRequiredStatusChecksContexts": {
      "method": "PUT",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "contexts": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
    },
    "replaceProtectedBranchTeamRestrictions": {
      "method": "PUT",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "teams": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    "replaceProtectedBranchUserRestrictions": {
      "method": "PUT",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "users": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    "replaceTopics": {
      "method": "PUT",
      "params": {
        "names": {
          "required": true,
          "type": "string[]"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/topics"
    },
    "requestPageBuild": {
      "headers": {
        "accept": "application/vnd.github.mister-fantastic-preview+json"
      },
      "method": "POST",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pages/builds"
    },
    "testPushHook": {
      "method": "POST",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks/:hook_id/tests"
    },
    "transfer": {
      "headers": {
        "accept": "application/vnd.github.nightshade-preview+json"
      },
      "method": "POST",
      "params": {
        "new_owner": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "team_ids": {
          "type": "integer[]"
        }
      },
      "url": "/repos/:owner/:repo/transfer"
    },
    "update": {
      "headers": {
        "accept": "application/vnd.github.x-ray-preview+json"
      },
      "method": "PATCH",
      "params": {
        "allow_merge_commit": {
          "type": "boolean"
        },
        "allow_rebase_merge": {
          "type": "boolean"
        },
        "allow_squash_merge": {
          "type": "boolean"
        },
        "anonymous_access_enabled": {
          "type": "boolean"
        },
        "archived": {
          "type": "boolean"
        },
        "default_branch": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "has_issues": {
          "type": "boolean"
        },
        "has_projects": {
          "type": "boolean"
        },
        "has_wiki": {
          "type": "boolean"
        },
        "homepage": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "private": {
          "type": "boolean"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo"
    },
    "updateBranchProtection": {
      "method": "PUT",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "enforce_admins": {
          "allowNull": true,
          "required": true,
          "type": "boolean"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "required_pull_request_reviews": {
          "allowNull": true,
          "required": true,
          "type": "object"
        },
        "required_pull_request_reviews.dismiss_stale_reviews": {
          "type": "boolean"
        },
        "required_pull_request_reviews.dismissal_restrictions": {
          "type": "object"
        },
        "required_pull_request_reviews.dismissal_restrictions.teams": {
          "type": "string[]"
        },
        "required_pull_request_reviews.dismissal_restrictions.users": {
          "type": "string[]"
        },
        "required_pull_request_reviews.require_code_owner_reviews": {
          "type": "boolean"
        },
        "required_pull_request_reviews.required_approving_review_count": {
          "type": "integer"
        },
        "required_status_checks": {
          "allowNull": true,
          "required": true,
          "type": "object"
        },
        "required_status_checks.contexts": {
          "required": true,
          "type": "string[]"
        },
        "required_status_checks.strict": {
          "required": true,
          "type": "boolean"
        },
        "restrictions": {
          "allowNull": true,
          "required": true,
          "type": "object"
        },
        "restrictions.teams": {
          "type": "string[]"
        },
        "restrictions.users": {
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection"
    },
    "updateCommitComment": {
      "method": "PATCH",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/comments/:comment_id"
    },
    "updateFile": {
      "method": "PUT",
      "params": {
        "author": {
          "type": "object"
        },
        "author.email": {
          "required": true,
          "type": "string"
        },
        "author.name": {
          "required": true,
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "committer": {
          "type": "object"
        },
        "committer.email": {
          "required": true,
          "type": "string"
        },
        "committer.name": {
          "required": true,
          "type": "string"
        },
        "content": {
          "required": true,
          "type": "string"
        },
        "message": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "path": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/contents/:path"
    },
    "updateHook": {
      "method": "PATCH",
      "params": {
        "active": {
          "type": "boolean"
        },
        "add_events": {
          "type": "string[]"
        },
        "config": {
          "type": "object"
        },
        "config.content_type": {
          "type": "string"
        },
        "config.insecure_ssl": {
          "type": "string"
        },
        "config.secret": {
          "type": "string"
        },
        "config.url": {
          "required": true,
          "type": "string"
        },
        "events": {
          "type": "string[]"
        },
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "remove_events": {
          "type": "string[]"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks/:hook_id"
    },
    "updateInvitation": {
      "method": "PATCH",
      "params": {
        "invitation_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "permissions": {
          "enum": [
            "read",
            "write",
            "admin"
          ],
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/invitations/:invitation_id"
    },
    "updateProtectedBranchPullRequestReviewEnforcement": {
      "method": "PATCH",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "dismiss_stale_reviews": {
          "type": "boolean"
        },
        "dismissal_restrictions": {
          "type": "object"
        },
        "dismissal_restrictions.teams": {
          "type": "string[]"
        },
        "dismissal_restrictions.users": {
          "type": "string[]"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "require_code_owner_reviews": {
          "type": "boolean"
        },
        "required_approving_review_count": {
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"
    },
    "updateProtectedBranchRequiredStatusChecks": {
      "method": "PATCH",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "contexts": {
          "type": "string[]"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "strict": {
          "type": "boolean"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks"
    },
    "updateRelease": {
      "method": "PATCH",
      "params": {
        "body": {
          "type": "string"
        },
        "draft": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "prerelease": {
          "type": "boolean"
        },
        "release_id": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tag_name": {
          "type": "string"
        },
        "target_commitish": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/:release_id"
    },
    "updateReleaseAsset": {
      "method": "PATCH",
      "params": {
        "asset_id": {
          "required": true,
          "type": "integer"
        },
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/assets/:asset_id"
    },
    "uploadReleaseAsset": {
      "method": "POST",
      "params": {
        "file": {
          "mapTo": "data",
          "required": true,
          "type": "string | object"
        },
        "headers": {
          "required": true,
          "type": "object"
        },
        "headers.content-length": {
          "required": true,
          "type": "integer"
        },
        "headers.content-type": {
          "required": true,
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "url": {
          "required": true,
          "type": "string"
        }
      },
      "url": ":url"
    }
  },
  "search": {
    "code": {
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "desc",
            "asc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "indexed"
          ],
          "type": "string"
        }
      },
      "url": "/search/code"
    },
    "commits": {
      "headers": {
        "accept": "application/vnd.github.cloak-preview+json"
      },
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "desc",
            "asc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "author-date",
            "committer-date"
          ],
          "type": "string"
        }
      },
      "url": "/search/commits"
    },
    "issues": {
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "desc",
            "asc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "comments",
            "reactions",
            "reactions-+1",
            "reactions--1",
            "reactions-smile",
            "reactions-thinking_face",
            "reactions-heart",
            "reactions-tada",
            "interactions",
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/search/issues"
    },
    "issuesAndPullRequests": {
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "desc",
            "asc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "comments",
            "reactions",
            "reactions-+1",
            "reactions--1",
            "reactions-smile",
            "reactions-thinking_face",
            "reactions-heart",
            "reactions-tada",
            "interactions",
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/search/issues"
    },
    "labels": {
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "desc",
            "asc"
          ],
          "type": "string"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "repository_id": {
          "required": true,
          "type": "integer"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/search/labels"
    },
    "repos": {
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "desc",
            "asc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "stars",
            "forks",
            "help-wanted-issues",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/search/repositories"
    },
    "topics": {
      "method": "GET",
      "params": {
        "q": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/search/topics"
    },
    "users": {
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "desc",
            "asc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "followers",
            "repositories",
            "joined"
          ],
          "type": "string"
        }
      },
      "url": "/search/users"
    }
  },
  "teams": {
    "addMember": {
      "method": "PUT",
      "params": {
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/members/:username"
    },
    "addOrUpdateMembership": {
      "method": "PUT",
      "params": {
        "role": {
          "enum": [
            "member",
            "maintainer"
          ],
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/memberships/:username"
    },
    "addOrUpdateProject": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "PUT",
      "params": {
        "permission": {
          "enum": [
            "read",
            "write",
            "admin"
          ],
          "type": "string"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/projects/:project_id"
    },
    "addOrUpdateRepo": {
      "method": "PUT",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "permission": {
          "enum": [
            "pull",
            "push",
            "admin"
          ],
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/repos/:owner/:repo"
    },
    "checkManagesRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/repos/:owner/:repo"
    },
    "create": {
      "method": "POST",
      "params": {
        "description": {
          "type": "string"
        },
        "ldap_dn": {
          "type": "string"
        },
        "maintainers": {
          "type": "string[]"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "parent_team_id": {
          "type": "integer"
        },
        "permission": {
          "enum": [
            "pull",
            "push",
            "admin"
          ],
          "type": "string"
        },
        "privacy": {
          "enum": [
            "secret",
            "closed"
          ],
          "type": "string"
        },
        "repo_names": {
          "type": "string[]"
        }
      },
      "url": "/orgs/:org/teams"
    },
    "createDiscussion": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "private": {
          "type": "boolean"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "title": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/discussions"
    },
    "createDiscussionComment": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments"
    },
    "delete": {
      "method": "DELETE",
      "params": {
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id"
    },
    "deleteDiscussion": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "DELETE",
      "params": {
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number"
    },
    "deleteDiscussionComment": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "DELETE",
      "params": {
        "comment_number": {
          "required": true,
          "type": "integer"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
    },
    "get": {
      "method": "GET",
      "params": {
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id"
    },
    "getDiscussion": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "GET",
      "params": {
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number"
    },
    "getDiscussionComment": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "GET",
      "params": {
        "comment_number": {
          "required": true,
          "type": "integer"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
    },
    "getMember": {
      "method": "GET",
      "params": {
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/members/:username"
    },
    "getMembership": {
      "method": "GET",
      "params": {
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/memberships/:username"
    },
    "list": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/teams"
    },
    "listChild": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/teams"
    },
    "listDiscussionComments": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments"
    },
    "listDiscussions": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions"
    },
    "listForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/teams"
    },
    "listMembers": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "role": {
          "enum": [
            "member",
            "maintainer",
            "all"
          ],
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/members"
    },
    "listProjects": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/projects"
    },
    "listRepos": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/repos"
    },
    "removeMember": {
      "method": "DELETE",
      "params": {
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/members/:username"
    },
    "removeMembership": {
      "method": "DELETE",
      "params": {
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/memberships/:username"
    },
    "removeProject": {
      "method": "DELETE",
      "params": {
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/projects/:project_id"
    },
    "removeRepo": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/repos/:owner/:repo"
    },
    "reviewProject": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/projects/:project_id"
    },
    "update": {
      "method": "PATCH",
      "params": {
        "description": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "parent_team_id": {
          "type": "integer"
        },
        "permission": {
          "enum": [
            "pull",
            "push",
            "admin"
          ],
          "type": "string"
        },
        "privacy": {
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id"
    },
    "updateDiscussion": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "PATCH",
      "params": {
        "body": {
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "title": {
          "type": "string"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number"
    },
    "updateDiscussionComment": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "PATCH",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "comment_number": {
          "required": true,
          "type": "integer"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
    }
  },
  "users": {
    "addEmails": {
      "method": "POST",
      "params": {},
      "url": "/user/emails"
    },
    "checkFollowing": {
      "method": "GET",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/following/:username"
    },
    "checkFollowingForUser": {
      "method": "GET",
      "params": {
        "target_user": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/following/:target_user"
    },
    "createGpgKey": {
      "method": "POST",
      "params": {
        "armored_public_key": {
          "type": "string"
        }
      },
      "url": "/user/gpg_keys"
    },
    "createPublicKey": {
      "method": "POST",
      "params": {
        "key": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "url": "/user/keys"
    },
    "deleteEmails": {
      "method": "DELETE",
      "params": {},
      "url": "/user/emails"
    },
    "deleteGpgKey": {
      "method": "DELETE",
      "params": {
        "gpg_key_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/gpg_keys/:gpg_key_id"
    },
    "deletePublicKey": {
      "method": "DELETE",
      "params": {
        "key_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/keys/:key_id"
    },
    "follow": {
      "method": "PUT",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/following/:username"
    },
    "getAuthenticated": {
      "method": "GET",
      "params": {},
      "url": "/user"
    },
    "getByUsername": {
      "method": "GET",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username"
    },
    "getContextForUser": {
      "headers": {
        "accept": "application/vnd.github.hagar-preview+json"
      },
      "method": "GET",
      "params": {
        "subject_id": {
          "type": "string"
        },
        "subject_type": {
          "enum": [
            "organization",
            "repository",
            "issue",
            "pull_request"
          ],
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/hovercard"
    },
    "getGpgKey": {
      "method": "GET",
      "params": {
        "gpg_key_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/gpg_keys/:gpg_key_id"
    },
    "getPublicKey": {
      "method": "GET",
      "params": {
        "key_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/keys/:key_id"
    },
    "list": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/users"
    },
    "listEmails": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/emails"
    },
    "listFollowersForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/followers"
    },
    "listFollowersForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/followers"
    },
    "listFollowingForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/following"
    },
    "listFollowingForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/following"
    },
    "listGpgKeys": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/gpg_keys"
    },
    "listGpgKeysForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/gpg_keys"
    },
    "listPublicEmails": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/public_emails"
    },
    "listPublicKeys": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/keys"
    },
    "listPublicKeysForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/keys"
    },
    "unfollow": {
      "method": "DELETE",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/following/:username"
    },
    "updateAuthenticated": {
      "method": "PATCH",
      "params": {
        "bio": {
          "type": "string"
        },
        "blog": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "hireable": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "url": "/user"
    }
  }
}
